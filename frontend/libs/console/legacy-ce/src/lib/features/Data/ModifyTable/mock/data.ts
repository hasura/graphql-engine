import { Metadata } from '../../../hasura-metadata-types';

export const mockMetadata: Metadata = {
  resource_version: 365,
  metadata: {
    version: 3,
    sources: [
      {
        name: 'BigQuery',
        kind: 'bigquery',
        tables: [
          {
            table: {
              dataset: 'samples_for_documentation',
              name: 'articles',
            },
          },
          {
            table: {
              dataset: 'samples_for_documentation',
              name: 'authors',
            },
          },
          {
            table: {
              dataset: 'horses',
              name: 'grand_national_winners',
            },
          },
          {
            table: {
              dataset: 'horses',
              name: 'horse_names',
            },
          },
          {
            table: {
              dataset: 'luca',
              name: 'users',
            },
          },
        ],
        configuration: {
          datasets: ['horses', 'luca', 'samples_for_documentation'],
          global_select_limit: '1000.0',
          project_id: 'regency-polecat-beehive',
          service_account: {
            client_email:
              'bigquery-testing@regency-polecat-beehive.iam.gserviceaccount.com',
            private_key:
              '-----BEGIN PRIVATE KEY-----\nsecret!\n-----END PRIVATE KEY-----\n',
            project_id: 'regency-polecat-beehive',
          },
        },
      },
      {
        name: 'postgres_demo',
        kind: 'postgres',
        tables: [
          {
            table: {
              name: 'Album',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'Artist',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'Customer',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'Employee',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'Genre',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'Invoice',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'InvoiceLine',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'MediaType',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'Playlist',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'PlaylistTrack',
              schema: 'public',
            },
          },
          {
            table: {
              name: 'Track',
              schema: 'public',
            },
          },
        ],
        configuration: {
          connection_info: {
            database_url: {
              from_env: 'POSTGRES_DEMO_DATABASE_URL',
            },
            isolation_level: 'read-committed',
            use_prepared_statements: false,
          },
        },
        customization: {
          root_fields: {
            namespace: 'postgres',
          },
        },
      },
      {
        name: 'sqlite',
        kind: 'sqlite',
        tables: [
          {
            table: ['Album'],
          },
          {
            table: ['Artist'],
          },
          {
            table: ['Customer'],
          },
          {
            table: ['Employee'],
          },
          {
            table: ['Genre'],
          },
          {
            table: ['Invoice'],
          },
          {
            table: ['InvoiceLine'],
          },
          {
            table: ['MediaType'],
          },
          {
            table: ['Playlist'],
          },
          {
            table: ['PlaylistTrack'],
          },
          {
            table: ['Track'],
          },
        ],
        configuration: {
          template: null,
          timeout: null,
          value: {
            db: '/sqlite.db',
            explicit_main_schema: false,
            include_sqlite_meta_tables: false,
          },
        },
      },
      {
        name: 'sqlserver',
        kind: 'mssql',
        tables: [],
        configuration: {
          connection_info: {
            connection_string:
              'Driver={ODBC Driver 18 for SQL Server};Server=sqlserver,1433;Database=Chinook;UID=sa;PWD=Password!;Encrypt=yes;TrustServerCertificate=yes;ConnectionTimeout=30;',
            pool_settings: {
              idle_timeout: 5,
              max_connections: null,
              total_max_connections: null,
            },
          },
        },
        customization: {
          root_fields: {
            namespace: 'sqlserver',
          },
        },
      },
    ],
    backend_configs: {
      dataconnector: {
        sqlite: {
          uri: 'http://sqlite:8100',
        },
      },
    },
  },
};

export const tableInfo = {
  name: ['Customer'],
  type: 'table',
  columns: [
    {
      name: 'CustomerId',
      type: 'number',
      nullable: false,
      insertable: false,
      updatable: false,
    },
    {
      name: 'FirstName',
      type: 'string',
      nullable: false,
      insertable: false,
      updatable: false,
    },
    {
      name: 'LastName',
      type: 'string',
      nullable: false,
      insertable: false,
      updatable: false,
    },
    {
      name: 'Company',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'Address',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'City',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'State',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'Country',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'PostalCode',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'Phone',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'Fax',
      type: 'string',
      nullable: true,
      insertable: false,
      updatable: false,
    },
    {
      name: 'Email',
      type: 'string',
      nullable: false,
      insertable: false,
      updatable: false,
    },
    {
      name: 'SupportRepId',
      type: 'number',
      nullable: true,
      insertable: false,
      updatable: false,
    },
  ],
  primary_key: ['CustomerId'],
  foreign_keys: {
    'Customer.SupportRepId->Employee.EmployeeId': {
      foreign_table: ['Employee'],
      column_mapping: { SupportRepId: 'EmployeeId' },
    },
  },
  description:
    'CREATE TABLE [Customer]\n(\n    [CustomerId] INTEGER  NOT NULL,\n    [FirstName] NVARCHAR(40)  NOT NULL,\n    [LastName] NVARCHAR(20)  NOT NULL,\n    [Company] NVARCHAR(80),\n    [Address] NVARCHAR(70),\n    [City] NVARCHAR(40),\n    [State] NVARCHAR(40),\n    [Country] NVARCHAR(40),\n    [PostalCode] NVARCHAR(10),\n    [Phone] NVARCHAR(24),\n    [Fax] NVARCHAR(24),\n    [Email] NVARCHAR(60)  NOT NULL,\n    [SupportRepId] INTEGER,\n    CONSTRAINT [PK_Customer] PRIMARY KEY  ([CustomerId]),\n    FOREIGN KEY ([SupportRepId]) REFERENCES [Employee] ([EmployeeId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
  insertable: false,
  updatable: false,
  deletable: false,
};

export const introspection = {
  data: {
    __schema: {
      queryType: { name: 'query_root' },
      mutationType: null,
      subscriptionType: { name: 'subscription_root' },
      types: [
        {
          kind: 'OBJECT',
          name: 'Album',
          description:
            'CREATE TABLE [Album]\n(\n    [AlbumId] INTEGER  NOT NULL,\n    [Title] NVARCHAR(160)  NOT NULL,\n    [ArtistId] INTEGER  NOT NULL,\n    CONSTRAINT [PK_Album] PRIMARY KEY  ([AlbumId]),\n    FOREIGN KEY ([ArtistId]) REFERENCES [Artist] ([ArtistId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'string', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Album_aggregate',
          description: 'aggregated selection of "Album"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Album_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Album', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Album_aggregate_fields',
          description: 'aggregate fields of "Album"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Album_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Album_max_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Album_min_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Album_sum_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Album_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Album". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'AlbumId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'ArtistId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Title',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Album_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Album_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Album_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Album_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Album_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Album_order_by',
          description: 'Ordering options when selecting data from "Album".',
          fields: null,
          inputFields: [
            {
              name: 'AlbumId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'ArtistId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Title',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Album_select_column',
          description: 'select columns of table "Album"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'AlbumId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ArtistId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Album_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Artist',
          description:
            'CREATE TABLE [Artist]\n(\n    [ArtistId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_Artist] PRIMARY KEY  ([ArtistId])\n)',
          fields: [
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Artist_aggregate',
          description: 'aggregated selection of "Artist"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Artist_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Artist', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Artist_aggregate_fields',
          description: 'aggregate fields of "Artist"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Artist_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Artist_max_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Artist_min_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Artist_sum_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Artist_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Artist". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'ArtistId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Artist_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Artist_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Artist_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Artist_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Artist_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Artist_order_by',
          description: 'Ordering options when selecting data from "Artist".',
          fields: null,
          inputFields: [
            {
              name: 'ArtistId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Artist_select_column',
          description: 'select columns of table "Artist"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'ArtistId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Artist_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'ArtistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'SCALAR',
          name: 'Boolean',
          description: null,
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Customer',
          description:
            'CREATE TABLE [Customer]\n(\n    [CustomerId] INTEGER  NOT NULL,\n    [FirstName] NVARCHAR(40)  NOT NULL,\n    [LastName] NVARCHAR(20)  NOT NULL,\n    [Company] NVARCHAR(80),\n    [Address] NVARCHAR(70),\n    [City] NVARCHAR(40),\n    [State] NVARCHAR(40),\n    [Country] NVARCHAR(40),\n    [PostalCode] NVARCHAR(10),\n    [Phone] NVARCHAR(24),\n    [Fax] NVARCHAR(24),\n    [Email] NVARCHAR(60)  NOT NULL,\n    [SupportRepId] INTEGER,\n    CONSTRAINT [PK_Customer] PRIMARY KEY  ([CustomerId]),\n    FOREIGN KEY ([SupportRepId]) REFERENCES [Employee] ([EmployeeId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
          fields: [
            {
              name: 'Address',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Company',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'string', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'string', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'string', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'SupportRepId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Customer_aggregate',
          description: 'aggregated selection of "Customer"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Customer_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Customer', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Customer_aggregate_fields',
          description: 'aggregate fields of "Customer"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Customer_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Customer_max_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Customer_min_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Customer_sum_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Customer_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Customer". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'Address',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'City',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Company',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Country',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'CustomerId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Email',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Fax',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'FirstName',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'LastName',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Phone',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'PostalCode',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'State',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'SupportRepId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Customer_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Customer_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Customer_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Customer_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'Address',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Company',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'SupportRepId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Customer_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'Address',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Company',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'SupportRepId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Customer_order_by',
          description: 'Ordering options when selecting data from "Customer".',
          fields: null,
          inputFields: [
            {
              name: 'Address',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'City',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Company',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Country',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'CustomerId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Email',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Fax',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'FirstName',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'LastName',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Phone',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'PostalCode',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'State',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'SupportRepId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Customer_select_column',
          description: 'select columns of table "Customer"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'Address',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Company',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'SupportRepId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Customer_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'SupportRepId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'SCALAR',
          name: 'DateTime',
          description: null,
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'DateTime_sqlite_comparison_exp',
          description:
            'Boolean expression to compare columns of type "DateTime". All fields are combined with logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: '_eq',
              description: null,
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              defaultValue: null,
            },
            {
              name: '_gt',
              description: null,
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              defaultValue: null,
            },
            {
              name: '_gte',
              description: null,
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              defaultValue: null,
            },
            {
              name: '_in',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: { kind: 'SCALAR', name: 'DateTime', ofType: null },
                },
              },
              defaultValue: null,
            },
            {
              name: '_in_year',
              description: null,
              type: { kind: 'SCALAR', name: 'int', ofType: null },
              defaultValue: null,
            },
            {
              name: '_is_null',
              description: null,
              type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
              defaultValue: null,
            },
            {
              name: '_lt',
              description: null,
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              defaultValue: null,
            },
            {
              name: '_lte',
              description: null,
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              defaultValue: null,
            },
            {
              name: '_neq',
              description: null,
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              defaultValue: null,
            },
            {
              name: '_nin',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: { kind: 'SCALAR', name: 'DateTime', ofType: null },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Employee',
          description:
            'CREATE TABLE [Employee]\n(\n    [EmployeeId] INTEGER  NOT NULL,\n    [LastName] NVARCHAR(20)  NOT NULL,\n    [FirstName] NVARCHAR(20)  NOT NULL,\n    [Title] NVARCHAR(30),\n    [ReportsTo] INTEGER,\n    [BirthDate] DATETIME,\n    [HireDate] DATETIME,\n    [Address] NVARCHAR(70),\n    [City] NVARCHAR(40),\n    [State] NVARCHAR(40),\n    [Country] NVARCHAR(40),\n    [PostalCode] NVARCHAR(10),\n    [Phone] NVARCHAR(24),\n    [Fax] NVARCHAR(24),\n    [Email] NVARCHAR(60),\n    CONSTRAINT [PK_Employee] PRIMARY KEY  ([EmployeeId]),\n    FOREIGN KEY ([ReportsTo]) REFERENCES [Employee] ([EmployeeId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
          fields: [
            {
              name: 'Address',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BirthDate',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'EmployeeId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'string', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'HireDate',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'string', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ReportsTo',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Employee_aggregate',
          description: 'aggregated selection of "Employee"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Employee_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Employee', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Employee_aggregate_fields',
          description: 'aggregate fields of "Employee"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Employee_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Employee_max_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Employee_min_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Employee_sum_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Employee_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Employee". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'Address',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'BirthDate',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'DateTime_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'City',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Country',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Email',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'EmployeeId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Fax',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'FirstName',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'HireDate',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'DateTime_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'LastName',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Phone',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'PostalCode',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'ReportsTo',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'State',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Title',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Employee_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Employee_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Employee_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Employee_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'Address',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'EmployeeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ReportsTo',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Employee_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'Address',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'EmployeeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ReportsTo',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Employee_order_by',
          description: 'Ordering options when selecting data from "Employee".',
          fields: null,
          inputFields: [
            {
              name: 'Address',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'BirthDate',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'City',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Country',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Email',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'EmployeeId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Fax',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'FirstName',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'HireDate',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'LastName',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Phone',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'PostalCode',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'ReportsTo',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'State',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Title',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Employee_select_column',
          description: 'select columns of table "Employee"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'Address',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BirthDate',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'City',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Country',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Email',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'EmployeeId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Fax',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'FirstName',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'HireDate',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LastName',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Phone',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PostalCode',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ReportsTo',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'State',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Title',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Employee_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'EmployeeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ReportsTo',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Genre',
          description:
            'CREATE TABLE [Genre]\n(\n    [GenreId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_Genre] PRIMARY KEY  ([GenreId])\n)',
          fields: [
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Genre_aggregate',
          description: 'aggregated selection of "Genre"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Genre_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Genre', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Genre_aggregate_fields',
          description: 'aggregate fields of "Genre"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Genre_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Genre_max_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Genre_min_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Genre_sum_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Genre_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Genre". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'GenreId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Genre_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Genre_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Genre_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Genre_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Genre_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Genre_order_by',
          description: 'Ordering options when selecting data from "Genre".',
          fields: null,
          inputFields: [
            {
              name: 'GenreId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Genre_select_column',
          description: 'select columns of table "Genre"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'GenreId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Genre_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'SCALAR',
          name: 'Int',
          description: null,
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Invoice',
          description:
            'CREATE TABLE [Invoice]\n(\n    [InvoiceId] INTEGER  NOT NULL,\n    [CustomerId] INTEGER  NOT NULL,\n    [InvoiceDate] DATETIME  NOT NULL,\n    [BillingAddress] NVARCHAR(70),\n    [BillingCity] NVARCHAR(40),\n    [BillingState] NVARCHAR(40),\n    [BillingCountry] NVARCHAR(40),\n    [BillingPostalCode] NVARCHAR(10),\n    [Total] NUMERIC(10,2)  NOT NULL,\n    CONSTRAINT [PK_Invoice] PRIMARY KEY  ([InvoiceId]),\n    FOREIGN KEY ([CustomerId]) REFERENCES [Customer] ([CustomerId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
          fields: [
            {
              name: 'BillingAddress',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCity',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCountry',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingPostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingState',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceDate',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'DateTime', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Total',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'InvoiceLine',
          description:
            'CREATE TABLE [InvoiceLine]\n(\n    [InvoiceLineId] INTEGER  NOT NULL,\n    [InvoiceId] INTEGER  NOT NULL,\n    [TrackId] INTEGER  NOT NULL,\n    [UnitPrice] NUMERIC(10,2)  NOT NULL,\n    [Quantity] INTEGER  NOT NULL,\n    CONSTRAINT [PK_InvoiceLine] PRIMARY KEY  ([InvoiceLineId]),\n    FOREIGN KEY ([InvoiceId]) REFERENCES [Invoice] ([InvoiceId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([TrackId]) REFERENCES [Track] ([TrackId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
          fields: [
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceLineId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Quantity',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'InvoiceLine_aggregate',
          description: 'aggregated selection of "InvoiceLine"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'InvoiceLine_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: {
                      kind: 'OBJECT',
                      name: 'InvoiceLine',
                      ofType: null,
                    },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'InvoiceLine_aggregate_fields',
          description: 'aggregate fields of "InvoiceLine"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'InvoiceLine_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'InvoiceLine_max_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'InvoiceLine_min_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'InvoiceLine_sum_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'InvoiceLine_bool_exp',
          description:
            'Boolean expression to filter rows from the table "InvoiceLine". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'InvoiceId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'InvoiceLineId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Quantity',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'TrackId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'InvoiceLine_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'InvoiceLine_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'InvoiceLine_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'InvoiceLine_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceLineId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Quantity',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'InvoiceLine_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceLineId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Quantity',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'InvoiceLine_order_by',
          description:
            'Ordering options when selecting data from "InvoiceLine".',
          fields: null,
          inputFields: [
            {
              name: 'InvoiceId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'InvoiceLineId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Quantity',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'TrackId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'InvoiceLine_select_column',
          description: 'select columns of table "InvoiceLine"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'InvoiceId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceLineId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Quantity',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'InvoiceLine_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceLineId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Quantity',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Invoice_aggregate',
          description: 'aggregated selection of "Invoice"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Invoice_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Invoice', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Invoice_aggregate_fields',
          description: 'aggregate fields of "Invoice"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Invoice_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Invoice_max_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Invoice_min_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Invoice_sum_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Invoice_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Invoice". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'BillingAddress',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'BillingCity',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'BillingCountry',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'BillingPostalCode',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'BillingState',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'CustomerId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'InvoiceDate',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'DateTime_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'InvoiceId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Total',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Invoice_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Invoice_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Invoice_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Invoice_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'BillingAddress',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCity',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCountry',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingPostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingState',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Total',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Invoice_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'BillingAddress',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCity',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCountry',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingPostalCode',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingState',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Total',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Invoice_order_by',
          description: 'Ordering options when selecting data from "Invoice".',
          fields: null,
          inputFields: [
            {
              name: 'BillingAddress',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'BillingCity',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'BillingCountry',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'BillingPostalCode',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'BillingState',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'CustomerId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'InvoiceDate',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'InvoiceId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Total',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Invoice_select_column',
          description: 'select columns of table "Invoice"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'BillingAddress',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCity',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingCountry',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingPostalCode',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'BillingState',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'CustomerId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceDate',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Total',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Invoice_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'CustomerId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'InvoiceId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Total',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'MediaType',
          description:
            'CREATE TABLE [MediaType]\n(\n    [MediaTypeId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_MediaType] PRIMARY KEY  ([MediaTypeId])\n)',
          fields: [
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'MediaType_aggregate',
          description: 'aggregated selection of "MediaType"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'MediaType_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'MediaType', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'MediaType_aggregate_fields',
          description: 'aggregate fields of "MediaType"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'MediaType_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'MediaType_max_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'MediaType_min_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'MediaType_sum_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'MediaType_bool_exp',
          description:
            'Boolean expression to filter rows from the table "MediaType". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'MediaTypeId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'MediaType_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'MediaType_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'MediaType_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'MediaType_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'MediaType_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'MediaType_order_by',
          description: 'Ordering options when selecting data from "MediaType".',
          fields: null,
          inputFields: [
            {
              name: 'MediaTypeId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'MediaType_select_column',
          description: 'select columns of table "MediaType"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'MediaTypeId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'MediaType_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Playlist',
          description:
            'CREATE TABLE [Playlist]\n(\n    [PlaylistId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(120),\n    CONSTRAINT [PK_Playlist] PRIMARY KEY  ([PlaylistId])\n)',
          fields: [
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'PlaylistTrack',
          description:
            'CREATE TABLE [PlaylistTrack]\n(\n    [PlaylistId] INTEGER  NOT NULL,\n    [TrackId] INTEGER  NOT NULL,\n    CONSTRAINT [PK_PlaylistTrack] PRIMARY KEY  ([PlaylistId], [TrackId]),\n    FOREIGN KEY ([PlaylistId]) REFERENCES [Playlist] ([PlaylistId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([TrackId]) REFERENCES [Track] ([TrackId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
          fields: [
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'PlaylistTrack_aggregate',
          description: 'aggregated selection of "PlaylistTrack"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'PlaylistTrack_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: {
                      kind: 'OBJECT',
                      name: 'PlaylistTrack',
                      ofType: null,
                    },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'PlaylistTrack_aggregate_fields',
          description: 'aggregate fields of "PlaylistTrack"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'PlaylistTrack_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'PlaylistTrack_max_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'PlaylistTrack_min_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'PlaylistTrack_sum_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'PlaylistTrack_bool_exp',
          description:
            'Boolean expression to filter rows from the table "PlaylistTrack". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'PlaylistId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'TrackId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'PlaylistTrack_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'PlaylistTrack_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'PlaylistTrack_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'PlaylistTrack_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'PlaylistTrack_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'PlaylistTrack_order_by',
          description:
            'Ordering options when selecting data from "PlaylistTrack".',
          fields: null,
          inputFields: [
            {
              name: 'PlaylistId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'TrackId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'PlaylistTrack_select_column',
          description: 'select columns of table "PlaylistTrack"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'PlaylistId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'PlaylistTrack_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Playlist_aggregate',
          description: 'aggregated selection of "Playlist"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Playlist_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Playlist', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Playlist_aggregate_fields',
          description: 'aggregate fields of "Playlist"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Playlist_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Playlist_max_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Playlist_min_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Playlist_sum_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Playlist_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Playlist". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'Name',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'PlaylistId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Playlist_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Playlist_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Playlist_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Playlist_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Playlist_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Playlist_order_by',
          description: 'Ordering options when selecting data from "Playlist".',
          fields: null,
          inputFields: [
            {
              name: 'Name',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'PlaylistId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Playlist_select_column',
          description: 'select columns of table "Playlist"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'Name',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'PlaylistId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Playlist_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'PlaylistId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'SCALAR',
          name: 'String',
          description: null,
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Track',
          description:
            'CREATE TABLE [Track]\n(\n    [TrackId] INTEGER  NOT NULL,\n    [Name] NVARCHAR(200)  NOT NULL,\n    [AlbumId] INTEGER,\n    [MediaTypeId] INTEGER  NOT NULL,\n    [GenreId] INTEGER,\n    [Composer] NVARCHAR(220),\n    [Milliseconds] INTEGER  NOT NULL,\n    [Bytes] INTEGER,\n    [UnitPrice] NUMERIC(10,2)  NOT NULL,\n    CONSTRAINT [PK_Track] PRIMARY KEY  ([TrackId]),\n    FOREIGN KEY ([AlbumId]) REFERENCES [Album] ([AlbumId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([GenreId]) REFERENCES [Genre] ([GenreId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION,\n    FOREIGN KEY ([MediaTypeId]) REFERENCES [MediaType] ([MediaTypeId]) \n\t\tON DELETE NO ACTION ON UPDATE NO ACTION\n)',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Bytes',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Composer',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Milliseconds',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'string', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'number', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Track_aggregate',
          description: 'aggregated selection of "Track"',
          fields: [
            {
              name: 'aggregate',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'Track_aggregate_fields',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'nodes',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Track', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Track_aggregate_fields',
          description: 'aggregate fields of "Track"',
          fields: [
            {
              name: 'count',
              description: null,
              args: [
                {
                  name: 'column',
                  description: null,
                  type: {
                    kind: 'ENUM',
                    name: 'Track_select_column',
                    ofType: null,
                  },
                  defaultValue: null,
                },
                {
                  name: 'distinct',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'max',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Track_max_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'min',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Track_min_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sum',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'Track_sum_fields', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Track_bool_exp',
          description:
            'Boolean expression to filter rows from the table "Track". All fields are combined with a logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: 'AlbumId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Bytes',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Composer',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'GenreId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'MediaTypeId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Milliseconds',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'string_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'TrackId',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'number_sqlite_comparison_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_and',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Track_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
            {
              name: '_not',
              description: null,
              type: {
                kind: 'INPUT_OBJECT',
                name: 'Track_bool_exp',
                ofType: null,
              },
              defaultValue: null,
            },
            {
              name: '_or',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: {
                    kind: 'INPUT_OBJECT',
                    name: 'Track_bool_exp',
                    ofType: null,
                  },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Track_max_fields',
          description: 'aggregate max on columns',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Bytes',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Composer',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Milliseconds',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Track_min_fields',
          description: 'aggregate min on columns',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Bytes',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Composer',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Milliseconds',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'Track_order_by',
          description: 'Ordering options when selecting data from "Track".',
          fields: null,
          inputFields: [
            {
              name: 'AlbumId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Bytes',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Composer',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'GenreId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'MediaTypeId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Milliseconds',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'Name',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'TrackId',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              type: { kind: 'ENUM', name: 'sqlite_order_by', ofType: null },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'Track_select_column',
          description: 'select columns of table "Track"',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'AlbumId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Bytes',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Composer',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'GenreId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'MediaTypeId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Milliseconds',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Name',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: 'column name',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'Track_sum_fields',
          description: 'aggregate sum on columns',
          fields: [
            {
              name: 'AlbumId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Bytes',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'GenreId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'MediaTypeId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'Milliseconds',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'TrackId',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UnitPrice',
              description: null,
              args: [],
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: '__Directive',
          description: null,
          fields: [
            {
              name: 'args',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__InputValue', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'description',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'isRepeatable',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'locations',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'name',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: '__EnumValue',
          description: null,
          fields: [
            {
              name: 'deprecationReason',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'description',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'isDeprecated',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'name',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: '__Field',
          description: null,
          fields: [
            {
              name: 'args',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__InputValue', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'deprecationReason',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'description',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'isDeprecated',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'name',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'type',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: '__InputValue',
          description: null,
          fields: [
            {
              name: 'defaultValue',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'description',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'name',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'type',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: '__Schema',
          description: null,
          fields: [
            {
              name: 'description',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'directives',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Directive', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'mutationType',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'queryType',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'subscriptionType',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'types',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: '__Type',
          description: null,
          fields: [
            {
              name: 'description',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'enumValues',
              description: null,
              args: [
                {
                  name: 'includeDeprecated',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: 'false',
                },
              ],
              type: { kind: 'OBJECT', name: '__EnumValue', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'fields',
              description: null,
              args: [
                {
                  name: 'includeDeprecated',
                  description: null,
                  type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
                  defaultValue: 'false',
                },
              ],
              type: { kind: 'OBJECT', name: '__Field', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'inputFields',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__InputValue', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'interfaces',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'kind',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'ENUM', name: '__TypeKind', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'name',
              description: null,
              args: [],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'String', ofType: null },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'ofType',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'possibleTypes',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: '__Type', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: '__TypeKind',
          description: null,
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'ENUM',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'INPUT_OBJECT',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'INTERFACE',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'LIST',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'NON_NULL',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'OBJECT',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'SCALAR',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'UNION',
              description: null,
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'SCALAR',
          name: 'int',
          description: 'A custom scalar type',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'SCALAR',
          name: 'number',
          description: null,
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'number_sqlite_comparison_exp',
          description:
            'Boolean expression to compare columns of type "number". All fields are combined with logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: '_eq',
              description: null,
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              defaultValue: null,
            },
            {
              name: '_gt',
              description: null,
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              defaultValue: null,
            },
            {
              name: '_gte',
              description: null,
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              defaultValue: null,
            },
            {
              name: '_in',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                },
              },
              defaultValue: null,
            },
            {
              name: '_is_null',
              description: null,
              type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
              defaultValue: null,
            },
            {
              name: '_lt',
              description: null,
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              defaultValue: null,
            },
            {
              name: '_lte',
              description: null,
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              defaultValue: null,
            },
            {
              name: '_modulus_is_zero',
              description: null,
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              defaultValue: null,
            },
            {
              name: '_neq',
              description: null,
              type: { kind: 'SCALAR', name: 'number', ofType: null },
              defaultValue: null,
            },
            {
              name: '_nin',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'query_root',
          description: null,
          fields: [
            {
              name: 'sqlite',
              description: null,
              args: [],
              type: { kind: 'OBJECT', name: 'sqlite_query', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'ENUM',
          name: 'sqlite_order_by',
          description: 'column ordering options',
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: [
            {
              name: 'asc',
              description: 'in ascending order',
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'desc',
              description: 'in descending order',
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'sqlite_query',
          description: null,
          fields: [
            {
              name: 'sqlite_Album',
              description: 'fetch data from the table: "Album"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Album_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Album_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Album', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Album_aggregate',
              description: 'fetch aggregated fields from the table: "Album"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Album_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Album_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Album_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Album_by_pk',
              description:
                'fetch data from the table: "Album" using primary key columns',
              args: [
                {
                  name: 'AlbumId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Album', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Artist',
              description: 'fetch data from the table: "Artist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Artist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Artist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Artist', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Artist_aggregate',
              description: 'fetch aggregated fields from the table: "Artist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Artist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Artist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Artist_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Artist_by_pk',
              description:
                'fetch data from the table: "Artist" using primary key columns',
              args: [
                {
                  name: 'ArtistId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Artist', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Customer',
              description: 'fetch data from the table: "Customer"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Customer_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Customer_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Customer', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Customer_aggregate',
              description: 'fetch aggregated fields from the table: "Customer"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Customer_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Customer_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Customer_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Customer_by_pk',
              description:
                'fetch data from the table: "Customer" using primary key columns',
              args: [
                {
                  name: 'CustomerId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Customer', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Employee',
              description: 'fetch data from the table: "Employee"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Employee_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Employee_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Employee', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Employee_aggregate',
              description: 'fetch aggregated fields from the table: "Employee"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Employee_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Employee_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Employee_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Employee_by_pk',
              description:
                'fetch data from the table: "Employee" using primary key columns',
              args: [
                {
                  name: 'EmployeeId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Employee', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Genre',
              description: 'fetch data from the table: "Genre"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Genre_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Genre_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Genre', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Genre_aggregate',
              description: 'fetch aggregated fields from the table: "Genre"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Genre_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Genre_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Genre_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Genre_by_pk',
              description:
                'fetch data from the table: "Genre" using primary key columns',
              args: [
                {
                  name: 'GenreId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Genre', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Invoice',
              description: 'fetch data from the table: "Invoice"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Invoice_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Invoice_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Invoice', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_InvoiceLine',
              description: 'fetch data from the table: "InvoiceLine"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'InvoiceLine_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'InvoiceLine_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: {
                      kind: 'OBJECT',
                      name: 'InvoiceLine',
                      ofType: null,
                    },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_InvoiceLine_aggregate',
              description:
                'fetch aggregated fields from the table: "InvoiceLine"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'InvoiceLine_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'InvoiceLine_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'InvoiceLine_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_InvoiceLine_by_pk',
              description:
                'fetch data from the table: "InvoiceLine" using primary key columns',
              args: [
                {
                  name: 'InvoiceLineId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'InvoiceLine', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Invoice_aggregate',
              description: 'fetch aggregated fields from the table: "Invoice"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Invoice_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Invoice_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Invoice_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Invoice_by_pk',
              description:
                'fetch data from the table: "Invoice" using primary key columns',
              args: [
                {
                  name: 'InvoiceId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Invoice', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_MediaType',
              description: 'fetch data from the table: "MediaType"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'MediaType_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'MediaType_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'MediaType', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_MediaType_aggregate',
              description:
                'fetch aggregated fields from the table: "MediaType"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'MediaType_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'MediaType_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'MediaType_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_MediaType_by_pk',
              description:
                'fetch data from the table: "MediaType" using primary key columns',
              args: [
                {
                  name: 'MediaTypeId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'MediaType', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Playlist',
              description: 'fetch data from the table: "Playlist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Playlist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Playlist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Playlist', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_PlaylistTrack',
              description: 'fetch data from the table: "PlaylistTrack"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'PlaylistTrack_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'PlaylistTrack_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: {
                      kind: 'OBJECT',
                      name: 'PlaylistTrack',
                      ofType: null,
                    },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_PlaylistTrack_aggregate',
              description:
                'fetch aggregated fields from the table: "PlaylistTrack"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'PlaylistTrack_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'PlaylistTrack_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'PlaylistTrack_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_PlaylistTrack_by_pk',
              description:
                'fetch data from the table: "PlaylistTrack" using primary key columns',
              args: [
                {
                  name: 'PlaylistId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
                {
                  name: 'TrackId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'PlaylistTrack', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Playlist_aggregate',
              description: 'fetch aggregated fields from the table: "Playlist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Playlist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Playlist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Playlist_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Playlist_by_pk',
              description:
                'fetch data from the table: "Playlist" using primary key columns',
              args: [
                {
                  name: 'PlaylistId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Playlist', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Track',
              description: 'fetch data from the table: "Track"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Track_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Track_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Track', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Track_aggregate',
              description: 'fetch aggregated fields from the table: "Track"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Track_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Track_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Track_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Track_by_pk',
              description:
                'fetch data from the table: "Track" using primary key columns',
              args: [
                {
                  name: 'TrackId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Track', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'sqlite_subscription',
          description: null,
          fields: [
            {
              name: 'sqlite_Album',
              description: 'fetch data from the table: "Album"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Album_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Album_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Album', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Album_aggregate',
              description: 'fetch aggregated fields from the table: "Album"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Album_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Album_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Album_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Album_by_pk',
              description:
                'fetch data from the table: "Album" using primary key columns',
              args: [
                {
                  name: 'AlbumId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Album', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Artist',
              description: 'fetch data from the table: "Artist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Artist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Artist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Artist', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Artist_aggregate',
              description: 'fetch aggregated fields from the table: "Artist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Artist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Artist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Artist_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Artist_by_pk',
              description:
                'fetch data from the table: "Artist" using primary key columns',
              args: [
                {
                  name: 'ArtistId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Artist', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Customer',
              description: 'fetch data from the table: "Customer"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Customer_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Customer_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Customer', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Customer_aggregate',
              description: 'fetch aggregated fields from the table: "Customer"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Customer_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Customer_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Customer_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Customer_by_pk',
              description:
                'fetch data from the table: "Customer" using primary key columns',
              args: [
                {
                  name: 'CustomerId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Customer', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Employee',
              description: 'fetch data from the table: "Employee"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Employee_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Employee_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Employee', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Employee_aggregate',
              description: 'fetch aggregated fields from the table: "Employee"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Employee_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Employee_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Employee_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Employee_by_pk',
              description:
                'fetch data from the table: "Employee" using primary key columns',
              args: [
                {
                  name: 'EmployeeId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Employee', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Genre',
              description: 'fetch data from the table: "Genre"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Genre_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Genre_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Genre', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Genre_aggregate',
              description: 'fetch aggregated fields from the table: "Genre"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Genre_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Genre_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Genre_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Genre_by_pk',
              description:
                'fetch data from the table: "Genre" using primary key columns',
              args: [
                {
                  name: 'GenreId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Genre', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Invoice',
              description: 'fetch data from the table: "Invoice"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Invoice_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Invoice_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Invoice', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_InvoiceLine',
              description: 'fetch data from the table: "InvoiceLine"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'InvoiceLine_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'InvoiceLine_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: {
                      kind: 'OBJECT',
                      name: 'InvoiceLine',
                      ofType: null,
                    },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_InvoiceLine_aggregate',
              description:
                'fetch aggregated fields from the table: "InvoiceLine"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'InvoiceLine_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'InvoiceLine_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'InvoiceLine_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_InvoiceLine_by_pk',
              description:
                'fetch data from the table: "InvoiceLine" using primary key columns',
              args: [
                {
                  name: 'InvoiceLineId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'InvoiceLine', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Invoice_aggregate',
              description: 'fetch aggregated fields from the table: "Invoice"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Invoice_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Invoice_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Invoice_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Invoice_by_pk',
              description:
                'fetch data from the table: "Invoice" using primary key columns',
              args: [
                {
                  name: 'InvoiceId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Invoice', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_MediaType',
              description: 'fetch data from the table: "MediaType"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'MediaType_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'MediaType_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'MediaType', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_MediaType_aggregate',
              description:
                'fetch aggregated fields from the table: "MediaType"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'MediaType_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'MediaType_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'MediaType_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_MediaType_by_pk',
              description:
                'fetch data from the table: "MediaType" using primary key columns',
              args: [
                {
                  name: 'MediaTypeId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'MediaType', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Playlist',
              description: 'fetch data from the table: "Playlist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Playlist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Playlist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Playlist', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_PlaylistTrack',
              description: 'fetch data from the table: "PlaylistTrack"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'PlaylistTrack_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'PlaylistTrack_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: {
                      kind: 'OBJECT',
                      name: 'PlaylistTrack',
                      ofType: null,
                    },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_PlaylistTrack_aggregate',
              description:
                'fetch aggregated fields from the table: "PlaylistTrack"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'PlaylistTrack_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'PlaylistTrack_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'PlaylistTrack_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_PlaylistTrack_by_pk',
              description:
                'fetch data from the table: "PlaylistTrack" using primary key columns',
              args: [
                {
                  name: 'PlaylistId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
                {
                  name: 'TrackId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'PlaylistTrack', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Playlist_aggregate',
              description: 'fetch aggregated fields from the table: "Playlist"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Playlist_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Playlist_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Playlist_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Playlist_by_pk',
              description:
                'fetch data from the table: "Playlist" using primary key columns',
              args: [
                {
                  name: 'PlaylistId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Playlist', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Track',
              description: 'fetch data from the table: "Track"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Track_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Track_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'LIST',
                  name: null,
                  ofType: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'OBJECT', name: 'Track', ofType: null },
                  },
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Track_aggregate',
              description: 'fetch aggregated fields from the table: "Track"',
              args: [
                {
                  name: 'limit',
                  description: 'limit the number of rows returned',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'offset',
                  description: 'skip the first n rows. Use only with order_by',
                  type: { kind: 'SCALAR', name: 'Int', ofType: null },
                  defaultValue: null,
                },
                {
                  name: 'order_by',
                  description: 'sort the rows by one or more columns',
                  type: {
                    kind: 'LIST',
                    name: null,
                    ofType: {
                      kind: 'NON_NULL',
                      name: null,
                      ofType: {
                        kind: 'INPUT_OBJECT',
                        name: 'Track_order_by',
                        ofType: null,
                      },
                    },
                  },
                  defaultValue: null,
                },
                {
                  name: 'where',
                  description: 'filter the rows returned',
                  type: {
                    kind: 'INPUT_OBJECT',
                    name: 'Track_bool_exp',
                    ofType: null,
                  },
                  defaultValue: null,
                },
              ],
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: {
                  kind: 'OBJECT',
                  name: 'Track_aggregate',
                  ofType: null,
                },
              },
              isDeprecated: false,
              deprecationReason: null,
            },
            {
              name: 'sqlite_Track_by_pk',
              description:
                'fetch data from the table: "Track" using primary key columns',
              args: [
                {
                  name: 'TrackId',
                  description: null,
                  type: {
                    kind: 'NON_NULL',
                    name: null,
                    ofType: { kind: 'SCALAR', name: 'number', ofType: null },
                  },
                  defaultValue: null,
                },
              ],
              type: { kind: 'OBJECT', name: 'Track', ofType: null },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'SCALAR',
          name: 'string',
          description: null,
          fields: null,
          inputFields: null,
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'INPUT_OBJECT',
          name: 'string_sqlite_comparison_exp',
          description:
            'Boolean expression to compare columns of type "string". All fields are combined with logical \'AND\'.',
          fields: null,
          inputFields: [
            {
              name: '_eq',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_glob',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_gt',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_gte',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_in',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: { kind: 'SCALAR', name: 'string', ofType: null },
                },
              },
              defaultValue: null,
            },
            {
              name: '_is_null',
              description: null,
              type: { kind: 'SCALAR', name: 'Boolean', ofType: null },
              defaultValue: null,
            },
            {
              name: '_like',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_lt',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_lte',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_neq',
              description: null,
              type: { kind: 'SCALAR', name: 'string', ofType: null },
              defaultValue: null,
            },
            {
              name: '_nin',
              description: null,
              type: {
                kind: 'LIST',
                name: null,
                ofType: {
                  kind: 'NON_NULL',
                  name: null,
                  ofType: { kind: 'SCALAR', name: 'string', ofType: null },
                },
              },
              defaultValue: null,
            },
          ],
          interfaces: null,
          enumValues: null,
          possibleTypes: null,
        },
        {
          kind: 'OBJECT',
          name: 'subscription_root',
          description: null,
          fields: [
            {
              name: 'sqlite',
              description: null,
              args: [],
              type: {
                kind: 'OBJECT',
                name: 'sqlite_subscription',
                ofType: null,
              },
              isDeprecated: false,
              deprecationReason: null,
            },
          ],
          inputFields: null,
          interfaces: [],
          enumValues: null,
          possibleTypes: null,
        },
      ],
      directives: [
        {
          name: 'include',
          description: 'whether this query should be included',
          locations: ['FIELD', 'FRAGMENT_SPREAD', 'INLINE_FRAGMENT'],
          args: [
            {
              name: 'if',
              description: null,
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Boolean', ofType: null },
              },
              defaultValue: null,
            },
          ],
        },
        {
          name: 'skip',
          description: 'whether this query should be skipped',
          locations: ['FIELD', 'FRAGMENT_SPREAD', 'INLINE_FRAGMENT'],
          args: [
            {
              name: 'if',
              description: null,
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Boolean', ofType: null },
              },
              defaultValue: null,
            },
          ],
        },
        {
          name: 'cached',
          description:
            'whether this query should be cached (Hasura Cloud only)',
          locations: ['QUERY'],
          args: [
            {
              name: 'ttl',
              description: 'measured in seconds',
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Int', ofType: null },
              },
              defaultValue: '60',
            },
            {
              name: 'refresh',
              description: 'refresh the cache entry',
              type: {
                kind: 'NON_NULL',
                name: null,
                ofType: { kind: 'SCALAR', name: 'Boolean', ofType: null },
              },
              defaultValue: 'false',
            },
          ],
        },
      ],
    },
  },
};
