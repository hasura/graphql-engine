[package]
name = "lang-graphql"
version.workspace = true
edition.workspace = true
license.workspace = true

[lib]
bench = false

[[bench]]
name = "lexer"
harness = false

[[bench]]
name = "parser"
harness = false

[[bench]]
name = "validation"
harness = false

[[bench]]
name = "schema_serde"
harness = false

[dependencies]
recursion_limit_macro = { path = "../utils/recursion_limit_macro" }

axum = { workspace = true }
http = { workspace = true }
indexmap = { workspace = true, features = ["serde"] }
lexical-core = { workspace = true }
nonempty = { workspace = true, features = ["serialize"] }
schemars = { workspace = true, features = ["smol_str"] }
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }
smol_str = { workspace = true }
thiserror = { workspace = true }
tracing-util = { path = "../utils/tracing-util" }

[dev-dependencies]
anyhow = { workspace = true }
apollo-parser = { workspace = true }
async-graphql-parser = { workspace = true }
bincode = { workspace = true }
bson = { workspace = true }
criterion = { workspace = true, features = ["html_reports"] }
diffy = { workspace = true }
expect-test = { workspace = true }
graphql-parser = { workspace = true }
human_bytes = { workspace = true }
postcard = { workspace = true, features = ["use-std"] }
pretty_assertions = { workspace = true }
rmp-serde = { workspace = true }

[lints]
workspace = true
