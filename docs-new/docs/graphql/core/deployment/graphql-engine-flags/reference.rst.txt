---
description: Hasura GraphQL engine server config reference (Flags/Environment variables)
keywords:
  - hasura
  - docs
  - deployment
  - server
  - config
  - flags
  - env vars
  - environment variables
sidebar_position: 2
sidebar_label: Server config reference
---

# GraphQL Engine server config reference

## Introduction

Every GraphQL engine command is structured as:

```bash
$ graphql-engine <server-flags> serve <command-flags>
```

The flags can be passed as environment variables as well.

## **graphql-engine** command flags / environment variables

For the `graphql-engine` command these are the available flags and
environment variables:

<table>
<thead>
<tr>
<th width="23%">Flag</th>
<th width="30%">ENV variable</th>
<th width="46%">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>
<code>--database-url &lt;DB_URL&gt;</code>
</td>
<td>`HASURA_GRAPHQL_DATABASE_URL`</td>
<td>
<p>Postgres database URL: `postgres://<user>:<password>@<host>:<port>/<db-name></p>
<p>Example: `postgres://admin:mypass@mydomain.com:5432/mydb`</p>
</td>
</tr>
<tr>
<td>`--metadata-database-url <METADATA-DATABASE-URL`</td>
<td>`HASURA_GRAPHQL_METADATA_DATABASE_URL`</td>
<td>
<p>Postgres database URL that will be used to store the Hasura metadata. By default the
database configured using `HASURA_GRAPHQL_DATABASE_URL` will be used to store the metadata.</p>
<p>`postgres://<user>:<password>@<host>:<port>/<db-name>`</p>
<p>Example: `postgres://admin:mypass@mydomain.com:5432/metadata_db`</p>
_(Available for versions > v2.0.0)_
</td>
</tr>
</tbody>
</table>

Or you can specify the following options *(only via flags)*:

```none
    --host                      Postgres server host
-p, --port                      Postgres server port
-u, --user                      Database user name
-p, --password                  Password of the user
-d, --dbname                    Database name to connect to
-o, --pg-connection-options     PostgreSQL connection options
```

:::info Note

The default configuration of PostgreSQL 11 and older may result in loss
of precision when retrieving IEEE 754 style data, such as `float4`,
`real` or `double precision` values, from the database. To avoid this,
set the `extra_float_digits` PostgreSQL connection parameter to 3. This
can be done by passing
`'--pg-connection-options=-c extra_float_digits=3'` to `graphql-engine`,
or by passing this option as part of the database url:

`postgres://admin:mypass@mydomain.com:5432/mydb?options=-c%20extra_float_digits%3D3`

:::

## **serve** sub-command flags / environment variables

For the `serve` sub-command these are the available flags and
environment variables:

<table>
<thead>
<tr>
<th width="23%">Flag</th>
<th width="30%">ENV variable</th>
<th width="46%">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>--server-port &lt;PORT&gt;</code></td>
<td><code>HASURA_GRAPHQL_SERVER_PORT</code></td>
<td>Port on which graphql-engine should be served (default: 8080)</td>
</tr>
<tr>
<td><code>--server-host &lt;HOST&gt;</code></td>
<td><code>HASURA_GRAPHQL_SERVER_HOST</code></td>
<td>Host on which graphql-engine will listen (default: <code>*</code>)</td>
</tr>
<tr>
<td><code>--enable-console &lt;true|false&gt;</code></td>
<td><code>HASURA_GRAPHQL_ENABLE_CONSOLE</code></td>
<td>Enable the Hasura Console (served by the server on <code>/</code> and <code>/console</code>) (default: false)</td>
</tr>
<tr>
<td><code>--admin-secret &lt;ADMIN_SECRET_KEY&gt;</code></td>
<td><code>HASURA_GRAPHQL_ADMIN_SECRET</code></td>
<td>Admin secret key, required to access this instance. This is mandatory when you use webhook or JWT.</td>
</tr>
<tr>
<td><code>--auth-hook &lt;WEBHOOK_URL&gt;</code></td>
<td><code>HASURA_GRAPHQL_AUTH_HOOK</code></td>
<td>URL of the authorization webhook required to authorize requests. See auth webhooks docs for more details.</td>
</tr>
<tr>
<td><code>--auth-hook-mode &lt;GET|POST&gt;</code></td>
<td><code>HASURA_GRAPHQL_AUTH_HOOK_MODE</code></td>
<td>HTTP method to use for the authorization webhook (default: GET)</td>
</tr>
<tr>
<td><code>--jwt-secret &lt;JSON_CONFIG&gt;</code></td>
<td><code>HASURA_GRAPHQL_JWT_SECRET</code></td>
<td>A JSON string containing type and the JWK used for verifying (and other optional details). Example: <code>{"type": "HS256", "key": "3bd561c37d214b4496d09049fadc542c"}</code>. See the JWT docs for more details.</td>
</tr>
<tr>
<td><code>--unauthorized-role &lt;ROLE&gt;</code></td>
<td><code>HASURA_GRAPHQL_UNAUTHORIZED_ROLE</code></td>
<td>Unauthorized role, used when access-key is not sent in access-key only mode or the <code>Authorization</code> header is absent in JWT mode. Example: <code>anonymous</code>. Now whenever the "authorization" header is absent, the request's role will default to <code>anonymous</code>.</td>
</tr>
<tr>
<td><code>--cors-domain &lt;DOMAINS&gt;</code></td>
<td><code>HASURA_GRAPHQL_CORS_DOMAIN</code></td>
<td>CSV of list of domains, incuding scheme (http/https) and port, to allow for CORS. Wildcard domains are allowed. (See <code class="interpreted-text" role="ref">configure-cors</code>)</td>
</tr>
<tr>
<td><code>--disable-cors</code></td>
<td><code>HASURA_GRAPHQL_DISABLE_CORS</code></td>
<td>Disable CORS. Do not send any CORS headers on any request.</td>
</tr>
<tr>
<td><code>--ws-read-cookie &lt;true|false&gt;</code></td>
<td><code>HASURA_GRAPHQL_WS_READ_COOKIE</code></td>
<td>Read cookie on WebSocket initial handshake even when CORS is disabled. This can be a potential security flaw! Please make sure you know what you're doing. This configuration is only applicable when CORS is disabled. (default: false)</td>
</tr>
<tr>
<td><code>--enable-telemetry &lt;true|false&gt;</code></td>
<td><code>HASURA_GRAPHQL_ENABLE_TELEMETRY</code></td>
<td>Enable anonymous telemetry (default: true)</td>
</tr>
<tr>
<td>N/A</td>
<td><code>HASURA_GRAPHQL_EVENTS_HTTP_POOL_SIZE</code></td>
<td>Maximum number of concurrent http workers delivering events at any time (default: 100)</td>
</tr>
<tr>
<td>N/A</td>
<td><code>HASURA_GRAPHQL_EVENTS_FETCH_INTERVAL</code></td>
<td>Interval in milliseconds to sleep before trying to fetch events again after a fetch returned no events from postgres</td>
</tr>
<tr>
<td><p><code>--events-fetch-batch-size</code></p></td>
<td><p><code>HASURA_GRAPHQL_EVENTS_FETCH_BATCH_SIZE</code></p></td>
<td><p>Maximum number of events to be fetched from the DB in a single batch (default: 100)</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--async-actions-fetch-interval</code></p></td>
<td><p><code>HASURA_GRAPHQL_ASYNC_ACTIONS_FETCH_INTERVAL</code></p></td>
<td><p>Interval in milliseconds to sleep before trying to fetch async actions again after a fetch returned no async actions from metadata storage. Value <code>0</code> implies completely disable fetching async actions from the storage.</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><code>-s, --stripes &lt;NO_OF_STRIPES&gt;</code></td>
<td><code>HASURA_GRAPHQL_PG_STRIPES</code></td>
<td>Number of stripes (distinct sub-pools) to maintain with Postgres (default: 1). New connections will be taken from a particular stripe pseudo-randomly.</td>
</tr>
<tr>
<td><p><code>-c, --connections &lt;NO_OF_CONNS&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_PG_CONNECTIONS</code></p></td>
<td><p>Maximum number of Postgres connections that can be opened per stripe (default: 50). When the maximum is reached we will block until a new connection becomes available, even if there is capacity in other stripes.</p>
<p>(<strong>Deprecated in versions &gt; v2.0.0</strong>. <code class="interpreted-text" role="ref">See details &lt;hasura_v2_env_changes&gt;</code>)</p></td>
</tr>
<tr>
<td><p><code>--timeout &lt;SECONDS&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_PG_TIMEOUT</code></p></td>
<td><p>Each connection's idle time before it is closed (default: 180 sec)</p>
<p>(<strong>Deprecated in versions &gt; v2.0.0</strong>. <code class="interpreted-text" role="ref">See details &lt;hasura_v2_env_changes&gt;</code>)</p></td>
</tr>
<tr>
<td><p><code>--use-prepared-statements &lt;true|false&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_USE_PREPARED_STATEMENTS</code></p></td>
<td><p>Use prepared statements for queries (default: true)</p>
<p>(<strong>Deprecated in versions &gt; v2.0.0</strong>. <code class="interpreted-text" role="ref">See details &lt;hasura_v2_env_changes&gt;</code>)</p></td>
</tr>
<tr>
<td><p><code>-i, --tx-iso &lt;TXISO&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_TX_ISOLATION</code></p></td>
<td><p>Transaction isolation. read-committed / repeatable-read / serializable (default: read-committed)</p>
<p>(<strong>Deprecated in versions &gt; v2.0.0</strong>. <code class="interpreted-text" role="ref">See details &lt;hasura_v2_env_changes&gt;</code>)</p></td>
</tr>
<tr>
<td><p><code>--retries &lt;NO_OF_RETRIES&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_NO_OF_RETRIES</code></p></td>
<td><p>Number of retries if Postgres connection error occurs (default: 1)</p>
<p>(<strong>Deprecated in versions &gt; v2.0.0</strong>. <code class="interpreted-text" role="ref">See details &lt;hasura_v2_env_changes&gt;</code>)</p></td>
</tr>
<tr>
<td><p><code>--conn-lifetime &lt;SECONDS&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_PG_CONN_LIFETIME</code></p></td>
<td><p>Time from connection creation after which the connection should be destroyed and a new one created. A value of 0 indicates we should never destroy an active connection. If 0 is passed, memory from large query results may not be reclaimed. (default: 600 sec)</p>
<p>(<strong>Deprecated in versions &gt; v2.0.0</strong>. <code class="interpreted-text" role="ref">See details &lt;hasura_v2_env_changes&gt;</code>)</p></td>
</tr>
<tr>
<td><code>--stringify-numeric-types</code></td>
<td><code>HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES</code></td>
<td>Stringify certain Postgres numeric types, specifically <code>bigint</code>, <code>numeric</code>, <code>decimal</code> and <code>double precision</code> as they don't fit into the <code>IEEE-754</code> spec for JSON encoding-decoding. (default: false)</td>
</tr>
<tr>
<td><code>--enabled-apis &lt;APIS&gt;</code></td>
<td><code>HASURA_GRAPHQL_ENABLED_APIS</code></td>
<td>Comma separated list of APIs (options: <code>metadata</code>, <code>graphql</code>, <code>pgdump</code>, <code>config</code>) to be enabled. (default: <code>metadata,graphql,pgdump,config</code>)</td>
</tr>
<tr>
<td><code>--live-queries-multiplexed-refetch-interval</code></td>
<td><code>HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL</code></td>
<td>Updated results (if any) will be sent at most once in this interval (in milliseconds) for live queries which can be multiplexed. Default: 1000 (1sec)</td>
</tr>
<tr>
<td><code>--live-queries-multiplexed-batch-size</code></td>
<td><code>HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_BATCH_SIZE</code></td>
<td>Multiplexed live queries are split into batches of the specified size. Default: 100</td>
</tr>
<tr>
<td><code>--enable-allowlist</code></td>
<td><code>HASURA_GRAPHQL_ENABLE_ALLOWLIST</code></td>
<td>Restrict queries allowed to be executed by the GraphQL engine to those that are part of the configured allow-list. Default: <code>false</code></td>
</tr>
<tr>
<td><code>--console-assets-dir</code></td>
<td><code>HASURA_GRAPHQL_CONSOLE_ASSETS_DIR</code></td>
<td>Set the value to <code>/srv/console-assets</code> for the console to load assets from the server itself instead of CDN</td>
</tr>
<tr>
<td><code>--enabled-log-types</code></td>
<td><code>HASURA_GRAPHQL_ENABLED_LOG_TYPES</code></td>
<td>Set the enabled log types. This is a comma-separated list of log-types to enable. Default: <code>startup, http-log, webhook-log, websocket-log</code>. See <code class="interpreted-text" role="ref">log types &lt;log-types&gt;</code> for more details.</td>
</tr>
<tr>
<td><code>--log-level</code></td>
<td><code>HASURA_GRAPHQL_LOG_LEVEL</code></td>
<td>Set the logging level. Default: <code>info</code>. Options: <code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>.</td>
</tr>
<tr>
<td><p><code>--dev-mode</code></p></td>
<td><p><code>HASURA_GRAPHQL_DEV_MODE</code></p></td>
<td><p>Set dev mode for GraphQL requests; include the <code>internal</code> key in the errors extensions of the response (if required).</p>
<p><em>(Available for versions &gt; v1.2.0)</em></p></td>
</tr>
<tr>
<td><p><code>--admin-internal-errors</code></p></td>
<td><p><code>HASURA_GRAPHQL_ADMIN_INTERNAL_ERRORS</code></p></td>
<td><p>Include the <code>internal</code> key in the errors extensions of the response for GraphQL requests with the admin role (if required).</p>
<p><em>(Available for versions &gt; v1.2.0)</em></p></td>
</tr>
<tr>
<td><p><code>--enable-remote-schema-permissions</code></p></td>
<td><p><code>HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS</code></p></td>
<td><p>Enable remote schema permissions (default: <code>false</code>)</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--infer-function-permissions</code></p></td>
<td><p><code>HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS</code></p></td>
<td><p>When the <code>--infer-function-permissions</code> flag is set to <code>false</code>, a function <code>f</code>, stable, immutable or volatile is only exposed for a role <code>r</code> if there is a permission defined on the function <code>f</code> for the role <code>r</code>, creating a function permission will only be allowed if there is a select permission on the table type.</p>
<p>When the <code>--infer-function-permissions</code> flag is set to <code>true</code> or the flag is omitted (defaults to <code>true</code>), the permission of the function is inferred from the select permissions from the target table of the function, only for stable/immutable functions. Volatile functions are not exposed to any of the roles in this case.</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--schema-sync-poll-interval</code></p></td>
<td><p><code>HASURA_GRAPHQL_SCHEMA_SYNC_POLL_INTERVAL</code></p></td>
<td><p>Interval to poll metadata storage for updates in milliseconds - Default 1000 (1s) - Set to 0 to disable.</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--experimental-features</code></p></td>
<td><p><code>HASURA_GRAPHQL_EXPERIMENTAL_FEATURES</code></p></td>
<td><p>List of experimental features to be enabled. A comma separated value is expected. Options: <code>inherited_roles</code>.</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--graceful-shutdown-timeout</code></p></td>
<td><p><code>HASURA_GRAPHQL_GRACEFUL_SHUTDOWN_TIMEOUT</code></p></td>
<td><p>Timeout (in seconds) to wait for the in-flight events (event triggers and scheduled triggers) and async actions to complete before the server shuts down completely (default: 60 seconds). If the in-flight events are not completed within the timeout, those events are marked as pending.</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--enable-maintenance-mode</code></p></td>
<td><p><code>HASURA_GRAPHQL_ENABLE_MAINTENANCE_MODE</code></p></td>
<td><p>Disable updating of metadata on the server (default: <code>false</code>)</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--websocket-compression</code></p></td>
<td><p><code>HASURA_GRAPHQL_CONNECTION_COMPRESSION</code></p></td>
<td><p>Enable WebSocket permessage-deflate compression (default: false)</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--websocket-keepalive &lt;SECONDS&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_WEBSOCKET_KEEPALIVE</code></p></td>
<td><p>Used to set the <code>Keep Alive</code> delay for client that use the <code>subscription-transport-ws</code> (Apollo) protocol. For <code>graphql-ws</code> clients the graphql-engine sends <code>PING</code> messages instead.</p>
<p>(default: <code>5</code>)</p>
<p><em>(Available for versions &gt; v2.0.0)</em></p></td>
</tr>
<tr>
<td><p><code>--websocket-connection-init-timeout &lt;SECONDS&gt;</code></p></td>
<td><p><code>HASURA_GRAPHQL_WEBSOCKET_CONNECTION_INIT_TIMEOUT</code></p></td>
<td><p>Used to set the connection initialisation timeout for <code>graphql-ws</code> clients. This is ignored for <code>subscription-transport-ws</code> (Apollo) clients.</p>
<p>(default: <code>3</code>)</p></td>
</tr>
</tbody>
</table>

:::info Note

When the equivalent flags for environment variables are used, the flags
will take precedence.

:::