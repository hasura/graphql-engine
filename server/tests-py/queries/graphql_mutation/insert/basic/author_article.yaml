#Inserting author data
- description: Inserts author data via GraphQL mutation
  url: /v1/graphql
  response:
    data:
      insert_author:
        returning:
        - id: 1
          name: Author 1
        - id: 2
          name: Author 2
        query:
          article: []
  status: 200
  query:
    query: |
     mutation insert_author {
       insert_author(
         objects: [
           {
             name: "Author 1"
           }, 
           {
             name: "Author 2"
           }
         ]
       ) {
         returning {
           id
           name
         }
         query {
           article {
             id
             title
             content
             author {
               id
               name
             }
           }
         }
       }
     }

#Inserting empty objects
- description: Inserts empty objects via GraphQL mutation
  url: /v1/graphql
  status: 200
  response:
    data:
      insert_author:
        affected_rows: 0
        returning: []
        query:
          author_1:
          - id: 1
            name: Author 1
            articles: []
            articles_aggregate:
              aggregate:
                count: 0
          author_2:
          - id: 2
            name: Author 2
            articles: []
            articles_aggregate:
              aggregate:
                count: 0
  query:
    query: |
      mutation insert_empty_objects {
        insert_author(
          objects: []
        ){
          affected_rows
          returning{
            id
            name
          }
          query{
            author_1: author(where: {id: {_eq: 1}}){
              id
              name
              articles{
                id
                title
                content
              }
              articles_aggregate{
                aggregate{
                  count
                }
              }
            }
            author_2: author(where: {id: {_eq: 2}}){
              id
              name
              articles{
                id
                title
                content
              }
              articles_aggregate{
                aggregate{
                  count
                }
              }
            }
          }
        }
      }

#Inserting article data
- description: Inserts article data via GraphQL mutation
  url: /v1/graphql
  response:
    data:
      insert_article:
        returning:
        - content: Sample article content
          id: 1
          title: Article 1
        - content: Sample article content
          id: 2
          title: Article 2
        - content: Sample article content
          id: 3
          title: Article 3
  status: 200
  query:
    query: |
      mutation insert_article {
        insert_article (
          objects: [
          {
            title: "Article 1",
            content: "Sample article content",
            author_id: 1
          },
          {
            title: "Article 2",
            content: "Sample article content",
            author_id: 1
          },
          {
            title: "Article 3",
            content: "Sample article content",
            author_id: 2
          }
          ]
        ) {
          returning {
            id
            title
            content
          }
        }
      }
