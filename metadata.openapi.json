{
    "components": {
        "schemas": {
            "ActionDefinition_Mutation_GraphQLType_InputWebhook": {
                "properties": {
                    "arguments": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/ArgumentDefinition_GraphQLType"
                        },
                        "type": "array"
                    },
                    "forward_client_headers": {
                        "default": false,
                        "type": "boolean"
                    },
                    "handler": {
                        "type": "string"
                    },
                    "headers": {
                        "default": [],
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "kind": {
                        "default": "synchronous",
                        "enum": [
                            "synchronous",
                            "asynchronous"
                        ],
                        "type": "string"
                    },
                    "output_type": {
                        "type": "string"
                    },
                    "request_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RequestTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/RequestTransformV2"
                            }
                        ]
                    },
                    "response_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/ResponseTransformV2"
                            }
                        ]
                    },
                    "timeout": {
                        "default": 30,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "type": {
                        "enum": [
                            "mutation"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "output_type",
                    "type",
                    "handler"
                ],
                "type": "object"
            },
            "ActionDefinition_Query_GraphQLType_InputWebhook": {
                "properties": {
                    "arguments": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/ArgumentDefinition_GraphQLType"
                        },
                        "type": "array"
                    },
                    "forward_client_headers": {
                        "default": false,
                        "type": "boolean"
                    },
                    "handler": {
                        "type": "string"
                    },
                    "headers": {
                        "default": [],
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "output_type": {
                        "type": "string"
                    },
                    "request_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RequestTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/RequestTransformV2"
                            }
                        ]
                    },
                    "response_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/ResponseTransformV2"
                            }
                        ]
                    },
                    "timeout": {
                        "default": 30,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "type": {
                        "enum": [
                            "query"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "output_type",
                    "type",
                    "handler"
                ],
                "type": "object"
            },
            "ActionMetadata": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "definition": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ActionDefinition_Query_GraphQLType_InputWebhook"
                            },
                            {
                                "$ref": "#/components/schemas/ActionDefinition_Mutation_GraphQLType_InputWebhook"
                            }
                        ]
                    },
                    "name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/ActionPermissionMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "ActionPermissionMetadata": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ],
                "type": "object"
            },
            "AddReplaceOrRemoveFields": {
                "properties": {
                    "add_headers": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "remove_headers": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AllowlistEntry": {
                "properties": {
                    "collection": {
                        "type": "string"
                    },
                    "scope": {
                        "default": {
                            "global": true
                        },
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AllowlistScopeGlobal"
                            },
                            {
                                "$ref": "#/components/schemas/AllowlistScopeRoles"
                            }
                        ]
                    }
                },
                "required": [
                    "collection"
                ],
                "type": "object"
            },
            "AllowlistScopeGlobal": {
                "properties": {
                    "global": {
                        "enum": [
                            true
                        ],
                        "type": "boolean"
                    }
                },
                "required": [
                    "global"
                ],
                "type": "object"
            },
            "AllowlistScopeRoles": {
                "properties": {
                    "global": {
                        "enum": [
                            false
                        ],
                        "type": "boolean"
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "global",
                    "roles"
                ],
                "type": "object"
            },
            "ApiLimit": {
                "properties": {
                    "batch_limit": {
                        "$ref": "#/components/schemas/Limit_MaxBatchSize"
                    },
                    "depth_limit": {
                        "$ref": "#/components/schemas/Limit_MaxDepth"
                    },
                    "disabled": {
                        "default": false,
                        "type": "boolean"
                    },
                    "node_limit": {
                        "$ref": "#/components/schemas/Limit_MaxNodes"
                    },
                    "rate_limit": {
                        "$ref": "#/components/schemas/Limit_RateLimitConfig"
                    },
                    "time_limit": {
                        "$ref": "#/components/schemas/Limit_MaxTime"
                    }
                },
                "type": "object"
            },
            "ApolloFederationConfig": {
                "nullable": true,
                "properties": {
                    "enable": {
                        "description": "enable takes the version of apollo federation. Supported value is v1 only.",
                        "enum": [
                            "v1"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "enable"
                ],
                "type": "object"
            },
            "ArgumentDefinition_GraphQLType": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "AutoTriggerLogCleanupConfig": {
                "properties": {
                    "batch_size": {
                        "default": 10000,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "clean_invocation_logs": {
                        "default": false,
                        "type": "boolean"
                    },
                    "clear_older_than": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "paused": {
                        "default": false,
                        "type": "boolean"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/CronSchedule"
                    },
                    "timeout": {
                        "default": 60,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    }
                },
                "required": [
                    "schedule",
                    "clear_older_than"
                ],
                "type": "object"
            },
            "BackendMap_BackendConfigWrapper": {
                "properties": {
                    "bigquery": {
                        "items": {
                            "type": "null"
                        },
                        "type": "array"
                    },
                    "citus": {
                        "items": {
                            "type": "null"
                        },
                        "type": "array"
                    },
                    "cockroach": {
                        "items": {
                            "type": "null"
                        },
                        "type": "array"
                    },
                    "dataconnector": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/DataConnectorOptions"
                        },
                        "type": "object"
                    },
                    "mssql": {
                        "items": {
                            "type": "null"
                        },
                        "type": "array"
                    },
                    "mysql": {
                        "items": {
                            "type": "null"
                        },
                        "type": "array"
                    },
                    "postgres": {
                        "items": {
                            "type": "null"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BigQueryComputedFieldDefinition": {
                "properties": {
                    "argument_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "function": {
                        "$ref": "#/components/schemas/BigQueryFunctionName"
                    },
                    "return_table": {
                        "$ref": "#/components/schemas/BigQueryTableName"
                    }
                },
                "required": [
                    "function",
                    "argument_mapping"
                ],
                "type": "object"
            },
            "BigQueryConnSourceConfig": {
                "properties": {
                    "datasets": {
                        "oneOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            }
                        ]
                    },
                    "global_select_limit": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "additionalProperties": true,
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            }
                        ]
                    },
                    "project_id": {
                        "oneOf": [
                            {
                                "additionalProperties": true,
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            }
                        ]
                    },
                    "retry_base_delay": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "additionalProperties": true,
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            }
                        ]
                    },
                    "retry_limit": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "additionalProperties": true,
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            }
                        ]
                    },
                    "service_account": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            },
                            {
                                "$ref": "#/components/schemas/BigQueryServiceAccount"
                            },
                            {
                                "description": "JSON-encoded string",
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/BigQueryServiceAccount"
                            }
                        ]
                    }
                },
                "required": [
                    "service_account",
                    "datasets",
                    "project_id"
                ],
                "type": "object"
            },
            "BigQueryFunctionName": {
                "properties": {
                    "dataset": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "BigQueryServiceAccount": {
                "properties": {
                    "client_email": {
                        "type": "string"
                    },
                    "private_key": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "client_email",
                    "private_key",
                    "project_id"
                ],
                "type": "object"
            },
            "BigQueryTableName": {
                "properties": {
                    "dataset": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "dataset"
                ],
                "type": "object"
            },
            "BigqueryArrRelUsingFKeyOnMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "$ref": "#/components/schemas/BigQueryTableName"
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "BigqueryArrRelUsingFKeyOnSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "$ref": "#/components/schemas/BigQueryTableName"
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "BigqueryBoolExp": {
                "additionalProperties": true
            },
            "BigqueryComputedFieldMetadata": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/BigQueryComputedFieldDefinition"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "BigqueryCustomReturnTypeMetadata": {
                "description": "A return type.",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Return types for the custom return type",
                        "items": {
                            "$ref": "#/components/schemas/NullableScalarType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "A name for a custom return type",
                        "type": "string"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigquerySelectPermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "BigqueryDelPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/BigqueryBoolExp"
                    }
                },
                "required": [
                    "filter"
                ],
                "type": "object"
            },
            "BigqueryDeletePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/BigqueryDelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "BigqueryFunctionMetadata": {
                "description": "A custom SQL function to add to the GraphQL schema with configuration.\n\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/FunctionConfig"
                    },
                    "function": {
                        "$ref": "#/components/schemas/BigQueryFunctionName"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/FunctionPermissionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "BigqueryInsPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/BigqueryBoolExp"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "check"
                ],
                "type": "object"
            },
            "BigqueryInsertPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/BigqueryInsPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "BigqueryNativeQueryMetadata": {
                "description": "A native query as represented in metadata.",
                "properties": {
                    "arguments": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BigqueryNullableScalarType"
                        },
                        "default": {},
                        "description": "Free variables in the expression and their types",
                        "type": "object"
                    },
                    "code": {
                        "description": "Native code expression (SQL) to run\nAn interpolated query expressed in native code (SQL)",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the native query which appears in the graphql schema",
                        "type": "string"
                    },
                    "returns": {
                        "description": "Return type (table) of the expression",
                        "type": "string"
                    },
                    "root_field_name": {
                        "description": "Root field name for the native query",
                        "type": "string"
                    }
                },
                "required": [
                    "root_field_name",
                    "code",
                    "returns"
                ],
                "type": "object"
            },
            "BigqueryNullableScalarType": {
                "description": "A scalar type that can be nullable with an optional description",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ScalarType"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "BigqueryObjRelRemoteTableMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "$ref": "#/components/schemas/BigQueryTableName"
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "BigqueryObjRelRemoteTableSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "$ref": "#/components/schemas/BigQueryTableName"
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "BigqueryRUManual": {
                "properties": {
                    "manual_configuration": {
                        "$ref": "#/components/schemas/BigqueryRelManualConfig"
                    }
                },
                "required": [
                    "manual_configuration"
                ],
                "type": "object"
            },
            "BigqueryRelManualConfig": {
                "properties": {
                    "column_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "insertion_order": {
                        "enum": [
                            "before_parent",
                            "after_parent"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "remote_table": {
                        "$ref": "#/components/schemas/BigQueryTableName"
                    }
                },
                "required": [
                    "remote_table",
                    "column_mapping"
                ],
                "type": "object"
            },
            "BigquerySelPerm": {
                "properties": {
                    "allow_aggregations": {
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/BigqueryBoolExp"
                    },
                    "limit": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "query_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "subscription_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate",
                                "select_stream"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "BigquerySelectPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/BigquerySelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "BigquerySourceMetadata": {
                "properties": {
                    "configuration": {
                        "$ref": "#/components/schemas/BigQueryConnSourceConfig"
                    },
                    "custom_return_types": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigqueryCustomReturnTypeMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/SourceCustomization"
                    },
                    "functions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigqueryFunctionMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "kind": {
                        "enum": [
                            "bigquery"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "native_queries": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigqueryNativeQueryMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "query_tags": {
                        "$ref": "#/components/schemas/QueryTagsConfig"
                    },
                    "tables": {
                        "items": {
                            "$ref": "#/components/schemas/BigqueryTableMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "kind",
                    "tables",
                    "configuration"
                ],
                "type": "object"
            },
            "BigqueryTableConfig": {
                "properties": {
                    "column_config": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ColumnConfig"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_column_names": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/TableCustomRootFields"
                    }
                },
                "type": "object"
            },
            "BigqueryTableMetadata": {
                "description": "Representation of a table in metadata, 'tables.yaml' and 'metadata.json'",
                "properties": {
                    "apollo_federation_config": {
                        "$ref": "#/components/schemas/ApolloFederationConfig"
                    },
                    "array_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__BigQuery__ArrRelUsingFKeyOn__BigQuery_"
                        },
                        "type": "array"
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigqueryComputedFieldMetadata"
                        },
                        "type": "array"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/BigqueryTableConfig"
                    },
                    "delete_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigqueryDeletePermDef"
                        },
                        "type": "array"
                    },
                    "insert_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigqueryInsertPermDef"
                        },
                        "type": "array"
                    },
                    "is_enum": {
                        "default": false,
                        "type": "boolean"
                    },
                    "object_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__BigQuery__ObjRelUsingChoice__BigQuery_"
                        },
                        "type": "array"
                    },
                    "remote_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigquerySelectPermDef"
                        },
                        "type": "array"
                    },
                    "table": {
                        "$ref": "#/components/schemas/BigQueryTableName"
                    },
                    "update_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/BigqueryUpdatePermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "BigqueryUpdPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/BigqueryBoolExp"
                    },
                    "columns": {
                        "description": "Allowed columns",
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "filter": {
                        "$ref": "#/components/schemas/BigqueryBoolExp"
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "description": "Preset columns",
                        "type": "object"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "BigqueryUpdatePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/BigqueryUpdPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "BodyTransformFn_ModifyAsFormURLEncoded": {
                "properties": {
                    "action": {
                        "enum": [
                            "x_www_form_urlencoded"
                        ],
                        "type": "string"
                    },
                    "form_template": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "action",
                    "form_template"
                ],
                "type": "object"
            },
            "BodyTransformFn_ModifyAsJSON": {
                "properties": {
                    "action": {
                        "enum": [
                            "transform"
                        ],
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "template"
                ],
                "type": "object"
            },
            "BodyTransformFn_Remove": {
                "properties": {
                    "action": {
                        "enum": [
                            "remove"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "action"
                ],
                "type": "object"
            },
            "CertVar": {
                "nullable": true,
                "properties": {
                    "from_env": {
                        "type": "string"
                    }
                },
                "required": [
                    "from_env"
                ],
                "type": "object"
            },
            "CitusArrRelUsingFKeyOnMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "CitusArrRelUsingFKeyOnSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "CitusBoolExp": {
                "additionalProperties": true
            },
            "CitusComputedFieldMetadata": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/PostgresComputedFieldDefinition"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "CitusCustomReturnTypeMetadata": {
                "description": "A return type.",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Return types for the custom return type",
                        "items": {
                            "$ref": "#/components/schemas/NullableScalarType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "A name for a custom return type",
                        "type": "string"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusSelectPermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "CitusDelPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CitusBoolExp"
                    }
                },
                "required": [
                    "filter"
                ],
                "type": "object"
            },
            "CitusDeletePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CitusDelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CitusEventTriggerConfEventTriggerConf": {
                "properties": {
                    "cleanup_config": {
                        "$ref": "#/components/schemas/AutoTriggerLogCleanupConfig"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/CitusTriggerOpsDef"
                    },
                    "headers": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "request_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RequestTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/RequestTransformV2"
                            }
                        ]
                    },
                    "response_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/ResponseTransformV2"
                            }
                        ]
                    },
                    "retry_conf": {
                        "$ref": "#/components/schemas/RetryConf"
                    },
                    "trigger_on_replication": {
                        "default": false,
                        "type": "boolean"
                    },
                    "webhook": {
                        "type": "string"
                    },
                    "webhook_from_env": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition",
                    "retry_conf"
                ],
                "type": "object"
            },
            "CitusFunctionMetadata": {
                "description": "A custom SQL function to add to the GraphQL schema with configuration.\n\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/FunctionConfig"
                    },
                    "function": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_FunctionName"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "Name of the SQL function"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/FunctionPermissionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "CitusHealthCheckConfig": {
                "nullable": true,
                "properties": {
                    "interval": {
                        "type": "number"
                    },
                    "retries": {
                        "default": 3,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "retry_interval": {
                        "default": 10,
                        "type": "number"
                    },
                    "test": {
                        "$ref": "#/components/schemas/HealthCheckTestSql"
                    },
                    "timeout": {
                        "default": 10,
                        "type": "number"
                    }
                },
                "required": [
                    "interval"
                ],
                "type": "object"
            },
            "CitusInsPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/CitusBoolExp"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "check"
                ],
                "type": "object"
            },
            "CitusInsertPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CitusInsPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CitusNativeQueryMetadata": {
                "description": "A native query as represented in metadata.",
                "properties": {
                    "arguments": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CitusNullableScalarType"
                        },
                        "default": {},
                        "description": "Free variables in the expression and their types",
                        "type": "object"
                    },
                    "code": {
                        "description": "Native code expression (SQL) to run\nAn interpolated query expressed in native code (SQL)",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the native query which appears in the graphql schema",
                        "type": "string"
                    },
                    "returns": {
                        "description": "Return type (table) of the expression",
                        "type": "string"
                    },
                    "root_field_name": {
                        "description": "Root field name for the native query",
                        "type": "string"
                    }
                },
                "required": [
                    "root_field_name",
                    "code",
                    "returns"
                ],
                "type": "object"
            },
            "CitusNullableScalarType": {
                "description": "A scalar type that can be nullable with an optional description",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "The base scalar type\nPostgres Scalar Types",
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "CitusObjRelRemoteTableMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "CitusObjRelRemoteTableSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "CitusRUManual": {
                "properties": {
                    "manual_configuration": {
                        "$ref": "#/components/schemas/CitusRelManualConfig"
                    }
                },
                "required": [
                    "manual_configuration"
                ],
                "type": "object"
            },
            "CitusRelManualConfig": {
                "properties": {
                    "column_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "insertion_order": {
                        "enum": [
                            "before_parent",
                            "after_parent"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "remote_table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "remote_table",
                    "column_mapping"
                ],
                "type": "object"
            },
            "CitusSelPerm": {
                "properties": {
                    "allow_aggregations": {
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CitusBoolExp"
                    },
                    "limit": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "query_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "subscription_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate",
                                "select_stream"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "CitusSelectPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CitusSelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CitusSourceMetadata": {
                "properties": {
                    "configuration": {
                        "$ref": "#/components/schemas/PostgresConnConfiguration"
                    },
                    "custom_return_types": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusCustomReturnTypeMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/SourceCustomization"
                    },
                    "functions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusFunctionMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "health_check": {
                        "$ref": "#/components/schemas/CitusHealthCheckConfig"
                    },
                    "kind": {
                        "enum": [
                            "citus"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "native_queries": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusNativeQueryMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "query_tags": {
                        "$ref": "#/components/schemas/QueryTagsConfig"
                    },
                    "tables": {
                        "items": {
                            "$ref": "#/components/schemas/CitusTableMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "kind",
                    "tables",
                    "configuration"
                ],
                "type": "object"
            },
            "CitusSubscribeOpSpec": {
                "properties": {
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "payload": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "columns"
                ],
                "type": "object"
            },
            "CitusTableConfig": {
                "properties": {
                    "column_config": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ColumnConfig"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_column_names": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/TableCustomRootFields"
                    }
                },
                "type": "object"
            },
            "CitusTableMetadata": {
                "description": "Representation of a table in metadata, 'tables.yaml' and 'metadata.json'",
                "properties": {
                    "apollo_federation_config": {
                        "$ref": "#/components/schemas/ApolloFederationConfig"
                    },
                    "array_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing___Postgres__Citus___ArrRelUsingFKeyOn___Postgres__Citus__"
                        },
                        "type": "array"
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusComputedFieldMetadata"
                        },
                        "type": "array"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/CitusTableConfig"
                    },
                    "delete_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusDeletePermDef"
                        },
                        "type": "array"
                    },
                    "event_triggers": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusEventTriggerConfEventTriggerConf"
                        },
                        "type": "array"
                    },
                    "insert_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusInsertPermDef"
                        },
                        "type": "array"
                    },
                    "is_enum": {
                        "default": false,
                        "type": "boolean"
                    },
                    "object_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing___Postgres__Citus___ObjRelUsingChoice___Postgres__Citus__"
                        },
                        "type": "array"
                    },
                    "remote_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusSelectPermDef"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "update_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CitusUpdatePermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "CitusTriggerOpsDef": {
                "properties": {
                    "delete": {
                        "$ref": "#/components/schemas/CitusSubscribeOpSpec"
                    },
                    "enable_manual": {
                        "type": "boolean"
                    },
                    "insert": {
                        "$ref": "#/components/schemas/CitusSubscribeOpSpec"
                    },
                    "update": {
                        "$ref": "#/components/schemas/CitusSubscribeOpSpec"
                    }
                },
                "type": "object"
            },
            "CitusUpdPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/CitusBoolExp"
                    },
                    "columns": {
                        "description": "Allowed columns",
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CitusBoolExp"
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "description": "Preset columns",
                        "type": "object"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "CitusUpdatePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CitusUpdPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CockroachArrRelUsingFKeyOnMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "CockroachArrRelUsingFKeyOnSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "CockroachBoolExp": {
                "additionalProperties": true
            },
            "CockroachComputedFieldMetadata": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/PostgresComputedFieldDefinition"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "CockroachCustomReturnTypeMetadata": {
                "description": "A return type.",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Return types for the custom return type",
                        "items": {
                            "$ref": "#/components/schemas/NullableScalarType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "A name for a custom return type",
                        "type": "string"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachSelectPermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "CockroachDelPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CockroachBoolExp"
                    }
                },
                "required": [
                    "filter"
                ],
                "type": "object"
            },
            "CockroachDeletePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CockroachDelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CockroachEventTriggerConfEventTriggerConf": {
                "properties": {
                    "cleanup_config": {
                        "$ref": "#/components/schemas/AutoTriggerLogCleanupConfig"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/CockroachTriggerOpsDef"
                    },
                    "headers": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "request_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RequestTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/RequestTransformV2"
                            }
                        ]
                    },
                    "response_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/ResponseTransformV2"
                            }
                        ]
                    },
                    "retry_conf": {
                        "$ref": "#/components/schemas/RetryConf"
                    },
                    "trigger_on_replication": {
                        "default": false,
                        "type": "boolean"
                    },
                    "webhook": {
                        "type": "string"
                    },
                    "webhook_from_env": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition",
                    "retry_conf"
                ],
                "type": "object"
            },
            "CockroachFunctionMetadata": {
                "description": "A custom SQL function to add to the GraphQL schema with configuration.\n\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/FunctionConfig"
                    },
                    "function": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_FunctionName"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "Name of the SQL function"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/FunctionPermissionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "CockroachHealthCheckConfig": {
                "nullable": true,
                "properties": {
                    "interval": {
                        "type": "number"
                    },
                    "retries": {
                        "default": 3,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "retry_interval": {
                        "default": 10,
                        "type": "number"
                    },
                    "test": {
                        "$ref": "#/components/schemas/HealthCheckTestSql"
                    },
                    "timeout": {
                        "default": 10,
                        "type": "number"
                    }
                },
                "required": [
                    "interval"
                ],
                "type": "object"
            },
            "CockroachInsPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/CockroachBoolExp"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "check"
                ],
                "type": "object"
            },
            "CockroachInsertPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CockroachInsPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CockroachNativeQueryMetadata": {
                "description": "A native query as represented in metadata.",
                "properties": {
                    "arguments": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CockroachNullableScalarType"
                        },
                        "default": {},
                        "description": "Free variables in the expression and their types",
                        "type": "object"
                    },
                    "code": {
                        "description": "Native code expression (SQL) to run\nAn interpolated query expressed in native code (SQL)",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the native query which appears in the graphql schema",
                        "type": "string"
                    },
                    "returns": {
                        "description": "Return type (table) of the expression",
                        "type": "string"
                    },
                    "root_field_name": {
                        "description": "Root field name for the native query",
                        "type": "string"
                    }
                },
                "required": [
                    "root_field_name",
                    "code",
                    "returns"
                ],
                "type": "object"
            },
            "CockroachNullableScalarType": {
                "description": "A scalar type that can be nullable with an optional description",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "The base scalar type\nPostgres Scalar Types",
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "CockroachObjRelRemoteTableMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "CockroachObjRelRemoteTableSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "CockroachRUManual": {
                "properties": {
                    "manual_configuration": {
                        "$ref": "#/components/schemas/CockroachRelManualConfig"
                    }
                },
                "required": [
                    "manual_configuration"
                ],
                "type": "object"
            },
            "CockroachRelManualConfig": {
                "properties": {
                    "column_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "insertion_order": {
                        "enum": [
                            "before_parent",
                            "after_parent"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "remote_table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "remote_table",
                    "column_mapping"
                ],
                "type": "object"
            },
            "CockroachSelPerm": {
                "properties": {
                    "allow_aggregations": {
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CockroachBoolExp"
                    },
                    "limit": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "query_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "subscription_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate",
                                "select_stream"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "CockroachSelectPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CockroachSelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CockroachSourceMetadata": {
                "properties": {
                    "configuration": {
                        "$ref": "#/components/schemas/PostgresConnConfiguration"
                    },
                    "custom_return_types": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachCustomReturnTypeMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/SourceCustomization"
                    },
                    "functions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachFunctionMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "health_check": {
                        "$ref": "#/components/schemas/CockroachHealthCheckConfig"
                    },
                    "kind": {
                        "enum": [
                            "cockroach"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "native_queries": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachNativeQueryMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "query_tags": {
                        "$ref": "#/components/schemas/QueryTagsConfig"
                    },
                    "tables": {
                        "items": {
                            "$ref": "#/components/schemas/CockroachTableMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "kind",
                    "tables",
                    "configuration"
                ],
                "type": "object"
            },
            "CockroachSubscribeOpSpec": {
                "properties": {
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "payload": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "columns"
                ],
                "type": "object"
            },
            "CockroachTableConfig": {
                "properties": {
                    "column_config": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ColumnConfig"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_column_names": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/TableCustomRootFields"
                    }
                },
                "type": "object"
            },
            "CockroachTableMetadata": {
                "description": "Representation of a table in metadata, 'tables.yaml' and 'metadata.json'",
                "properties": {
                    "apollo_federation_config": {
                        "$ref": "#/components/schemas/ApolloFederationConfig"
                    },
                    "array_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing___Postgres__Cockroach___ArrRelUsingFKeyOn___Postgres__Cockroach__"
                        },
                        "type": "array"
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachComputedFieldMetadata"
                        },
                        "type": "array"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/CockroachTableConfig"
                    },
                    "delete_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachDeletePermDef"
                        },
                        "type": "array"
                    },
                    "event_triggers": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachEventTriggerConfEventTriggerConf"
                        },
                        "type": "array"
                    },
                    "insert_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachInsertPermDef"
                        },
                        "type": "array"
                    },
                    "is_enum": {
                        "default": false,
                        "type": "boolean"
                    },
                    "object_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing___Postgres__Cockroach___ObjRelUsingChoice___Postgres__Cockroach__"
                        },
                        "type": "array"
                    },
                    "remote_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachSelectPermDef"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "update_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/CockroachUpdatePermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "CockroachTriggerOpsDef": {
                "properties": {
                    "delete": {
                        "$ref": "#/components/schemas/CockroachSubscribeOpSpec"
                    },
                    "enable_manual": {
                        "type": "boolean"
                    },
                    "insert": {
                        "$ref": "#/components/schemas/CockroachSubscribeOpSpec"
                    },
                    "update": {
                        "$ref": "#/components/schemas/CockroachSubscribeOpSpec"
                    }
                },
                "type": "object"
            },
            "CockroachUpdPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/CockroachBoolExp"
                    },
                    "columns": {
                        "description": "Allowed columns",
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "filter": {
                        "$ref": "#/components/schemas/CockroachBoolExp"
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "description": "Preset columns",
                        "type": "object"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "CockroachUpdatePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/CockroachUpdPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "CollectionDef": {
                "properties": {
                    "queries": {
                        "items": {
                            "$ref": "#/components/schemas/ListedQuery"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "queries"
                ],
                "type": "object"
            },
            "ColumnConfig": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "type": "object"
            },
            "Config": {
                "additionalProperties": {
                    "additionalProperties": true
                },
                "type": "object"
            },
            "ConnectionTemplate": {
                "description": "https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgconnectiontemplate",
                "nullable": true,
                "properties": {
                    "template": {
                        "additionalProperties": true,
                        "description": "Connection kriti template (read more in the docs)\nKritiTemplate"
                    },
                    "version": {
                        "default": 1,
                        "description": "Optional connection template version (supported versions: [1], default: 1)",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    }
                },
                "required": [
                    "template"
                ],
                "type": "object"
            },
            "CreateCollection": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/CollectionDef"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "CronSchedule": {
                "type": "string"
            },
            "CronTriggerMetadata": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "headers": {
                        "default": [],
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "include_in_metadata": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payload": {
                        "additionalProperties": true
                    },
                    "request_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RequestTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/RequestTransformV2"
                            }
                        ]
                    },
                    "response_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/ResponseTransformV2"
                            }
                        ]
                    },
                    "retry_conf": {
                        "$ref": "#/components/schemas/STRetryConf"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/CronSchedule"
                    },
                    "webhook": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "webhook",
                    "schedule",
                    "include_in_metadata"
                ],
                "type": "object"
            },
            "CustomRootField": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "type": "object"
            },
            "CustomTypes": {
                "properties": {
                    "enums": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/EnumTypeDefinition"
                        },
                        "type": "array"
                    },
                    "input_objects": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/InputObjectTypeDefinition"
                        },
                        "type": "array"
                    },
                    "objects": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/ObjectTypeDefinition"
                        },
                        "type": "array"
                    },
                    "scalars": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/ScalarTypeDefinition"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DataConnectorConnSourceConfig": {
                "properties": {
                    "template": {
                        "type": "string"
                    },
                    "timeout": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DataConnectorSourceTimeoutSeconds"
                            },
                            {
                                "$ref": "#/components/schemas/DataConnectorSourceTimeoutMilliseconds"
                            },
                            {
                                "$ref": "#/components/schemas/DataConnectorSourceTimeoutMicroseconds"
                            }
                        ]
                    },
                    "value": {
                        "$ref": "#/components/schemas/Config"
                    }
                },
                "required": [
                    "value"
                ],
                "type": "object"
            },
            "DataConnectorOptions": {
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "required": [
                    "uri"
                ],
                "type": "object"
            },
            "DataConnectorSourceTimeoutMicroseconds": {
                "properties": {
                    "microseconds": {
                        "type": "number"
                    }
                },
                "required": [
                    "microseconds"
                ],
                "type": "object"
            },
            "DataConnectorSourceTimeoutMilliseconds": {
                "properties": {
                    "milliseconds": {
                        "type": "number"
                    }
                },
                "required": [
                    "milliseconds"
                ],
                "type": "object"
            },
            "DataConnectorSourceTimeoutSeconds": {
                "properties": {
                    "seconds": {
                        "type": "number"
                    }
                },
                "required": [
                    "seconds"
                ],
                "type": "object"
            },
            "DataconnectorArrRelUsingFKeyOnMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "DataconnectorArrRelUsingFKeyOnSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "DataconnectorBoolExp": {
                "additionalProperties": true
            },
            "DataconnectorComputedFieldMetadata": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "definition": {
                        "items": {
                            "type": "null"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "DataconnectorCustomReturnTypeMetadata": {
                "description": "A return type.",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Return types for the custom return type",
                        "items": {
                            "$ref": "#/components/schemas/NullableScalarType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "A name for a custom return type",
                        "type": "string"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorSelectPermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "DataconnectorDelPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/DataconnectorBoolExp"
                    }
                },
                "required": [
                    "filter"
                ],
                "type": "object"
            },
            "DataconnectorDeletePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/DataconnectorDelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "DataconnectorFunctionMetadata": {
                "description": "A custom SQL function to add to the GraphQL schema with configuration.\n\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/FunctionConfig"
                    },
                    "function": {
                        "description": "Name of the SQL function",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/FunctionPermissionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "DataconnectorInsPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/DataconnectorBoolExp"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "check"
                ],
                "type": "object"
            },
            "DataconnectorInsertPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/DataconnectorInsPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "DataconnectorNativeQueryMetadata": {
                "description": "A native query as represented in metadata.",
                "properties": {
                    "arguments": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/DataconnectorNullableScalarType"
                        },
                        "default": {},
                        "description": "Free variables in the expression and their types",
                        "type": "object"
                    },
                    "code": {
                        "description": "Native code expression (SQL) to run\nAn interpolated query expressed in native code (SQL)",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the native query which appears in the graphql schema",
                        "type": "string"
                    },
                    "returns": {
                        "description": "Return type (table) of the expression",
                        "type": "string"
                    },
                    "root_field_name": {
                        "description": "Root field name for the native query",
                        "type": "string"
                    }
                },
                "required": [
                    "root_field_name",
                    "code",
                    "returns"
                ],
                "type": "object"
            },
            "DataconnectorNullableScalarType": {
                "description": "A scalar type that can be nullable with an optional description",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ScalarType"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "DataconnectorObjRelRemoteTableMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "DataconnectorObjRelRemoteTableSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "DataconnectorRUManual": {
                "properties": {
                    "manual_configuration": {
                        "$ref": "#/components/schemas/DataconnectorRelManualConfig"
                    }
                },
                "required": [
                    "manual_configuration"
                ],
                "type": "object"
            },
            "DataconnectorRelManualConfig": {
                "properties": {
                    "column_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "insertion_order": {
                        "enum": [
                            "before_parent",
                            "after_parent"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "remote_table": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "remote_table",
                    "column_mapping"
                ],
                "type": "object"
            },
            "DataconnectorSelPerm": {
                "properties": {
                    "allow_aggregations": {
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/DataconnectorBoolExp"
                    },
                    "limit": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "query_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "subscription_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate",
                                "select_stream"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "DataconnectorSelectPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/DataconnectorSelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "DataconnectorSourceMetadata": {
                "properties": {
                    "configuration": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DataConnectorConnSourceConfig"
                            },
                            {
                                "$ref": "#/components/schemas/Config"
                            }
                        ]
                    },
                    "custom_return_types": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorCustomReturnTypeMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/SourceCustomization"
                    },
                    "functions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorFunctionMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "kind": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "name": {
                        "type": "string"
                    },
                    "native_queries": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorNativeQueryMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "query_tags": {
                        "$ref": "#/components/schemas/QueryTagsConfig"
                    },
                    "tables": {
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorTableMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "kind",
                    "tables",
                    "configuration"
                ],
                "type": "object"
            },
            "DataconnectorTableConfig": {
                "properties": {
                    "column_config": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ColumnConfig"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_column_names": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/TableCustomRootFields"
                    }
                },
                "type": "object"
            },
            "DataconnectorTableMetadata": {
                "description": "Representation of a table in metadata, 'tables.yaml' and 'metadata.json'",
                "properties": {
                    "apollo_federation_config": {
                        "$ref": "#/components/schemas/ApolloFederationConfig"
                    },
                    "array_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__DataConnector__ArrRelUsingFKeyOn__DataConnector_"
                        },
                        "type": "array"
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorComputedFieldMetadata"
                        },
                        "type": "array"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/DataconnectorTableConfig"
                    },
                    "delete_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorDeletePermDef"
                        },
                        "type": "array"
                    },
                    "insert_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorInsertPermDef"
                        },
                        "type": "array"
                    },
                    "is_enum": {
                        "default": false,
                        "type": "boolean"
                    },
                    "object_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__DataConnector__ObjRelUsingChoice__DataConnector_"
                        },
                        "type": "array"
                    },
                    "remote_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorSelectPermDef"
                        },
                        "type": "array"
                    },
                    "table": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "update_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/DataconnectorUpdatePermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "DataconnectorUpdPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/DataconnectorBoolExp"
                    },
                    "columns": {
                        "description": "Allowed columns",
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "filter": {
                        "$ref": "#/components/schemas/DataconnectorBoolExp"
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "description": "Preset columns",
                        "type": "object"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "DataconnectorUpdatePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/DataconnectorUpdPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "EndpointDef_QueryReference": {
                "properties": {
                    "query": {
                        "$ref": "#/components/schemas/QueryReference"
                    }
                },
                "required": [
                    "query"
                ],
                "type": "object"
            },
            "EndpointMetadata_QueryReference": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/EndpointDef_QueryReference"
                    },
                    "methods": {
                        "items": {
                            "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "DELETE",
                                "PATCH"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "url",
                    "methods",
                    "definition"
                ],
                "type": "object"
            },
            "EnumTypeDefinition": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "values": {
                        "items": {
                            "$ref": "#/components/schemas/EnumValueDefinition"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "values"
                ],
                "type": "object"
            },
            "EnumValueDefinition": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "is_deprecated": {
                        "type": "boolean"
                    },
                    "value": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "required": [
                    "value"
                ],
                "type": "object"
            },
            "ExtensionsSchema": {
                "type": "string"
            },
            "FieldCall": {
                "properties": {
                    "arguments": {
                        "$ref": "#/components/schemas/RemoteArguments"
                    },
                    "field": {
                        "$ref": "#/components/schemas/RemoteFields"
                    }
                },
                "required": [
                    "arguments"
                ],
                "type": "object"
            },
            "FromEnv": {
                "properties": {
                    "from_env": {
                        "type": "string"
                    }
                },
                "required": [
                    "from_env"
                ],
                "type": "object"
            },
            "FunctionConfig": {
                "properties": {
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/FunctionCustomRootFields"
                    },
                    "exposed_as": {
                        "enum": [
                            "query",
                            "mutation"
                        ],
                        "type": "string"
                    },
                    "session_argument": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FunctionCustomRootFields": {
                "properties": {
                    "function": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "function_aggregate": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "type": "object"
            },
            "FunctionPermissionInfo": {
                "properties": {
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ],
                "type": "object"
            },
            "GraphQLName": {
                "type": "string"
            },
            "GraphQLSchema": {
                "type": "string"
            },
            "GraphQLValue_Name": {
                "additionalProperties": true,
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "null"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "number"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    {
                        "items": {
                            "$ref": "#/components/schemas/GraphQLValue_Name"
                        },
                        "type": "array"
                    },
                    {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLValue_Name"
                        },
                        "type": "object"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "HeaderConfFromEnv": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value_from_env": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value_from_env"
                ],
                "type": "object"
            },
            "HeaderConfValue": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value"
                ],
                "type": "object"
            },
            "HealthCheckTestSql": {
                "properties": {
                    "sql": {
                        "default": "SELECT 1",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InputObjectFieldDefinition": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "InputObjectTypeDefinition": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "fields": {
                        "items": {
                            "$ref": "#/components/schemas/InputObjectFieldDefinition"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "Limit_MaxBatchSize": {
                "properties": {
                    "global": {
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "number"
                    },
                    "per_role": {
                        "additionalProperties": {
                            "maximum": 9223372036854775807,
                            "minimum": 0,
                            "type": "number"
                        },
                        "default": {},
                        "type": "object"
                    }
                },
                "required": [
                    "global"
                ],
                "type": "object"
            },
            "Limit_MaxDepth": {
                "properties": {
                    "global": {
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "number"
                    },
                    "per_role": {
                        "additionalProperties": {
                            "maximum": 9223372036854775807,
                            "minimum": 0,
                            "type": "number"
                        },
                        "default": {},
                        "type": "object"
                    }
                },
                "required": [
                    "global"
                ],
                "type": "object"
            },
            "Limit_MaxNodes": {
                "properties": {
                    "global": {
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "number"
                    },
                    "per_role": {
                        "additionalProperties": {
                            "maximum": 9223372036854775807,
                            "minimum": 0,
                            "type": "number"
                        },
                        "default": {},
                        "type": "object"
                    }
                },
                "required": [
                    "global"
                ],
                "type": "object"
            },
            "Limit_MaxTime": {
                "properties": {
                    "global": {
                        "maximum": 1.79769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216e308,
                        "minimum": 0,
                        "type": "number"
                    },
                    "per_role": {
                        "additionalProperties": {
                            "maximum": 1.79769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216e308,
                            "minimum": 0,
                            "type": "number"
                        },
                        "default": {},
                        "type": "object"
                    }
                },
                "required": [
                    "global"
                ],
                "type": "object"
            },
            "Limit_RateLimitConfig": {
                "properties": {
                    "global": {
                        "$ref": "#/components/schemas/RateLimitConfig"
                    },
                    "per_role": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RateLimitConfig"
                        },
                        "default": {},
                        "type": "object"
                    }
                },
                "required": [
                    "global"
                ],
                "type": "object"
            },
            "ListedQuery": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "query"
                ],
                "type": "object"
            },
            "MSSQLConnConfiguration": {
                "properties": {
                    "connection_info": {
                        "$ref": "#/components/schemas/MSSQLConnectionInfo"
                    },
                    "read_replicas": {
                        "items": {
                            "$ref": "#/components/schemas/MSSQLConnectionInfo"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "connection_info"
                ],
                "type": "object"
            },
            "MSSQLConnectionInfo": {
                "properties": {
                    "connection_string": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            }
                        ]
                    },
                    "pool_settings": {
                        "$ref": "#/components/schemas/MSSQLPoolSettings"
                    }
                },
                "required": [
                    "connection_string",
                    "pool_settings"
                ],
                "type": "object"
            },
            "MSSQLPoolSettings": {
                "properties": {
                    "idle_timeout": {
                        "default": 5,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "max_connections": {
                        "default": 50,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "number"
                    },
                    "total_max_connections": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "MSSQLTableName": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "schema": {
                        "default": "dbo",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "Metadata": {
                "description": "configuration format for the Hasura GraphQL Engine",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MetadataV1"
                    },
                    {
                        "$ref": "#/components/schemas/MetadataV2"
                    },
                    {
                        "$ref": "#/components/schemas/MetadataV3"
                    }
                ]
            },
            "MetadataV1": {
                "properties": {
                    "functions": {
                        "description": "user-defined SQL functions\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "remote_schemas": {
                        "description": "merge remote GraphQL schemas and provide a unified GraphQL API\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "tables": {
                        "description": "configured database tables\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "version": {
                        "enum": [
                            1
                        ],
                        "type": "number"
                    }
                },
                "required": [
                    "tables"
                ],
                "type": "object"
            },
            "MetadataV2": {
                "properties": {
                    "actions": {
                        "description": "action definitions which extend Hasura's schema with custom business logic using custom queries and mutations\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "allowlist": {
                        "description": "safe GraphQL operations - when allow lists are enabled only these operations are allowed\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "cron_triggers": {
                        "description": "reliably trigger HTTP endpoints to run custom business logic periodically based on a cron schedule\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "custom_types": {
                        "additionalProperties": true,
                        "description": "custom type definitions\n\n\nobject with unspecified properties - this is a placeholder that will eventually be replaced with a more detailed description"
                    },
                    "functions": {
                        "description": "user-defined SQL functions\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "query_collections": {
                        "description": "group queries using query collections\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "remote_schemas": {
                        "description": "merge remote GraphQL schemas and provide a unified GraphQL API\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "tables": {
                        "description": "configured database tables\n\n\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description",
                        "items": {
                            "additionalProperties": true
                        },
                        "type": "array"
                    },
                    "version": {
                        "enum": [
                            2
                        ],
                        "type": "number"
                    }
                },
                "required": [
                    "version",
                    "tables"
                ],
                "type": "object"
            },
            "MetadataV3": {
                "properties": {
                    "actions": {
                        "default": [],
                        "description": "action definitions which extend Hasura's schema with custom business logic using custom queries and mutations",
                        "items": {
                            "$ref": "#/components/schemas/ActionMetadata"
                        },
                        "type": "array"
                    },
                    "allowlist": {
                        "default": [],
                        "description": "safe GraphQL operations - when allow lists are enabled only these operations are allowed",
                        "items": {
                            "$ref": "#/components/schemas/AllowlistEntry"
                        },
                        "type": "array"
                    },
                    "api_limits": {
                        "$ref": "#/components/schemas/ApiLimit"
                    },
                    "backend_configs": {
                        "$ref": "#/components/schemas/BackendMap_BackendConfigWrapper"
                    },
                    "cron_triggers": {
                        "default": [],
                        "description": "reliably trigger HTTP endpoints to run custom business logic periodically based on a cron schedule",
                        "items": {
                            "$ref": "#/components/schemas/CronTriggerMetadata"
                        },
                        "type": "array"
                    },
                    "custom_types": {
                        "$ref": "#/components/schemas/CustomTypes"
                    },
                    "graphql_schema_introspection": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "inherited_roles": {
                        "default": [],
                        "description": "an inherited role is a way to create a new role which inherits permissions from two or more roles",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        },
                        "type": "array"
                    },
                    "metrics_config": {
                        "$ref": "#/components/schemas/MetricsConfig"
                    },
                    "network": {
                        "$ref": "#/components/schemas/Network"
                    },
                    "opentelemetry": {
                        "$ref": "#/components/schemas/OpenTelemetryConfig"
                    },
                    "query_collections": {
                        "default": [],
                        "description": "group queries using query collections",
                        "items": {
                            "$ref": "#/components/schemas/CreateCollection"
                        },
                        "type": "array"
                    },
                    "remote_schemas": {
                        "default": [],
                        "description": "merge remote GraphQL schemas and provide a unified GraphQL API",
                        "items": {
                            "$ref": "#/components/schemas/RemoteSchemaMetadata_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "rest_endpoints": {
                        "default": [],
                        "description": "REST interfaces to saved GraphQL queries and mutations",
                        "items": {
                            "$ref": "#/components/schemas/EndpointMetadata_QueryReference"
                        },
                        "type": "array"
                    },
                    "sources": {
                        "description": "configured databases",
                        "items": {
                            "$ref": "#/components/schemas/SourceMetadata"
                        },
                        "type": "array"
                    },
                    "version": {
                        "enum": [
                            3
                        ],
                        "type": "number"
                    }
                },
                "required": [
                    "version",
                    "sources"
                ],
                "type": "object"
            },
            "MetricsConfig": {
                "properties": {
                    "analyze_query_variables": {
                        "type": "boolean"
                    },
                    "analyze_response_body": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "analyze_query_variables",
                    "analyze_response_body"
                ],
                "type": "object"
            },
            "MssqlArrRelUsingFKeyOnMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MSSQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "MssqlArrRelUsingFKeyOnSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MSSQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "MssqlBoolExp": {
                "additionalProperties": true
            },
            "MssqlComputedFieldMetadata": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "definition": {
                        "additionalProperties": true
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "MssqlCustomReturnTypeMetadata": {
                "description": "A return type.",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Return types for the custom return type",
                        "items": {
                            "$ref": "#/components/schemas/NullableScalarType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "A name for a custom return type",
                        "type": "string"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlSelectPermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "MssqlDelPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/MssqlBoolExp"
                    }
                },
                "required": [
                    "filter"
                ],
                "type": "object"
            },
            "MssqlDeletePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MssqlDelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "MssqlEventTriggerConfEventTriggerConf": {
                "properties": {
                    "cleanup_config": {
                        "$ref": "#/components/schemas/AutoTriggerLogCleanupConfig"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/MssqlTriggerOpsDef"
                    },
                    "headers": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "request_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RequestTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/RequestTransformV2"
                            }
                        ]
                    },
                    "response_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/ResponseTransformV2"
                            }
                        ]
                    },
                    "retry_conf": {
                        "$ref": "#/components/schemas/RetryConf"
                    },
                    "trigger_on_replication": {
                        "default": true,
                        "type": "boolean"
                    },
                    "webhook": {
                        "type": "string"
                    },
                    "webhook_from_env": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition",
                    "retry_conf"
                ],
                "type": "object"
            },
            "MssqlFunctionMetadata": {
                "description": "A custom SQL function to add to the GraphQL schema with configuration.\n\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/FunctionConfig"
                    },
                    "function": {
                        "description": "Name of the SQL function",
                        "type": "string"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/FunctionPermissionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "MssqlHealthCheckConfig": {
                "nullable": true,
                "properties": {
                    "interval": {
                        "type": "number"
                    },
                    "retries": {
                        "default": 3,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "retry_interval": {
                        "default": 10,
                        "type": "number"
                    },
                    "test": {
                        "$ref": "#/components/schemas/HealthCheckTestSql"
                    },
                    "timeout": {
                        "default": 10,
                        "type": "number"
                    }
                },
                "required": [
                    "interval"
                ],
                "type": "object"
            },
            "MssqlInsPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/MssqlBoolExp"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "check"
                ],
                "type": "object"
            },
            "MssqlInsertPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MssqlInsPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "MssqlNativeQueryMetadata": {
                "description": "A native query as represented in metadata.",
                "properties": {
                    "arguments": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/MssqlNullableScalarType"
                        },
                        "default": {},
                        "description": "Free variables in the expression and their types",
                        "type": "object"
                    },
                    "code": {
                        "description": "Native code expression (SQL) to run\nAn interpolated query expressed in native code (SQL)",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the native query which appears in the graphql schema",
                        "type": "string"
                    },
                    "returns": {
                        "description": "Return type (table) of the expression",
                        "type": "string"
                    },
                    "root_field_name": {
                        "description": "Root field name for the native query",
                        "type": "string"
                    }
                },
                "required": [
                    "root_field_name",
                    "code",
                    "returns"
                ],
                "type": "object"
            },
            "MssqlNullableScalarType": {
                "description": "A scalar type that can be nullable with an optional description",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ScalarType"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "MssqlObjRelRemoteTableMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MSSQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "MssqlObjRelRemoteTableSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MSSQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "MssqlRUManual": {
                "properties": {
                    "manual_configuration": {
                        "$ref": "#/components/schemas/MssqlRelManualConfig"
                    }
                },
                "required": [
                    "manual_configuration"
                ],
                "type": "object"
            },
            "MssqlRelManualConfig": {
                "properties": {
                    "column_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "insertion_order": {
                        "enum": [
                            "before_parent",
                            "after_parent"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "remote_table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MSSQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "remote_table",
                    "column_mapping"
                ],
                "type": "object"
            },
            "MssqlSelPerm": {
                "properties": {
                    "allow_aggregations": {
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/MssqlBoolExp"
                    },
                    "limit": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "query_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "subscription_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate",
                                "select_stream"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "MssqlSelectPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MssqlSelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "MssqlSourceMetadata": {
                "properties": {
                    "configuration": {
                        "$ref": "#/components/schemas/MSSQLConnConfiguration"
                    },
                    "custom_return_types": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlCustomReturnTypeMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/SourceCustomization"
                    },
                    "functions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlFunctionMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "health_check": {
                        "$ref": "#/components/schemas/MssqlHealthCheckConfig"
                    },
                    "kind": {
                        "enum": [
                            "mssql"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "native_queries": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlNativeQueryMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "query_tags": {
                        "$ref": "#/components/schemas/QueryTagsConfig"
                    },
                    "tables": {
                        "items": {
                            "$ref": "#/components/schemas/MssqlTableMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "kind",
                    "tables",
                    "configuration"
                ],
                "type": "object"
            },
            "MssqlSubscribeOpSpec": {
                "properties": {
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "payload": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "columns"
                ],
                "type": "object"
            },
            "MssqlTableConfig": {
                "properties": {
                    "column_config": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ColumnConfig"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_column_names": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/TableCustomRootFields"
                    }
                },
                "type": "object"
            },
            "MssqlTableMetadata": {
                "description": "Representation of a table in metadata, 'tables.yaml' and 'metadata.json'",
                "properties": {
                    "apollo_federation_config": {
                        "$ref": "#/components/schemas/ApolloFederationConfig"
                    },
                    "array_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__MSSQL__ArrRelUsingFKeyOn__MSSQL_"
                        },
                        "type": "array"
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlComputedFieldMetadata"
                        },
                        "type": "array"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/MssqlTableConfig"
                    },
                    "delete_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlDeletePermDef"
                        },
                        "type": "array"
                    },
                    "event_triggers": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlEventTriggerConfEventTriggerConf"
                        },
                        "type": "array"
                    },
                    "insert_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlInsertPermDef"
                        },
                        "type": "array"
                    },
                    "is_enum": {
                        "default": false,
                        "type": "boolean"
                    },
                    "object_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__MSSQL__ObjRelUsingChoice__MSSQL_"
                        },
                        "type": "array"
                    },
                    "remote_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlSelectPermDef"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MSSQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "update_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MssqlUpdatePermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "MssqlTriggerOpsDef": {
                "properties": {
                    "delete": {
                        "$ref": "#/components/schemas/MssqlSubscribeOpSpec"
                    },
                    "enable_manual": {
                        "type": "boolean"
                    },
                    "insert": {
                        "$ref": "#/components/schemas/MssqlSubscribeOpSpec"
                    },
                    "update": {
                        "$ref": "#/components/schemas/MssqlSubscribeOpSpec"
                    }
                },
                "type": "object"
            },
            "MssqlUpdPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/MssqlBoolExp"
                    },
                    "columns": {
                        "description": "Allowed columns",
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "filter": {
                        "$ref": "#/components/schemas/MssqlBoolExp"
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "description": "Preset columns",
                        "type": "object"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "MssqlUpdatePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MssqlUpdPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "MySQLConnPoolSettings": {
                "properties": {
                    "idle_timeout": {
                        "default": 5,
                        "maximum": 1.8446744073709551615e19,
                        "minimum": 0,
                        "type": "number"
                    },
                    "max_connections": {
                        "default": 50,
                        "maximum": 1.8446744073709551615e19,
                        "minimum": 0,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "MySQLConnSourceConfig": {
                "properties": {
                    "database": {
                        "type": "string"
                    },
                    "host": {
                        "description": "Works with `127.0.0.1` but not with `localhost`: https://mariadb.com/kb/en/troubleshooting-connection-issues/#localhost-and",
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "pool_settings": {
                        "$ref": "#/components/schemas/MySQLConnPoolSettings"
                    },
                    "port": {
                        "maximum": 65535,
                        "minimum": 0,
                        "type": "number"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "host",
                    "port",
                    "user",
                    "password",
                    "database",
                    "pool_settings"
                ],
                "type": "object"
            },
            "MySQLTableName": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "schema": {
                        "nullable": true,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "MysqlArrRelUsingFKeyOnMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MySQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "MysqlArrRelUsingFKeyOnSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MySQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "MysqlBoolExp": {
                "additionalProperties": true
            },
            "MysqlComputedFieldMetadata": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "definition": {
                        "additionalProperties": true
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "MysqlCustomReturnTypeMetadata": {
                "description": "A return type.",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Return types for the custom return type",
                        "items": {
                            "$ref": "#/components/schemas/NullableScalarType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "A name for a custom return type",
                        "type": "string"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlSelectPermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "MysqlDelPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/MysqlBoolExp"
                    }
                },
                "required": [
                    "filter"
                ],
                "type": "object"
            },
            "MysqlDeletePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MysqlDelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "MysqlFunctionMetadata": {
                "description": "A custom SQL function to add to the GraphQL schema with configuration.\n\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/FunctionConfig"
                    },
                    "function": {
                        "description": "Name of the SQL function",
                        "type": "string"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/FunctionPermissionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "MysqlInsPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/MysqlBoolExp"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "check"
                ],
                "type": "object"
            },
            "MysqlInsertPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MysqlInsPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "MysqlNativeQueryMetadata": {
                "description": "A native query as represented in metadata.",
                "properties": {
                    "arguments": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/MysqlNullableScalarType"
                        },
                        "default": {},
                        "description": "Free variables in the expression and their types",
                        "type": "object"
                    },
                    "code": {
                        "description": "Native code expression (SQL) to run\nAn interpolated query expressed in native code (SQL)",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the native query which appears in the graphql schema",
                        "type": "string"
                    },
                    "returns": {
                        "description": "Return type (table) of the expression",
                        "type": "string"
                    },
                    "root_field_name": {
                        "description": "Root field name for the native query",
                        "type": "string"
                    }
                },
                "required": [
                    "root_field_name",
                    "code",
                    "returns"
                ],
                "type": "object"
            },
            "MysqlNullableScalarType": {
                "description": "A scalar type that can be nullable with an optional description",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "The base scalar type\nA MySQL scalar type.",
                        "enum": [
                            "DATE",
                            "DECIMAL",
                            "DECIMAL",
                            "TINYINT",
                            "SMALLINT",
                            "INT",
                            "FLOAT",
                            "DOUBLE",
                            "NULL",
                            "TIMESTAMP",
                            "BIGINT",
                            "MEDIUMINT",
                            "DATE",
                            "TIME",
                            "DATETIME",
                            "YEAR",
                            "VARCHAR",
                            "BIT",
                            "ENUM",
                            "SET",
                            "TINYBLOB",
                            "MEDIUMBLOB",
                            "LONGBLOB",
                            "BLOB",
                            "VARCHAR",
                            "TEXT",
                            "GEOMETRY",
                            "JSON"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "MysqlObjRelRemoteTableMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MySQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "MysqlObjRelRemoteTableSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MySQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "MysqlRUManual": {
                "properties": {
                    "manual_configuration": {
                        "$ref": "#/components/schemas/MysqlRelManualConfig"
                    }
                },
                "required": [
                    "manual_configuration"
                ],
                "type": "object"
            },
            "MysqlRelManualConfig": {
                "properties": {
                    "column_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "insertion_order": {
                        "enum": [
                            "before_parent",
                            "after_parent"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "remote_table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MySQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "remote_table",
                    "column_mapping"
                ],
                "type": "object"
            },
            "MysqlSelPerm": {
                "properties": {
                    "allow_aggregations": {
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/MysqlBoolExp"
                    },
                    "limit": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "query_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "subscription_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate",
                                "select_stream"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "MysqlSelectPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MysqlSelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "MysqlSourceMetadata": {
                "properties": {
                    "configuration": {
                        "$ref": "#/components/schemas/MySQLConnSourceConfig"
                    },
                    "custom_return_types": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlCustomReturnTypeMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/SourceCustomization"
                    },
                    "functions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlFunctionMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "kind": {
                        "enum": [
                            "mysql"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "native_queries": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlNativeQueryMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "query_tags": {
                        "$ref": "#/components/schemas/QueryTagsConfig"
                    },
                    "tables": {
                        "items": {
                            "$ref": "#/components/schemas/MysqlTableMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "kind",
                    "tables",
                    "configuration"
                ],
                "type": "object"
            },
            "MysqlTableConfig": {
                "properties": {
                    "column_config": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ColumnConfig"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_column_names": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/TableCustomRootFields"
                    }
                },
                "type": "object"
            },
            "MysqlTableMetadata": {
                "description": "Representation of a table in metadata, 'tables.yaml' and 'metadata.json'",
                "properties": {
                    "apollo_federation_config": {
                        "$ref": "#/components/schemas/ApolloFederationConfig"
                    },
                    "array_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__MySQL__ArrRelUsingFKeyOn__MySQL_"
                        },
                        "type": "array"
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlComputedFieldMetadata"
                        },
                        "type": "array"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/MysqlTableConfig"
                    },
                    "delete_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlDeletePermDef"
                        },
                        "type": "array"
                    },
                    "insert_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlInsertPermDef"
                        },
                        "type": "array"
                    },
                    "is_enum": {
                        "default": false,
                        "type": "boolean"
                    },
                    "object_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing__MySQL__ObjRelUsingChoice__MySQL_"
                        },
                        "type": "array"
                    },
                    "remote_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlSelectPermDef"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MySQLTableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "update_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/MysqlUpdatePermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "MysqlUpdPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/MysqlBoolExp"
                    },
                    "columns": {
                        "description": "Allowed columns",
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "filter": {
                        "$ref": "#/components/schemas/MysqlBoolExp"
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "description": "Preset columns",
                        "type": "object"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "MysqlUpdatePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/MysqlUpdPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "NamingCase": {
                "enum": [
                    "hasura-default",
                    "graphql-default"
                ],
                "type": "string"
            },
            "Network": {
                "properties": {
                    "tls_allowlist": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/TlsAllow"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "NullableScalarType": {
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "The base scalar type\nPostgres Scalar Types",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "ObjectFieldDefinition_GraphQLType": {
                "properties": {
                    "arguments": {
                        "additionalProperties": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "ObjectTypeDefinition": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "fields": {
                        "items": {
                            "$ref": "#/components/schemas/ObjectFieldDefinition_GraphQLType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/TypeRelationshipDefinition"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "OpenTelemetryConfig": {
                "properties": {
                    "batch_span_processor": {
                        "$ref": "#/components/schemas/OtelBatchSpanProcessorConfig"
                    },
                    "data_types": {
                        "default": [],
                        "items": {
                            "enum": [
                                "traces"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "exporter_otlp": {
                        "$ref": "#/components/schemas/OtelExporterConfig"
                    },
                    "status": {
                        "default": "disabled",
                        "enum": [
                            "enabled",
                            "disabled"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OtelBatchSpanProcessorConfig": {
                "properties": {
                    "max_export_batch_size": {
                        "default": 512,
                        "description": "The maximum batch size of every export. It must be smaller or equal to maxQueueSize (not yet configurable). Default 512.",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "OtelExporterConfig": {
                "properties": {
                    "headers": {
                        "default": [],
                        "description": "Key-value pairs to be used as headers to send with an export request.",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "otlp_traces_endpoint": {
                        "description": "Target URL to which the exporter is going to send traces. No default.",
                        "type": "string"
                    },
                    "protocol": {
                        "default": "http/protobuf",
                        "description": "The transport protocol\nPossible protocol to use with OTLP. Currently, only http/protobuf is supported.",
                        "enum": [
                            "http/protobuf"
                        ],
                        "type": "string"
                    },
                    "resource_attributes": {
                        "default": [],
                        "description": "Attributes to send as the resource attributes of an export request. We currently only support string-valued attributes.",
                        "items": {
                            "$ref": "#/components/schemas/OtelNameValue"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "OtelNameValue": {
                "description": "Internal helper type for JSON lists of key-value pairs",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value"
                ],
                "type": "object"
            },
            "PGClientCerts": {
                "description": "https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgcertsettings",
                "nullable": true,
                "properties": {
                    "sslcert": {
                        "$ref": "#/components/schemas/CertVar"
                    },
                    "sslkey": {
                        "$ref": "#/components/schemas/CertVar"
                    },
                    "sslmode": {
                        "$ref": "#/components/schemas/SSLMode"
                    },
                    "sslpassword": {
                        "$ref": "#/components/schemas/CertVar"
                    },
                    "sslrootcert": {
                        "$ref": "#/components/schemas/CertVar"
                    }
                },
                "required": [
                    "sslmode"
                ],
                "type": "object"
            },
            "PGConnectionParams": {
                "properties": {
                    "database": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "password": {
                        "nullable": true,
                        "type": "string"
                    },
                    "port": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "host",
                    "username",
                    "port",
                    "database"
                ],
                "type": "object"
            },
            "PostgresArrRelUsingFKeyOnMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "PostgresArrRelUsingFKeyOnSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "PostgresBoolExp": {
                "additionalProperties": true
            },
            "PostgresComputedFieldDefinition": {
                "properties": {
                    "function": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_FunctionName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "session_argument": {
                        "type": "string"
                    },
                    "table_argument": {
                        "type": "string"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "PostgresComputedFieldMetadata": {
                "properties": {
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/PostgresComputedFieldDefinition"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "PostgresConnConfiguration": {
                "description": "https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgconfiguration",
                "properties": {
                    "connection_info": {
                        "$ref": "#/components/schemas/PostgresSourceConnInfo"
                    },
                    "connection_set": {
                        "additionalProperties": true,
                        "description": "connection set used for connection template (supported only for cloud/enterprise edition)\nPostgresConnectionSet",
                        "nullable": true
                    },
                    "connection_template": {
                        "$ref": "#/components/schemas/ConnectionTemplate"
                    },
                    "extensions_schema": {
                        "$ref": "#/components/schemas/ExtensionsSchema"
                    },
                    "read_replicas": {
                        "description": "Optional list of read replica configuration (supported only in cloud/enterprise versions)",
                        "items": {
                            "$ref": "#/components/schemas/PostgresSourceConnInfo"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "connection_info"
                ],
                "type": "object"
            },
            "PostgresCustomReturnTypeMetadata": {
                "description": "A return type.",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Return types for the custom return type",
                        "items": {
                            "$ref": "#/components/schemas/NullableScalarType"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "A name for a custom return type",
                        "type": "string"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresSelectPermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object"
            },
            "PostgresDelPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/PostgresBoolExp"
                    }
                },
                "required": [
                    "filter"
                ],
                "type": "object"
            },
            "PostgresDeletePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/PostgresDelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "PostgresEventTriggerConfEventTriggerConf": {
                "properties": {
                    "cleanup_config": {
                        "$ref": "#/components/schemas/AutoTriggerLogCleanupConfig"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/PostgresTriggerOpsDef"
                    },
                    "headers": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "request_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RequestTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/RequestTransformV2"
                            }
                        ]
                    },
                    "response_transform": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTransformV1"
                            },
                            {
                                "$ref": "#/components/schemas/ResponseTransformV2"
                            }
                        ]
                    },
                    "retry_conf": {
                        "$ref": "#/components/schemas/RetryConf"
                    },
                    "trigger_on_replication": {
                        "default": false,
                        "type": "boolean"
                    },
                    "webhook": {
                        "type": "string"
                    },
                    "webhook_from_env": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition",
                    "retry_conf"
                ],
                "type": "object"
            },
            "PostgresFunctionMetadata": {
                "description": "A custom SQL function to add to the GraphQL schema with configuration.\n\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/FunctionConfig"
                    },
                    "function": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_FunctionName"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "Name of the SQL function"
                    },
                    "permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/FunctionPermissionInfo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "function"
                ],
                "type": "object"
            },
            "PostgresHealthCheckConfig": {
                "nullable": true,
                "properties": {
                    "interval": {
                        "type": "number"
                    },
                    "retries": {
                        "default": 3,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "retry_interval": {
                        "default": 10,
                        "type": "number"
                    },
                    "test": {
                        "$ref": "#/components/schemas/HealthCheckTestSql"
                    },
                    "timeout": {
                        "default": 10,
                        "type": "number"
                    }
                },
                "required": [
                    "interval"
                ],
                "type": "object"
            },
            "PostgresInsPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/PostgresBoolExp"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "check"
                ],
                "type": "object"
            },
            "PostgresInsertPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/PostgresInsPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "PostgresNativeQueryMetadata": {
                "description": "A native query as represented in metadata.",
                "properties": {
                    "arguments": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/PostgresNullableScalarType"
                        },
                        "default": {},
                        "description": "Free variables in the expression and their types",
                        "type": "object"
                    },
                    "code": {
                        "description": "Native code expression (SQL) to run\nAn interpolated query expressed in native code (SQL)",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the native query which appears in the graphql schema",
                        "type": "string"
                    },
                    "returns": {
                        "description": "Return type (table) of the expression",
                        "type": "string"
                    },
                    "root_field_name": {
                        "description": "Root field name for the native query",
                        "type": "string"
                    }
                },
                "required": [
                    "root_field_name",
                    "code",
                    "returns"
                ],
                "type": "object"
            },
            "PostgresNullableScalarType": {
                "description": "A scalar type that can be nullable with an optional description",
                "properties": {
                    "description": {
                        "description": "Optional description text which appears in the GraphQL Schema",
                        "type": "string"
                    },
                    "nullable": {
                        "default": false,
                        "description": "Whether the type is nullable",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "The base scalar type\nPostgres Scalar Types",
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "PostgresObjRelRemoteTableMultipleColumns": {
                "properties": {
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "columns"
                ],
                "type": "object"
            },
            "PostgresObjRelRemoteTableSingleColumn": {
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "table",
                    "column"
                ],
                "type": "object"
            },
            "PostgresPoolSettings": {
                "description": "https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgpoolsettings",
                "nullable": true,
                "properties": {
                    "connection_lifetime": {
                        "description": "Time from connection creation after which the connection should be destroyed and a new one created. A value of 0 indicates we should never destroy an active connection. If 0 is passed, memory from large query results may not be reclaimed. (default: 600 sec)",
                        "nullable": true,
                        "type": "number"
                    },
                    "idle_timeout": {
                        "description": "The idle timeout (in seconds) per connection (default: 180)",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "number"
                    },
                    "max_connections": {
                        "description": "Maximum number of connections to be kept in the pool (default: 50)",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "number"
                    },
                    "pool_timeout": {
                        "description": "Maximum time to wait while acquiring a Postgres connection from the pool, in seconds (default: forever)",
                        "nullable": true,
                        "type": "number"
                    },
                    "retries": {
                        "description": "Number of retries to perform (default: 1)",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "number"
                    },
                    "total_max_connections": {
                        "description": "Total maximum number of connections across all instances (cloud only, default: null)",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "nullable": true,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "PostgresQualified_FunctionName": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "schema": {
                        "default": "public",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "PostgresQualified_TableName": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "schema": {
                        "default": "public",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "PostgresRUManual": {
                "properties": {
                    "manual_configuration": {
                        "$ref": "#/components/schemas/PostgresRelManualConfig"
                    }
                },
                "required": [
                    "manual_configuration"
                ],
                "type": "object"
            },
            "PostgresRelManualConfig": {
                "properties": {
                    "column_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "insertion_order": {
                        "enum": [
                            "before_parent",
                            "after_parent"
                        ],
                        "nullable": true,
                        "type": "string"
                    },
                    "remote_table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "remote_table",
                    "column_mapping"
                ],
                "type": "object"
            },
            "PostgresSelPerm": {
                "properties": {
                    "allow_aggregations": {
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/PostgresBoolExp"
                    },
                    "limit": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "query_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "subscription_root_fields": {
                        "default": null,
                        "items": {
                            "enum": [
                                "select",
                                "select_by_pk",
                                "select_aggregate",
                                "select_stream"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "PostgresSelectPermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/PostgresSelPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "PostgresSourceConnInfo": {
                "description": "https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgsourceconnectioninfo",
                "properties": {
                    "database_url": {
                        "description": "The database connection URL as a string, as an environment variable, or as connection parameters.",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/FromEnv"
                            },
                            {
                                "$ref": "#/components/schemas/UrlConfFromParams"
                            }
                        ]
                    },
                    "isolation_level": {
                        "$ref": "#/components/schemas/TxIsolation"
                    },
                    "pool_settings": {
                        "$ref": "#/components/schemas/PostgresPoolSettings"
                    },
                    "ssl_configuration": {
                        "$ref": "#/components/schemas/PGClientCerts"
                    },
                    "use_prepared_statements": {
                        "default": false,
                        "description": "If set to true the server prepares statement before executing on the source database (default: false). For more details, refer to the Postgres docs",
                        "type": "boolean"
                    }
                },
                "required": [
                    "database_url"
                ],
                "type": "object"
            },
            "PostgresSourceMetadata": {
                "properties": {
                    "configuration": {
                        "$ref": "#/components/schemas/PostgresConnConfiguration"
                    },
                    "custom_return_types": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresCustomReturnTypeMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "customization": {
                        "$ref": "#/components/schemas/SourceCustomization"
                    },
                    "functions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresFunctionMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "health_check": {
                        "$ref": "#/components/schemas/PostgresHealthCheckConfig"
                    },
                    "kind": {
                        "additionalProperties": true,
                        "enum": [
                            "postgres",
                            "pg"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "native_queries": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresNativeQueryMetadata"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "query_tags": {
                        "$ref": "#/components/schemas/QueryTagsConfig"
                    },
                    "tables": {
                        "items": {
                            "$ref": "#/components/schemas/PostgresTableMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "kind",
                    "tables",
                    "configuration"
                ],
                "type": "object"
            },
            "PostgresSubscribeOpSpec": {
                "properties": {
                    "columns": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "payload": {
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "columns"
                ],
                "type": "object"
            },
            "PostgresTableConfig": {
                "properties": {
                    "column_config": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ColumnConfig"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "comment": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "custom_column_names": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "default": {},
                        "type": "object"
                    },
                    "custom_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "custom_root_fields": {
                        "$ref": "#/components/schemas/TableCustomRootFields"
                    }
                },
                "type": "object"
            },
            "PostgresTableMetadata": {
                "description": "Representation of a table in metadata, 'tables.yaml' and 'metadata.json'",
                "properties": {
                    "apollo_federation_config": {
                        "$ref": "#/components/schemas/ApolloFederationConfig"
                    },
                    "array_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing___Postgres__Vanilla___ArrRelUsingFKeyOn___Postgres__Vanilla__"
                        },
                        "type": "array"
                    },
                    "computed_fields": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresComputedFieldMetadata"
                        },
                        "type": "array"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/PostgresTableConfig"
                    },
                    "delete_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresDeletePermDef"
                        },
                        "type": "array"
                    },
                    "event_triggers": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresEventTriggerConfEventTriggerConf"
                        },
                        "type": "array"
                    },
                    "insert_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresInsertPermDef"
                        },
                        "type": "array"
                    },
                    "is_enum": {
                        "default": false,
                        "type": "boolean"
                    },
                    "object_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RelDef_RelUsing___Postgres__Vanilla___ObjRelUsingChoice___Postgres__Vanilla__"
                        },
                        "type": "array"
                    },
                    "remote_relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "select_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresSelectPermDef"
                        },
                        "type": "array"
                    },
                    "table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "update_permissions": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/PostgresUpdatePermDef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "PostgresTriggerOpsDef": {
                "properties": {
                    "delete": {
                        "$ref": "#/components/schemas/PostgresSubscribeOpSpec"
                    },
                    "enable_manual": {
                        "type": "boolean"
                    },
                    "insert": {
                        "$ref": "#/components/schemas/PostgresSubscribeOpSpec"
                    },
                    "update": {
                        "$ref": "#/components/schemas/PostgresSubscribeOpSpec"
                    }
                },
                "type": "object"
            },
            "PostgresUpdPerm": {
                "properties": {
                    "backend_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "check": {
                        "$ref": "#/components/schemas/PostgresBoolExp"
                    },
                    "columns": {
                        "description": "Allowed columns",
                        "oneOf": [
                            {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    },
                    "filter": {
                        "$ref": "#/components/schemas/PostgresBoolExp"
                    },
                    "set": {
                        "additionalProperties": {
                            "additionalProperties": true
                        },
                        "description": "Preset columns",
                        "type": "object"
                    }
                },
                "required": [
                    "columns",
                    "filter"
                ],
                "type": "object"
            },
            "PostgresUpdatePermDef": {
                "properties": {
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "permission": {
                        "$ref": "#/components/schemas/PostgresUpdPerm"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "permission"
                ],
                "type": "object"
            },
            "QueryReference": {
                "properties": {
                    "collection_name": {
                        "type": "string"
                    },
                    "query_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "collection_name",
                    "query_name"
                ],
                "type": "object"
            },
            "QueryTagsConfig": {
                "nullable": true,
                "properties": {
                    "disabled": {
                        "default": false,
                        "type": "boolean"
                    },
                    "format": {
                        "$ref": "#/components/schemas/QueryTagsFormat"
                    },
                    "omit_request_id": {
                        "default": true,
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "QueryTagsFormat": {
                "enum": [
                    "standard",
                    "sqlcommenter"
                ],
                "type": "string"
            },
            "RUFKeyOn_ArrRelUsingFKeyOn__BigQuery": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BigqueryArrRelUsingFKeyOnSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/BigqueryArrRelUsingFKeyOnMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ArrRelUsingFKeyOn__DataConnector": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DataconnectorArrRelUsingFKeyOnSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/DataconnectorArrRelUsingFKeyOnMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ArrRelUsingFKeyOn__MSSQL": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MssqlArrRelUsingFKeyOnSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/MssqlArrRelUsingFKeyOnMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ArrRelUsingFKeyOn__MySQL": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MysqlArrRelUsingFKeyOnSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/MysqlArrRelUsingFKeyOnMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Citus_": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CitusArrRelUsingFKeyOnSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/CitusArrRelUsingFKeyOnMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Cockroach_": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CockroachArrRelUsingFKeyOnSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/CockroachArrRelUsingFKeyOnMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Vanilla_": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PostgresArrRelUsingFKeyOnSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/PostgresArrRelUsingFKeyOnMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ObjRelUsingChoice__BigQuery": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/BigqueryObjRelRemoteTableSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/BigqueryObjRelRemoteTableMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ObjRelUsingChoice__DataConnector": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/DataconnectorObjRelRemoteTableSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/DataconnectorObjRelRemoteTableMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ObjRelUsingChoice__MSSQL": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/MssqlObjRelRemoteTableSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/MssqlObjRelRemoteTableMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ObjRelUsingChoice__MySQL": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/MysqlObjRelRemoteTableSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/MysqlObjRelRemoteTableMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ObjRelUsingChoice___Postgres__Citus_": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/CitusObjRelRemoteTableSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/CitusObjRelRemoteTableMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ObjRelUsingChoice___Postgres__Cockroach_": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/CockroachObjRelRemoteTableSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/CockroachObjRelRemoteTableMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RUFKeyOn_ObjRelUsingChoice___Postgres__Vanilla_": {
                "properties": {
                    "foreign_key_constraint_on": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "$ref": "#/components/schemas/PostgresObjRelRemoteTableSingleColumn"
                            },
                            {
                                "$ref": "#/components/schemas/PostgresObjRelRemoteTableMultipleColumns"
                            }
                        ]
                    }
                },
                "required": [
                    "foreign_key_constraint_on"
                ],
                "type": "object"
            },
            "RateLimitConfig": {
                "properties": {
                    "max_reqs_per_min": {
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "type": "number"
                    },
                    "unique_params": {
                        "description": "This would be either fixed value \"IP\" or a list of Session variables",
                        "oneOf": [
                            {
                                "enum": [
                                    "IP",
                                    "ip"
                                ],
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ]
                    }
                },
                "required": [
                    "max_reqs_per_min"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__BigQuery__ArrRelUsingFKeyOn__BigQuery_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn__BigQuery"
                            },
                            {
                                "$ref": "#/components/schemas/BigqueryRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__BigQuery__ObjRelUsingChoice__BigQuery_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ObjRelUsingChoice__BigQuery"
                            },
                            {
                                "$ref": "#/components/schemas/BigqueryRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__DataConnector__ArrRelUsingFKeyOn__DataConnector_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn__DataConnector"
                            },
                            {
                                "$ref": "#/components/schemas/DataconnectorRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__DataConnector__ObjRelUsingChoice__DataConnector_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ObjRelUsingChoice__DataConnector"
                            },
                            {
                                "$ref": "#/components/schemas/DataconnectorRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__MSSQL__ArrRelUsingFKeyOn__MSSQL_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn__MSSQL"
                            },
                            {
                                "$ref": "#/components/schemas/MssqlRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__MSSQL__ObjRelUsingChoice__MSSQL_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ObjRelUsingChoice__MSSQL"
                            },
                            {
                                "$ref": "#/components/schemas/MssqlRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__MySQL__ArrRelUsingFKeyOn__MySQL_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn__MySQL"
                            },
                            {
                                "$ref": "#/components/schemas/MysqlRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing__MySQL__ObjRelUsingChoice__MySQL_": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ObjRelUsingChoice__MySQL"
                            },
                            {
                                "$ref": "#/components/schemas/MysqlRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing___Postgres__Citus___ArrRelUsingFKeyOn___Postgres__Citus__": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Citus_"
                            },
                            {
                                "$ref": "#/components/schemas/CitusRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing___Postgres__Citus___ObjRelUsingChoice___Postgres__Citus__": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ObjRelUsingChoice___Postgres__Citus_"
                            },
                            {
                                "$ref": "#/components/schemas/CitusRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing___Postgres__Cockroach___ArrRelUsingFKeyOn___Postgres__Cockroach__": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Cockroach_"
                            },
                            {
                                "$ref": "#/components/schemas/CockroachRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing___Postgres__Cockroach___ObjRelUsingChoice___Postgres__Cockroach__": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ObjRelUsingChoice___Postgres__Cockroach_"
                            },
                            {
                                "$ref": "#/components/schemas/CockroachRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing___Postgres__Vanilla___ArrRelUsingFKeyOn___Postgres__Vanilla__": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Vanilla_"
                            },
                            {
                                "$ref": "#/components/schemas/PostgresRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelDef_RelUsing___Postgres__Vanilla___ObjRelUsingChoice___Postgres__Vanilla__": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "using": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RUFKeyOn_ObjRelUsingChoice___Postgres__Vanilla_"
                            },
                            {
                                "$ref": "#/components/schemas/PostgresRUManual"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "using"
                ],
                "type": "object"
            },
            "RelationshipToSchema": {
                "properties": {
                    "to_remote_schema": {
                        "$ref": "#/components/schemas/ToSchemaRelationshipDef"
                    }
                },
                "required": [
                    "to_remote_schema"
                ],
                "type": "object"
            },
            "RelationshipToSource": {
                "properties": {
                    "to_source": {
                        "$ref": "#/components/schemas/ToSourceRelationshipDef"
                    }
                },
                "required": [
                    "to_source"
                ],
                "type": "object"
            },
            "RemoteArguments": {
                "additionalProperties": {
                    "$ref": "#/components/schemas/GraphQLValue_Name"
                },
                "description": "Remote arguments are represented by an object that maps each argument name to its value.",
                "type": "object"
            },
            "RemoteFieldCustomization": {
                "properties": {
                    "mapping": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "type": "object"
                    },
                    "parent_type": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "prefix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "suffix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "required": [
                    "parent_type",
                    "mapping"
                ],
                "type": "object"
            },
            "RemoteFields": {
                "additionalProperties": {
                    "$ref": "#/components/schemas/FieldCall"
                },
                "description": "Remote fields are represented by an object that maps each field name to its arguments.",
                "type": "object"
            },
            "RemoteRelationship_RemoteRelationshipDefinition": {
                "properties": {
                    "definition": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RelationshipToSource"
                            },
                            {
                                "$ref": "#/components/schemas/RelationshipToSchema"
                            },
                            {
                                "$ref": "#/components/schemas/ToSchemaRelationshipDefLegacyFormat"
                            }
                        ]
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "definition"
                ],
                "type": "object"
            },
            "RemoteSchemaCustomization": {
                "properties": {
                    "field_names": {
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldCustomization"
                        },
                        "type": "array"
                    },
                    "root_fields_namespace": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "type_names": {
                        "$ref": "#/components/schemas/RemoteTypeCustomization"
                    }
                },
                "type": "object"
            },
            "RemoteSchemaDef": {
                "properties": {
                    "customization": {
                        "$ref": "#/components/schemas/RemoteSchemaCustomization"
                    },
                    "forward_client_headers": {
                        "default": false,
                        "type": "boolean"
                    },
                    "headers": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/HeaderConfValue"
                                },
                                {
                                    "$ref": "#/components/schemas/HeaderConfFromEnv"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "timeout_seconds": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "url": {
                        "type": "string"
                    },
                    "url_from_env": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RemoteSchemaMetadata_RemoteRelationshipDefinition": {
                "properties": {
                    "relationships": {
                        "default": [],
                        "items": {
                            "$ref": "#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition"
                        },
                        "type": "array"
                    },
                    "type_name": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "required": [
                    "type_name"
                ],
                "type": "object"
            },
            "RemoteSchemaPermissionDefinition": {
                "properties": {
                    "schema": {
                        "$ref": "#/components/schemas/GraphQLSchema"
                    }
                },
                "required": [
                    "schema"
                ],
                "type": "object"
            },
            "RemoteSchemaPermissionMetadata": {
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/RemoteSchemaPermissionDefinition"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "definition"
                ],
                "type": "object"
            },
            "RemoteTypeCustomization": {
                "properties": {
                    "mapping": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GraphQLName"
                        },
                        "type": "object"
                    },
                    "prefix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "suffix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "required": [
                    "mapping"
                ],
                "type": "object"
            },
            "RequestTransformV1": {
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string"
                    },
                    "query_params": {
                        "oneOf": [
                            {
                                "additionalProperties": {
                                    "nullable": true,
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "request_headers": {
                        "$ref": "#/components/schemas/AddReplaceOrRemoveFields"
                    },
                    "template_engine": {
                        "default": "Kriti",
                        "enum": [
                            "Kriti"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "version": {
                        "enum": [
                            1
                        ],
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "RequestTransformV2": {
                "properties": {
                    "body": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BodyTransformFn_Remove"
                            },
                            {
                                "$ref": "#/components/schemas/BodyTransformFn_ModifyAsJSON"
                            },
                            {
                                "$ref": "#/components/schemas/BodyTransformFn_ModifyAsFormURLEncoded"
                            }
                        ]
                    },
                    "method": {
                        "type": "string"
                    },
                    "query_params": {
                        "oneOf": [
                            {
                                "additionalProperties": {
                                    "nullable": true,
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "request_headers": {
                        "$ref": "#/components/schemas/AddReplaceOrRemoveFields"
                    },
                    "template_engine": {
                        "default": "Kriti",
                        "enum": [
                            "Kriti"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "version": {
                        "enum": [
                            2
                        ],
                        "type": "number"
                    }
                },
                "required": [
                    "version"
                ],
                "type": "object"
            },
            "ResponseTransformV1": {
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "template_engine": {
                        "default": "Kriti",
                        "enum": [
                            "Kriti"
                        ],
                        "type": "string"
                    },
                    "version": {
                        "enum": [
                            1
                        ],
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "ResponseTransformV2": {
                "properties": {
                    "body": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BodyTransformFn_Remove"
                            },
                            {
                                "$ref": "#/components/schemas/BodyTransformFn_ModifyAsJSON"
                            },
                            {
                                "$ref": "#/components/schemas/BodyTransformFn_ModifyAsFormURLEncoded"
                            }
                        ]
                    },
                    "template_engine": {
                        "default": "Kriti",
                        "enum": [
                            "Kriti"
                        ],
                        "type": "string"
                    },
                    "version": {
                        "enum": [
                            2
                        ],
                        "type": "number"
                    }
                },
                "required": [
                    "version"
                ],
                "type": "object"
            },
            "RetryConf": {
                "properties": {
                    "interval_sec": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "num_retries": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "timeout_sec": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    }
                },
                "required": [
                    "num_retries",
                    "interval_sec"
                ],
                "type": "object"
            },
            "Role": {
                "properties": {
                    "role_name": {
                        "type": "string"
                    },
                    "role_set": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "role_name",
                    "role_set"
                ],
                "type": "object"
            },
            "RootFieldsCustomization": {
                "properties": {
                    "namespace": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "prefix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "suffix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "type": "object"
            },
            "SSLMode": {
                "enum": [
                    "disable",
                    "allow",
                    "prefer",
                    "require",
                    "verify-ca",
                    "verify-full"
                ],
                "type": "string"
            },
            "STRetryConf": {
                "properties": {
                    "num_retries": {
                        "default": 0,
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "number"
                    },
                    "retry_interval_seconds": {
                        "default": 10,
                        "type": "number"
                    },
                    "timeout_seconds": {
                        "default": 60,
                        "type": "number"
                    },
                    "tolerance_seconds": {
                        "default": 21600,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "ScalarType": {
                "additionalProperties": true,
                "description": "value with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description"
            },
            "ScalarTypeDefinition": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "SourceCustomization": {
                "properties": {
                    "naming_convention": {
                        "$ref": "#/components/schemas/NamingCase"
                    },
                    "root_fields": {
                        "$ref": "#/components/schemas/RootFieldsCustomization"
                    },
                    "type_names": {
                        "$ref": "#/components/schemas/SourceTypeCustomization"
                    }
                },
                "type": "object"
            },
            "SourceMetadata": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PostgresSourceMetadata"
                    },
                    {
                        "$ref": "#/components/schemas/CitusSourceMetadata"
                    },
                    {
                        "$ref": "#/components/schemas/CockroachSourceMetadata"
                    },
                    {
                        "$ref": "#/components/schemas/MssqlSourceMetadata"
                    },
                    {
                        "$ref": "#/components/schemas/BigquerySourceMetadata"
                    },
                    {
                        "$ref": "#/components/schemas/MysqlSourceMetadata"
                    },
                    {
                        "$ref": "#/components/schemas/DataconnectorSourceMetadata"
                    }
                ]
            },
            "SourceTypeCustomization": {
                "properties": {
                    "prefix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    },
                    "suffix": {
                        "$ref": "#/components/schemas/GraphQLName"
                    }
                },
                "type": "object"
            },
            "TableCustomRootFields": {
                "properties": {
                    "delete": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "delete_by_pk": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "insert": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "insert_one": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "select": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "select_aggregate": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "select_by_pk": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "select_stream": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "update": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "update_by_pk": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    },
                    "update_many": {
                        "default": null,
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/CustomRootField"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "TlsAllow": {
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "self-signed"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "suffix": {
                        "type": "string"
                    }
                },
                "required": [
                    "host"
                ],
                "type": "object"
            },
            "ToSchemaRelationshipDef": {
                "properties": {
                    "lhs_fields": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "remote_field": {
                        "$ref": "#/components/schemas/RemoteFields"
                    },
                    "remote_schema": {
                        "type": "string"
                    }
                },
                "required": [
                    "remote_schema",
                    "lhs_fields",
                    "remote_field"
                ],
                "type": "object"
            },
            "ToSchemaRelationshipDefLegacyFormat": {
                "properties": {
                    "hasura_fields": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "remote_field": {
                        "$ref": "#/components/schemas/RemoteFields"
                    },
                    "remote_schema": {
                        "type": "string"
                    }
                },
                "required": [
                    "remote_schema",
                    "hasura_fields",
                    "remote_field"
                ],
                "type": "object"
            },
            "ToSourceRelationshipDef": {
                "properties": {
                    "field_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "relationship_type": {
                        "enum": [
                            "object",
                            "array"
                        ],
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "table": {
                        "additionalProperties": true
                    }
                },
                "required": [
                    "relationship_type",
                    "field_mapping",
                    "source",
                    "table"
                ],
                "type": "object"
            },
            "TxIsolation": {
                "enum": [
                    "read-committed",
                    "repeatable-read",
                    "serializable"
                ],
                "type": "string"
            },
            "TypeRelationshipDefinition": {
                "properties": {
                    "field_mapping": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "remote_table": {
                        "additionalProperties": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostgresQualified_TableName"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "source": {
                        "default": "default",
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "object",
                            "array"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type",
                    "remote_table",
                    "field_mapping"
                ],
                "type": "object"
            },
            "UrlConfFromParams": {
                "properties": {
                    "connection_parameters": {
                        "$ref": "#/components/schemas/PGConnectionParams"
                    }
                },
                "required": [
                    "connection_parameters"
                ],
                "type": "object"
            }
        }
    },
    "info": {
        "title": "",
        "version": ""
    },
    "openapi": "3.0.0",
    "paths": {}
}
