{
  "version": "v3",
  "subgraphs": [
    {
      "name": "default",
      "objects": [
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Album",
            "fields": [
              {
                "name": "albumId",
                "type": "Int4!",
                "description": null,
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "artistId",
                "type": "Int4!",
                "description": null,
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "title",
                "type": "Varchar!",
                "description": null,
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "Album",
              "inputTypeName": "AlbumInput",
              "apolloFederation": null
            },
            "description": null,
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "pg",
                "dataConnectorObjectType": "album",
                "fieldMapping": {
                  "albumId": {
                    "column": {
                      "name": "album_id",
                      "argumentMapping": null
                    }
                  },
                  "artistId": {
                    "column": {
                      "name": "artist_id",
                      "argumentMapping": null
                    }
                  },
                  "title": {
                    "column": {
                      "name": "title",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Album",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["albumId", "artistId", "title"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "AlbumBoolExp",
            "operand": {
              "object": {
                "type": "Album",
                "comparableFields": [
                  {
                    "fieldName": "albumId",
                    "booleanExpressionType": "Int4BoolExp"
                  },
                  {
                    "fieldName": "artistId",
                    "booleanExpressionType": "Int4BoolExp"
                  },
                  {
                    "fieldName": "title",
                    "booleanExpressionType": "VarcharBoolExp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "AlbumBoolExp"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "InsertAlbumObject",
            "fields": [
              {
                "name": "albumId",
                "type": "Int4!"
              },
              {
                "name": "artistId",
                "type": "Int4!"
              },
              {
                "name": "title",
                "type": "Varchar!"
              },
              {
                "name": "recordLabel",
                "type": "RecordLabel"
              },
              {
                "name": "discs",
                "type": "[Disc!]"
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "InsertAlbumObject",
              "inputTypeName": "InsertAlbumObjectInput",
              "apolloFederation": null
            },
            "description": null,
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "pg",
                "dataConnectorObjectType": "insert_album_object",
                "fieldMapping": {
                  "albumId": {
                    "column": {
                      "name": "album_id",
                      "argumentMapping": null
                    }
                  },
                  "artistId": {
                    "column": {
                      "name": "artist_id",
                      "argumentMapping": null
                    }
                  },
                  "title": {
                    "column": {
                      "name": "title",
                      "argumentMapping": null
                    }
                  },
                  "recordLabel": {
                    "column": {
                      "name": "record_label",
                      "argumentMapping": null
                    }
                  },
                  "discs": {
                    "column": {
                      "name": "discs",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "InsertAlbumObject",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["albumId", "artistId", "title", "discs"]
                },
                "input": {
                  "fieldPresets": [
                    {
                      "field": "artistId",
                      "value": {
                        "sessionVariable": "x-hasura-artist-id"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "RecordLabel",
            "fields": [
              {
                "name": "name",
                "type": "Varchar!",
                "arguments": []
              },
              {
                "name": "exclusiveRights",
                "type": "Boolean!"
              }
            ],
            "graphql": {
              "typeName": "RecordLabel",
              "inputTypeName": "RecordLabelInput",
              "apolloFederation": null
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "pg",
                "dataConnectorObjectType": "record_label",
                "fieldMapping": {
                  "name": {
                    "column": {
                      "name": "name"
                    }
                  },
                  "exclusiveRights": {
                    "column": {
                      "name": "exclusive_rights"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "RecordLabel",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["name", "exclusiveRights"]
                },
                "input": {
                  "fieldPresets": [
                    {
                      "field": "exclusiveRights",
                      "value": {
                        "literal": true
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Disc",
            "fields": [
              {
                "name": "name",
                "type": "Varchar!"
              },
              {
                "name": "lengthMins",
                "type": "Int4!"
              }
            ],
            "graphql": {
              "typeName": "Disc",
              "inputTypeName": "DiscInput",
              "apolloFederation": null
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "pg",
                "dataConnectorObjectType": "disc",
                "fieldMapping": {
                  "name": {
                    "column": {
                      "name": "name"
                    }
                  },
                  "lengthMins": {
                    "column": {
                      "name": "length_mins"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Disc",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["name", "lengthMins"]
                },
                "input": {
                  "fieldPresets": [
                    {
                      "field": "lengthMins",
                      "value": {
                        "literal": 70
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "InsertAlbumResponse",
            "fields": [
              {
                "name": "affectedRows",
                "type": "Int4!",
                "description": "The number of rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "returning",
                "type": "[Album!]!",
                "description": "Data from rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "InsertAlbumResponse",
              "inputTypeName": "InsertAlbumResponseInput",
              "apolloFederation": null
            },
            "description": "Responses from the 'insert_album' procedure",
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "pg",
                "dataConnectorObjectType": "insert_album_response",
                "fieldMapping": {
                  "affectedRows": {
                    "column": {
                      "name": "affected_rows",
                      "argumentMapping": null
                    }
                  },
                  "returning": {
                    "column": {
                      "name": "returning",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "InsertAlbumResponse",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["affectedRows", "returning"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "Command",
          "version": "v1",
          "definition": {
            "name": "InsertAlbum",
            "outputType": "InsertAlbumResponse!",
            "arguments": [
              {
                "name": "objects",
                "type": "[InsertAlbumObject!]!",
                "description": null
              },
              {
                "name": "postCheck",
                "type": "AlbumBoolExp",
                "description": "Insert permission predicate over the 'album' collection"
              }
            ],
            "source": {
              "dataConnectorName": "pg",
              "dataConnectorCommand": {
                "procedure": "insert_album"
              },
              "argumentMapping": {
                "objects": "objects",
                "postCheck": "post_check"
              }
            },
            "graphql": {
              "rootFieldName": "insertAlbum",
              "rootFieldKind": "Mutation",
              "deprecated": null
            },
            "description": "Insert into the album table"
          }
        },
        {
          "kind": "CommandPermissions",
          "version": "v1",
          "definition": {
            "commandName": "InsertAlbum",
            "permissions": [
              {
                "role": "admin",
                "allowExecution": true,
                "argumentPresets": [
                  {
                    "argument": "postCheck",
                    "value": {
                      "booleanExpression": {
                        "fieldComparison": {
                          "field": "artistId",
                          "operator": "_eq",
                          "value": {
                            "sessionVariable": "x-hasura-artist-id"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "Int4",
            "graphql": {
              "typeName": "Int4"
            },
            "description": null
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "pg",
            "dataConnectorScalarType": "int4",
            "representation": "Int4"
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Int4BoolExp",
            "operand": {
              "scalar": {
                "type": "Int4",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "Int4!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "Int4!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "Int4!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[Int4!]!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "Int4!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "Int4!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "Int4!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "pg",
                    "dataConnectorScalarType": "int4",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "Int4BoolExp"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "Varchar",
            "graphql": {
              "typeName": "Varchar"
            },
            "description": null
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "pg",
            "dataConnectorScalarType": "varchar",
            "representation": "Varchar"
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "VarcharBoolExp",
            "operand": {
              "scalar": {
                "type": "Varchar",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_ilike",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[Varchar!]!"
                  },
                  {
                    "name": "_iregex",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_like",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_nilike",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_niregex",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_nlike",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_nregex",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "_regex",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "starts_with",
                    "argumentType": "Varchar!"
                  },
                  {
                    "name": "ts_match_tt",
                    "argumentType": "Varchar!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "pg",
                    "dataConnectorScalarType": "varchar",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "VarcharBoolExp"
            }
          }
        },
        {
          "kind": "DataConnectorLink",
          "version": "v1",
          "definition": {
            "name": "pg",
            "url": {
              "readWriteUrls": {
                "read": {
                  "value": "http://local.hasura.dev:8080"
                },
                "write": {
                  "value": "http://local.hasura.dev:8080"
                }
              }
            },
            "headers": {
              "Authorization": {
                "value": "Bearer RPDvzYG6hYoZGJxtIRdD8g=="
              }
            },
            "schema": {
              "version": "v0.1",
              "schema": {
                "scalar_types": {
                  "bool": {
                    "representation": {
                      "type": "boolean"
                    },
                    "aggregate_functions": {
                      "bool_and": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      },
                      "bool_or": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      },
                      "every": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      }
                    }
                  },
                  "int4": {
                    "representation": {
                      "type": "int32"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "bit_and": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "bit_or": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "bit_xor": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "stddev": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "var_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "var_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "variance": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "varchar": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_ilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_iregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_like": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_niregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nlike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_regex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "starts_with": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "ts_match_tt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  }
                },
                "object_types": {
                  "album": {
                    "fields": {
                      "album_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "artist_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "title": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "insert_album_object": {
                    "fields": {
                      "album_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "artist_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "title": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "record_label": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "record_label"
                          }
                        }
                      },
                      "discs": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "named",
                              "name": "disc"
                            }
                          }
                        }
                      }
                    }
                  },
                  "insert_album_response": {
                    "description": "Responses from the 'insert_album' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "album"
                          }
                        }
                      }
                    }
                  },
                  "record_label": {
                    "fields": {
                      "name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "exclusive_rights": {
                        "type": {
                          "type": "named",
                          "name": "bool"
                        }
                      }
                    }
                  },
                  "disc": {
                    "fields": {
                      "name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "length_mins": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  }
                },
                "collections": [],
                "functions": [],
                "procedures": [
                  {
                    "name": "insert_album",
                    "description": "Insert into the album table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "insert_album_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'album' collection",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "predicate",
                            "object_type_name": "album"
                          }
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "insert_album_response"
                    }
                  }
                ]
              },
              "capabilities": {
                "version": "0.1.6",
                "capabilities": {
                  "query": {
                    "aggregates": {},
                    "variables": {},
                    "explain": {},
                    "nested_fields": {
                      "filter_by": {},
                      "order_by": {}
                    },
                    "exists": {
                      "nested_collections": {}
                    }
                  },
                  "mutation": {
                    "transactional": {},
                    "explain": {}
                  },
                  "relationships": {
                    "relation_comparisons": {},
                    "order_by_aggregate": {}
                  }
                }
              }
            },
            "argumentPresets": [],
            "responseHeaders": null
          }
        }
      ]
    }
  ],
  "flags": {
    "require_graphql_config": false,
    "require_valid_ndc_v01_version": true,
    "bypass_relation_comparisons_ndc_capability": true,
    "require_nested_array_filtering_capability": true,
    "disallow_scalar_type_names_conflicting_with_inbuilt_types": true,
    "propagate_boolean_expression_deprecation_status": true,
    "require_unique_command_graphql_names": true,
    "allow_partial_supergraph": false,
    "json_session_variables": true,
    "disallow_array_field_compared_with_scalar_boolean_type": true,
    "allow_boolean_expression_fields_without_graphql": true,
    "require_unique_model_graphql_names": true,
    "disallow_object_boolean_expression_type": true,
    "logical_operators_in_scalar_boolean_expressions": true,
    "disallow_duplicate_names_in_boolean_expressions": true,
    "disallow_multiple_input_object_fields_in_graphql_order_by": true,
    "require_nested_support_for_order_by_expressions": true,
    "disallow_model_v1_ordering_non_scalar_fields": true,
    "disallow_array_relationship_in_order_by": true
  }
}
