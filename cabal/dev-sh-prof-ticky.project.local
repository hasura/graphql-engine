-- Enable ticky profiling, powers `dev.sh graphql-engine --prof-ticky`
-- https://ghc.gitlab.haskell.org/ghc/doc/users_guide/profiling.html#using-ticky-ticky-profiling-for-implementors
--
--  run with e.g. `+RTS -r outfilepath`

-- Formerly we had:
-- import: cabal/dev-sh-optimized.project.local
-- ...but cabal 3.10 broke it. See: TODO
-- ...so now we need to copy-paste that configuration here to avoid import chains
-- -------------------------- START dev-sh-optimized.project.local ------------------------------------
import: dev-sh.project.local

---- (reminder: top-level means apply these to all local packages)
flags: +optimize-hasura
-- be faster:
documentation: false

-- coverage inhibits performance. NOTE: we can't just put this at the top level
-- to override, since it seems package-specific configuration takes precedence...
package graphql-engine
  coverage: false
package graphql-engine-pro
  coverage: false
-- -------------------------- END dev-sh-optimized.project.local   ------------------------------------

-- Apply to all local packages (consider an additional mode that recompiles libraries too)
program-options
    ghc-options: -ticky
    ghc-options: -ddump-stg-final -ddump-to-file
