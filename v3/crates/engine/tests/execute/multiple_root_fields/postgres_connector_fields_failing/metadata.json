{
  "version": "V2",
  "subgraphs": [
    {
      "name": "default",
      "objects": [
        {
          "kind": "DataConnectorLink",
          "version": "v1",
          "definition": {
            "name": "custom",
            "url": {
              "singleUrl": {
                "value": "http://localhost:8102"
              }
            },
            "headers": {},
            "schema": {
              "version": "v0.2",
              "schema": {
                "scalar_types": {
                  "Actor_Name": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {},
                    "comparison_operators": {}
                  },
                  "Bool": {
                    "representation": {
                      "type": "boolean"
                    },
                    "aggregate_functions": {},
                    "comparison_operators": {
                      "eq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "Bool"
                        }
                      }
                    }
                  },
                  "HeaderMap": {
                    "representation": {
                      "type": "json"
                    },
                    "aggregate_functions": {},
                    "comparison_operators": {}
                  },
                  "Int": {
                    "representation": {
                      "type": "int32"
                    },
                    "aggregate_functions": {
                      "max": {
                        "type": "max"
                      },
                      "min": {
                        "type": "min"
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      }
                    }
                  },
                  "String": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "type": "max"
                      },
                      "min": {
                        "type": "min"
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "like": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    }
                  }
                },
                "object_types": {
                  "actor": {
                    "description": "An actor",
                    "fields": {
                      "favourite_author_id": {
                        "description": "The actor's favourite author ID",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        },
                        "arguments": {
                          "hash": {
                            "description": "Calculate hash",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "The actor's primary key",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        },
                        "arguments": {
                          "hash": {
                            "description": "Calculate hash",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          }
                        }
                      },
                      "movie_id": {
                        "description": "The actor's movie ID",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        },
                        "arguments": {
                          "hash": {
                            "description": "Calculate hash",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          }
                        }
                      },
                      "name": {
                        "description": "The actor's name",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "city": {
                    "description": "A city",
                    "fields": {
                      "name": {
                        "description": "The city's name",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "country": {
                    "description": "A country",
                    "fields": {
                      "area_km2": {
                        "description": "The country's area size in square kilometers",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "cities": {
                        "description": "The cities in the country",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "city"
                          }
                        }
                      },
                      "id": {
                        "description": "The country's primary key",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "name": {
                        "description": "The country's name",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "genre": {
                    "description": "A movie genre",
                    "fields": {
                      "id": {
                        "description": "The genre's primary key",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        },
                        "arguments": {
                          "hash": {
                            "description": "Calculate hash",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          }
                        }
                      },
                      "movies": {
                        "description": "Notable movies of this genre",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "movie"
                          }
                        }
                      },
                      "name": {
                        "description": "The genre's name",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "institution": {
                    "description": "An institution",
                    "fields": {
                      "departments": {
                        "description": "The institution's departments",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "String"
                          }
                        }
                      },
                      "id": {
                        "description": "The institution's primary key",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        },
                        "arguments": {
                          "hash": {
                            "description": "Calculate hash",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The institution's location",
                        "type": {
                          "type": "named",
                          "name": "location"
                        }
                      },
                      "name": {
                        "description": "The institution's name",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      },
                      "staff": {
                        "description": "The institution's staff",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "staff_member"
                          }
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "location": {
                    "description": "A location",
                    "fields": {
                      "campuses": {
                        "description": "The location's campuses",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "String"
                          }
                        }
                      },
                      "city": {
                        "description": "The location's city",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      },
                      "country": {
                        "description": "The location's country",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      },
                      "country_id": {
                        "description": "The location's country ID",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "login_response": {
                    "description": "Response to a login action",
                    "fields": {
                      "headers": {
                        "description": "Response headers to be forwarded",
                        "type": {
                          "type": "named",
                          "name": "HeaderMap"
                        }
                      },
                      "response": {
                        "description": "Authentication successful or not",
                        "type": {
                          "type": "named",
                          "name": "Bool"
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "movie": {
                    "description": "A movie",
                    "fields": {
                      "genres": {
                        "description": "The movie's genres",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "genre"
                          }
                        }
                      },
                      "id": {
                        "description": "The movie's primary key",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        },
                        "arguments": {
                          "hash": {
                            "description": "Calculate hash",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          }
                        }
                      },
                      "rating": {
                        "description": "The movie's rating",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        },
                        "arguments": {
                          "hash": {
                            "description": "Calculate hash",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          }
                        }
                      },
                      "title": {
                        "description": "The movie's title",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "name_query": {
                    "description": "parameters for querying by name",
                    "fields": {
                      "first_name": {
                        "description": "The actor's first name or null to match any first name",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "String"
                          }
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      },
                      "last_name": {
                        "description": "The actor's last name or null to match any last",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "String"
                          }
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "session_info": {
                    "description": "Session details",
                    "fields": {
                      "expiry": {
                        "description": "Token expiry",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "token": {
                        "description": "Session token",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "session_response": {
                    "description": "Response of session details",
                    "fields": {
                      "headers": {
                        "description": "Response headers to be forwarded",
                        "type": {
                          "type": "named",
                          "name": "HeaderMap"
                        }
                      },
                      "response": {
                        "description": "Session details",
                        "type": {
                          "type": "named",
                          "name": "session_info"
                        }
                      }
                    },
                    "foreign_keys": {}
                  },
                  "staff_member": {
                    "description": "A staff member",
                    "fields": {
                      "favourite_artist_id": {
                        "description": "The artist_id of the staff member's favourite artist",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "favourite_movie_id": {
                        "description": "The movie_id of the staff member's favourite movie",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "first_name": {
                        "description": "The staff member's first name",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      },
                      "last_name": {
                        "description": "The staff member's last name",
                        "type": {
                          "type": "named",
                          "name": "String"
                        },
                        "arguments": {
                          "change_case": {
                            "description": "Change the case of a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "hash": {
                            "description": "Hash a string",
                            "type": {
                              "type": "named",
                              "name": "String"
                            }
                          },
                          "limit": {
                            "description": "Limit the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          },
                          "offset": {
                            "description": "Offset the length of a string",
                            "type": {
                              "type": "named",
                              "name": "Int"
                            }
                          }
                        }
                      },
                      "specialities": {
                        "description": "The staff member's specialities",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "String"
                          }
                        }
                      }
                    },
                    "foreign_keys": {}
                  }
                },
                "collections": [
                  {
                    "name": "actors",
                    "description": "A collection of actors",
                    "arguments": {},
                    "type": "actor",
                    "uniqueness_constraints": {
                      "ActorByID": {
                        "unique_columns": ["id"]
                      }
                    }
                  },
                  {
                    "name": "movies",
                    "description": "A collection of movies",
                    "arguments": {},
                    "type": "movie",
                    "uniqueness_constraints": {
                      "MovieByID": {
                        "unique_columns": ["id"]
                      }
                    }
                  },
                  {
                    "name": "countries",
                    "description": "A collection of countries",
                    "arguments": {},
                    "type": "country",
                    "uniqueness_constraints": {
                      "CountryByID": {
                        "unique_columns": ["id"]
                      }
                    }
                  },
                  {
                    "name": "institutions",
                    "description": "A collection of institutions",
                    "arguments": {},
                    "type": "institution",
                    "uniqueness_constraints": {
                      "InstitutionByID": {
                        "unique_columns": ["id"]
                      }
                    }
                  },
                  {
                    "name": "actors_by_movie",
                    "description": "Actors parameterized by movie",
                    "arguments": {
                      "movie_id": {
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "type": "actor",
                    "uniqueness_constraints": {}
                  },
                  {
                    "name": "movies_by_actor_name",
                    "description": "Movies filtered by actor name search parameters",
                    "arguments": {
                      "_headers": {
                        "description": "headers",
                        "type": {
                          "type": "named",
                          "name": "HeaderMap"
                        }
                      },
                      "actor_name": {
                        "description": "the actor name components to search by",
                        "type": {
                          "type": "named",
                          "name": "name_query"
                        }
                      }
                    },
                    "type": "movie",
                    "uniqueness_constraints": {}
                  }
                ],
                "functions": [
                  {
                    "name": "latest_actor_id",
                    "description": "Get the ID of the most recent actor",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "Int"
                      }
                    }
                  },
                  {
                    "name": "latest_actor_name",
                    "description": "Get the name of the most recent actor",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "Actor_Name"
                      }
                    }
                  },
                  {
                    "name": "latest_actor",
                    "description": "Get the most recent actor",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "get_actor_by_id",
                    "description": "Get actor by ID",
                    "arguments": {
                      "id": {
                        "description": "the id of the actor to fetch",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "get_movie_by_id",
                    "description": "Get movie by ID",
                    "arguments": {
                      "movie_id": {
                        "description": "the id of the movie to fetch",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "movie"
                      }
                    }
                  },
                  {
                    "name": "get_actors_by_name",
                    "description": "Get actors by name",
                    "arguments": {
                      "name": {
                        "description": "the name components to search by",
                        "type": {
                          "type": "named",
                          "name": "name_query"
                        }
                      }
                    },
                    "result_type": {
                      "type": "array",
                      "element_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "actor_names_by_movie",
                    "description": "Get actor names by movie ID",
                    "arguments": {
                      "movie_id": {
                        "description": "the id of the movie to fetch",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "array",
                        "element_type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    }
                  },
                  {
                    "name": "get_all_actors",
                    "description": "Get all the actors",
                    "arguments": {},
                    "result_type": {
                      "type": "array",
                      "element_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "get_all_movies",
                    "description": "Get all the movies",
                    "arguments": {},
                    "result_type": {
                      "type": "array",
                      "element_type": {
                        "type": "named",
                        "name": "movie"
                      }
                    }
                  },
                  {
                    "name": "get_actors_by_movie_id_bounds",
                    "description": "Get all actors within a given lower and upper movie id bound",
                    "arguments": {
                      "lower_bound": {
                        "description": "the lower bound for movie id",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "upper_bound": {
                        "description": "the upper bound for movie id",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "array",
                        "element_type": {
                          "type": "named",
                          "name": "actor"
                        }
                      }
                    }
                  },
                  {
                    "name": "get_actors_by_bool_exp",
                    "description": "Get all actors with a boolean expression",
                    "arguments": {
                      "actor_bool_exp": {
                        "description": "boolean expression over actor",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "actor"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "array",
                        "element_type": {
                          "type": "named",
                          "name": "actor"
                        }
                      }
                    }
                  },
                  {
                    "name": "get_actors_by_movie_id",
                    "description": "Get all actors from a movie by movie ID",
                    "arguments": {
                      "movie_id": {
                        "description": "the id of the movie to fetch the actors from",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "array",
                      "element_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "get_institutions_by_institution_query",
                    "description": "Get institutions by specifying parts of institution object. For example by 'location.city'. All fields are optional.",
                    "arguments": {
                      "institution_query": {
                        "description": "The institution query object. All fields are optional",
                        "type": {
                          "type": "named",
                          "name": "institution"
                        }
                      }
                    },
                    "result_type": {
                      "type": "array",
                      "element_type": {
                        "type": "named",
                        "name": "institution"
                      }
                    }
                  },
                  {
                    "name": "get_session_details",
                    "description": "Get session details of a user",
                    "arguments": {
                      "_headers": {
                        "description": "headers required for session details",
                        "type": {
                          "type": "named",
                          "name": "HeaderMap"
                        }
                      },
                      "user_id": {
                        "description": "user id of the user",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "session_response"
                    }
                  }
                ],
                "procedures": [
                  {
                    "name": "upsert_actor",
                    "description": "Insert or update an actor",
                    "arguments": {
                      "actor": {
                        "description": "The actor to insert or update",
                        "type": {
                          "type": "named",
                          "name": "actor"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "update_actor_name_by_id",
                    "description": "Update an actor name given the ID and new name",
                    "arguments": {
                      "id": {
                        "description": "the id of the actor to update",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "name": {
                        "description": "the new name of the actor",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "uppercase_actor_name_by_id",
                    "description": "Uppercase an actor name given the ID",
                    "arguments": {
                      "id": {
                        "description": "the id of the actor to update",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "actor"
                      }
                    }
                  },
                  {
                    "name": "uppercase_all_actor_names",
                    "description": "Uppercase all actor names",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "array",
                        "element_type": {
                          "type": "named",
                          "name": "actor"
                        }
                      }
                    }
                  },
                  {
                    "name": "uppercase_all_actor_names_return_names_list",
                    "description": "Uppercase all actor names and return a list of the updated names",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "array",
                        "element_type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    }
                  },
                  {
                    "name": "login",
                    "description": "Perform a user login",
                    "arguments": {
                      "_headers": {
                        "description": "headers required for authentication",
                        "type": {
                          "type": "named",
                          "name": "HeaderMap"
                        }
                      },
                      "password": {
                        "description": "password of the user",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "username": {
                        "description": "username of the user",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "login_response"
                    }
                  },
                  {
                    "name": "noop_procedure",
                    "description": "Procedure which does not perform any actual mutuations on the data",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "String"
                      }
                    }
                  },
                  {
                    "name": "add_movie_with_genres",
                    "description": "Add a movie with genres",
                    "arguments": {
                      "movie": {
                        "description": "The movie to add",
                        "type": {
                          "type": "named",
                          "name": "movie"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "movie"
                    }
                  }
                ],
                "capabilities": {
                  "query": {
                    "aggregates": {
                      "filter_by": {
                        "count_scalar_type": "Int"
                      }
                    }
                  }
                }
              },
              "capabilities": {
                "version": "0.2.0",
                "capabilities": {
                  "query": {
                    "aggregates": {},
                    "variables": {},
                    "nested_fields": {
                      "filter_by": {},
                      "order_by": {},
                      "aggregates": {}
                    },
                    "exists": {
                      "unrelated": {}
                    }
                  },
                  "mutation": {},
                  "relationships": {
                    "relation_comparisons": {},
                    "order_by_aggregate": {},
                    "nested": {
                      "array": {}
                    }
                  }
                }
              }
            },
            "capabilities": {
              "capabilities": {
                "query": {
                  "aggregates": {},
                  "variables": {},
                  "nested_fields": {
                    "filter_by": {},
                    "order_by": {}
                  }
                },
                "explain": {},
                "relationships": {
                  "relation_comparisons": {},
                  "order_by_aggregate": {}
                }
              },
              "version": "0.1.3"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "custom",
            "dataConnectorScalarType": "String",
            "representation": "String",
            "graphql": {
              "comparisonExpressionTypeName": "String_Comparison_Exp"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "custom",
            "dataConnectorScalarType": "Int",
            "representation": "Int"
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "movie",
            "fields": [
              {
                "name": "movie_id",
                "type": "Int!"
              },
              {
                "name": "title",
                "type": "String!"
              },
              {
                "name": "rating",
                "type": "Int!"
              }
            ],
            "graphql": {
              "typeName": "Movie"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Movies",
            "objectType": "movie",
            "source": {
              "dataConnectorName": "custom",
              "collection": "movies",
              "typeMapping": {
                "movie": {
                  "fieldMapping": {
                    "movie_id": {
                      "column": "id"
                    },
                    "title": {
                      "column": "title"
                    },
                    "rating": {
                      "column": "rating"
                    }
                  }
                }
              }
            },
            "graphql": {
              "selectUniques": [],
              "selectMany": {
                "queryRootField": "MovieMany"
              }
            },
            "filterableFields": [
              {
                "fieldName": "movie_id",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "title",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "rating",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "movie_id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "title",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "rating",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "movie",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["movie_id", "title", "rating"]
                }
              },
              {
                "role": "user_1",
                "output": {
                  "allowedFields": ["movie_id", "title", "rating"]
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Movies",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "commandActor",
            "fields": [
              {
                "name": "actor_id",
                "type": "Int!"
              },
              {
                "name": "name",
                "type": "String!"
              },
              {
                "name": "movie_id",
                "type": "Int!"
              }
            ],
            "graphql": {
              "typeName": "CommandActor"
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "commandActor",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["actor_id", "name", "movie_id"]
                }
              },
              {
                "role": "user",
                "output": {
                  "allowedFields": ["actor_id", "name", "movie_id"]
                }
              }
            ]
          }
        },
        {
          "kind": "CommandPermissions",
          "version": "v1",
          "definition": {
            "commandName": "get_actor_by_id",
            "permissions": [
              {
                "role": "admin",
                "allowExecution": true
              },
              {
                "role": "user",
                "allowExecution": true
              }
            ]
          }
        },
        {
          "kind": "Command",
          "version": "v1",
          "definition": {
            "name": "get_actor_by_id",
            "arguments": [
              {
                "name": "actor_id",
                "type": "Int!"
              }
            ],
            "outputType": "commandActor",
            "source": {
              "dataConnectorName": "custom",
              "dataConnectorCommand": {
                "function": "get_actor_by_id"
              },
              "typeMapping": {
                "commandActor": {
                  "fieldMapping": {
                    "actor_id": {
                      "column": "id"
                    },
                    "name": {
                      "column": "name"
                    },
                    "movie_id": {
                      "column": "movie_id"
                    }
                  }
                }
              },
              "argumentMapping": {
                "actor_id": "id"
              }
            },
            "graphql": {
              "rootFieldName": "getActorById",
              "rootFieldKind": "Query"
            }
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "sourceType": "commandActor",
            "name": "Movies",
            "target": {
              "model": {
                "name": "Movies",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "movie_id"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "movie_id"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "DataConnectorLink",
          "version": "v1",
          "definition": {
            "name": "db",
            "url": {
              "singleUrl": {
                "value": "http://invalid_url:8100"
              }
            },
            "headers": {},
            "schema": {
              "version": "v0.1",
              "schema": {
                "scalar_types": {
                  "Int": {
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "Int"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "Int"
                          }
                        }
                      }
                    },
                    "comparison_operators": {},
                    "update_operators": {}
                  },
                  "String": {
                    "aggregate_functions": {},
                    "comparison_operators": {
                      "_like": {
                        "argument_type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "update_operators": {}
                  }
                },
                "object_types": {
                  "article": {
                    "description": "An article",
                    "fields": {
                      "id": {
                        "description": "The article's primary key",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "title": {
                        "description": "The article's title",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "author_id": {
                        "description": "The article's author ID",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    }
                  },
                  "author": {
                    "description": "An author",
                    "fields": {
                      "last_name": {
                        "description": "The author's last name",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "first_name": {
                        "description": "The author's first name",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "id": {
                        "description": "The author's primary key",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    }
                  },
                  "test_nullable_and_array": {
                    "description": "Testing nullable and array types",
                    "fields": {
                      "nullable_field": {
                        "description": "Nullable types",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "non_nullable_field": {
                        "description": "Non-nullable types",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "array_field": {
                        "description": "Non-nullable array types [String!]!",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "nullable_array_field": {
                        "description": "Nullable array types [String!]",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "array_nullable_field": {
                        "description": "Array nullable types [String]!",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "nullable_array_nullable_field": {
                        "description": "Nullable array nullable types [String]",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    }
                  }
                },
                "collections": [
                  {
                    "name": "article",
                    "description": "A collection of articles",
                    "arguments": {},
                    "type": "article",
                    "deletable": false,
                    "uniqueness_constraints": {
                      "ArticleByID": {
                        "unique_columns": ["id"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "author",
                    "description": "A collection of authors",
                    "arguments": {},
                    "type": "author",
                    "deletable": false,
                    "uniqueness_constraints": {
                      "AuthorByID": {
                        "unique_columns": ["id"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "articles_by_author",
                    "description": "Articles parameterized by author",
                    "arguments": {
                      "author_id": {
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "type": "article",
                    "deletable": false,
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  },
                  {
                    "name": "test_nullable_and_array_types",
                    "description": "Testing nullable and array types (input and output)",
                    "arguments": {
                      "nullable_field": {
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "non_nullable_field": {
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "array_field": {
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "nullable_array_field": {
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "array_nullable_field": {
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      },
                      "nullable_array_nullable_field": {
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "type": "test_nullable_and_array",
                    "deletable": false,
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  }
                ],
                "functions": [
                  {
                    "name": "latest_article_id",
                    "description": "Get the ID of the most recent article",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "Int"
                      }
                    }
                  },
                  {
                    "name": "latest_article",
                    "description": "Get the most recent article",
                    "arguments": {},
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "article"
                      }
                    }
                  },
                  {
                    "name": "get_article_by_id",
                    "description": "Insert or update an article",
                    "arguments": {
                      "id": {
                        "description": "the id of the article to fetch",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "article"
                      }
                    }
                  }
                ],
                "procedures": [
                  {
                    "name": "upsert_article",
                    "description": "Insert or update an article",
                    "arguments": {
                      "article": {
                        "description": "The article to insert or update",
                        "type": {
                          "type": "named",
                          "name": "article"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "article"
                      }
                    }
                  },
                  {
                    "name": "update_article_title_by_id",
                    "description": "Update an article title given the ID and new title",
                    "arguments": {
                      "id": {
                        "description": "the id of the article to update",
                        "type": {
                          "type": "named",
                          "name": "Int"
                        }
                      },
                      "title": {
                        "description": "the new title of the article",
                        "type": {
                          "type": "named",
                          "name": "String"
                        }
                      }
                    },
                    "result_type": {
                      "type": "nullable",
                      "underlying_type": {
                        "type": "named",
                        "name": "article"
                      }
                    }
                  }
                ]
              },
              "capabilities": {
                "capabilities": {
                  "query": {
                    "aggregates": {},
                    "variables": {},
                    "nested_fields": {
                      "filter_by": {},
                      "order_by": {}
                    }
                  },
                  "explain": {},
                  "relationships": {
                    "relation_comparisons": {},
                    "order_by_aggregate": {}
                  }
                },
                "version": "0.1.3"
              }
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "author",
            "fields": [
              {
                "name": "author_id",
                "type": "CustomInt!"
              },
              {
                "name": "first_name",
                "type": "String!"
              },
              {
                "name": "last_name",
                "type": "String!"
              }
            ],
            "graphql": {
              "typeName": "Author"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "CustomInt",
            "graphql": {
              "typeName": "CustomInt"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Authors",
            "objectType": "author",
            "source": {
              "dataConnectorName": "db",
              "collection": "author",
              "typeMapping": {
                "author": {
                  "fieldMapping": {
                    "author_id": {
                      "column": "id"
                    },
                    "first_name": {
                      "column": "first_name"
                    }
                  }
                }
              }
            },
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "AuthorByID",
                  "uniqueIdentifier": ["author_id"]
                }
              ],
              "selectMany": {
                "queryRootField": "AuthorMany"
              },
              "filterExpressionType": "Author_Where_Exp",
              "orderByExpressionType": "Author_Order_By"
            },
            "filterableFields": [
              {
                "fieldName": "author_id",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "first_name",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "last_name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "orderableFields": [
              {
                "fieldName": "author_id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "first_name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "last_name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "author",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["author_id", "first_name"]
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Authors",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "text",
            "representation": "String",
            "graphql": {
              "comparisonExpressionTypeName": "String_Comparison_Exp"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "int4",
            "representation": "CustomInt"
          }
        }
      ]
    }
  ]
}
