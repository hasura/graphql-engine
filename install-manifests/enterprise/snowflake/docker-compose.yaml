version: '3.7'
services:
  redis:
    image: redis:7
    restart: always
    ports:
      - 6379:6379
  postgres:
    image: postgres:14
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  hasura:
    image: hasura/graphql-engine:v2.16.0
    restart: always
    ports:
      - 8080:8080
    environment:
      ## Add your license key below
      HASURA_GRAPHQL_EE_LICENSE_KEY: ''
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      ## The metadata database for this Hasura GraphQL project. Can be changed to a managed postgres instance
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      # HASURA_GRAPHQL_READ_REPLICA_URLS: postgres://postgres:postgrespassword@postgres:5432/postgres

      ## Optional settings
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      ## enable required apis; metrics api exposes a prometheus endpoint, uncomment to enable
      # HASURA_GRAPHQL_ENABLED_APIS: 'graphql,metadata,config,developer,pgdump,metrics'
      ## secure metrics endpoint with a secret, uncomment to enable
      # HASURA_GRAPHQL_METRICS_SECRET: 'secret'
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      # HASURA_GRAPHQL_LOG_LEVEL: debug
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: '/srv/console-assets'
      HASURA_GRAPHQL_REDIS_URL: redis://redis:6379
      HASURA_GRAPHQL_REDIS_URL: 'redis://redis:6379'
      HASURA_GRAPHQL_RATE_LIMIT_REDIS_URL: 'redis://redis:6379'
      HASURA_GRAPHQL_MAX_CACHE_SIZE: '200'
  gdw_server:
    image: hasura/graphql-data-connector:v2.16.0-beta.1
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: 'false'
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
  # jaeger:
  #   image: jaegertracing/all-in-one:1.37
  #   restart: always
  #   ports:
  #     - 5775:5775/udp
  #     - 6831:6831/udp
  #     - 6832:6832/udp
  #     - 5778:5778
  #     - 4002:16686
  #     - 14250:14250
  #     - 14268:14268
  #     - 14269:14269
  #     - 4317:4317 # OTLP gRPC
  #     - 4318:4318 # OTLP HTTP
  #     - 9411:9411
  #   environment:
  #     COLLECTOR_OTLP_ENABLED: 'true'
  #     COLLECTOR_ZIPKIN_HOST_PORT: '9411'
volumes:
    db_data:
