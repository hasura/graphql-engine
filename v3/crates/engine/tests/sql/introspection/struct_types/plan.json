[
  {
    "plan_type": "logical_plan",
    "plan": "Projection: s.name, s.description, f.fields\n  Sort: f.struct_type_name ASC NULLS LAST\n    Projection: s.name, s.description, f.fields, f.struct_type_name\n      Left Join: s.name = f.struct_type_name\n        SubqueryAlias: s\n          TableScan: hasura.struct_type projection=[name, description]\n        SubqueryAlias: f\n          Projection: hasura.struct_type_field.struct_type_name, array_agg(named_struct(Utf8(\"field_name\"),hasura.struct_type_field.field_name,Utf8(\"field_type\"),hasura.struct_type_field.field_type,Utf8(\"field_type_normalized\"),hasura.struct_type_field.field_type_normalized,Utf8(\"is_nullable\"),hasura.struct_type_field.is_nullable,Utf8(\"description\"),hasura.struct_type_field.description)) ORDER BY [hasura.struct_type_field.field_name ASC NULLS LAST] AS fields\n            Aggregate: groupBy=[[hasura.struct_type_field.struct_type_name]], aggr=[[array_agg(named_struct(Utf8(\"field_name\"), hasura.struct_type_field.field_name, Utf8(\"field_type\"), hasura.struct_type_field.field_type, Utf8(\"field_type_normalized\"), hasura.struct_type_field.field_type_normalized, Utf8(\"is_nullable\"), hasura.struct_type_field.is_nullable, Utf8(\"description\"), hasura.struct_type_field.description)) ORDER BY [hasura.struct_type_field.field_name ASC NULLS LAST]]]\n              TableScan: hasura.struct_type_field projection=[struct_type_name, field_name, field_type, field_type_normalized, is_nullable, description]"
  },
  {
    "plan_type": "physical_plan",
    "plan": "ProjectionExec: expr=[name@0 as name, description@1 as description, fields@2 as fields]\n  SortExec: expr=[struct_type_name@3 ASC NULLS LAST], preserve_partitioning=[false]\n    ProjectionExec: expr=[name@0 as name, description@1 as description, fields@3 as fields, struct_type_name@2 as struct_type_name]\n      CoalesceBatchesExec: target_batch_size=8192\n        HashJoinExec: mode=CollectLeft, join_type=Left, on=[(name@0, struct_type_name@0)]\n          ValuesExec\n          ProjectionExec: expr=[struct_type_name@0 as struct_type_name, array_agg(named_struct(Utf8(\"field_name\"),hasura.struct_type_field.field_name,Utf8(\"field_type\"),hasura.struct_type_field.field_type,Utf8(\"field_type_normalized\"),hasura.struct_type_field.field_type_normalized,Utf8(\"is_nullable\"),hasura.struct_type_field.is_nullable,Utf8(\"description\"),hasura.struct_type_field.description)) ORDER BY [hasura.struct_type_field.field_name ASC NULLS LAST]@1 as fields]\n            AggregateExec: mode=Single, gby=[struct_type_name@0 as struct_type_name], aggr=[array_agg(named_struct(Utf8(\"field_name\"),hasura.struct_type_field.field_name,Utf8(\"field_type\"),hasura.struct_type_field.field_type,Utf8(\"field_type_normalized\"),hasura.struct_type_field.field_type_normalized,Utf8(\"is_nullable\"),hasura.struct_type_field.is_nullable,Utf8(\"description\"),hasura.struct_type_field.description)) ORDER BY [hasura.struct_type_field.field_name ASC NULLS LAST]]\n              SortExec: expr=[field_name@1 ASC NULLS LAST], preserve_partitioning=[false]\n                ValuesExec\n"
  }
]
