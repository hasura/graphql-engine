[
    {
        "kind": "DataConnectorLink",
        "version": "v1",
        "definition": {
            "name": "db",
            "url": {
                "singleUrl": {
                    "value": "http://postgres_connector:8100"
                }
            },
            "headers": {},
            "schema": {
                "version": "v0.1",
                "schema": {
                    "scalar_types": {
                        "Int": {
                            "aggregate_functions": {
                                "max": {
                                    "result_type": {
                                        "type": "nullable",
                                        "underlying_type": {
                                            "type": "named",
                                            "name": "Int"
                                        }
                                    }
                                },
                                "min": {
                                    "result_type": {
                                        "type": "nullable",
                                        "underlying_type": {
                                            "type": "named",
                                            "name": "Int"
                                        }
                                    }
                                }
                            },
                            "comparison_operators": {
                                "_eq": {
                                    "type": "equal"
                                }
                            },
                            "update_operators": {}
                        },
                        "String": {
                            "aggregate_functions": {},
                            "comparison_operators": {
                                "_like": {
                                    "argument_type": {
                                        "type": "named",
                                        "name": "String"
                                    },
                                    "type": "custom"
                                },
                                "_eq": {
                                    "type": "equal"
                                }
                            },
                            "update_operators": {}
                        }
                    },
                    "object_types": {
                        "article": {
                            "description": "An article",
                            "fields": {
                                "id": {
                                    "description": "The article's primary key",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "Int"
                                    }
                                },
                                "title": {
                                    "description": "The article's title",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "author_id": {
                                    "description": "The article's author ID",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "Int"
                                    }
                                }
                            }
                        },
                        "author": {
                            "description": "An author",
                            "fields": {
                                "last_name": {
                                    "description": "The author's last name",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "first_name": {
                                    "description": "The author's first name",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "id": {
                                    "description": "The author's primary key",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "Int"
                                    }
                                }
                            }
                        },
                        "test_nullable_and_array": {
                            "description": "Testing nullable and array types",
                            "fields": {
                                "nullable_field": {
                                    "description": "Nullable types",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "non_nullable_field": {
                                    "description": "Non-nullable types",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "array_field": {
                                    "description": "Non-nullable array types [String!]!",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "nullable_array_field": {
                                    "description": "Nullable array types [String!]",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "array_nullable_field": {
                                    "description": "Array nullable types [String]!",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "nullable_array_nullable_field": {
                                    "description": "Nullable array nullable types [String]",
                                    "arguments": {},
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                }
                            }
                        }
                    },
                    "collections": [
                        {
                            "name": "articles",
                            "description": "A collection of articles",
                            "arguments": {},
                            "type": "article",
                            "deletable": false,
                            "uniqueness_constraints": {
                                "ArticleByID": {
                                    "unique_columns": [
                                        "id"
                                    ]
                                }
                            },
                            "foreign_keys": {}
                        },
                        {
                            "name": "authors",
                            "description": "A collection of authors",
                            "arguments": {},
                            "type": "author",
                            "deletable": false,
                            "uniqueness_constraints": {
                                "AuthorByID": {
                                    "unique_columns": [
                                        "id"
                                    ]
                                }
                            },
                            "foreign_keys": {}
                        },
                        {
                            "name": "articles_by_author",
                            "description": "Articles parameterized by author",
                            "arguments": {
                                "author_id": {
                                    "type": {
                                        "type": "named",
                                        "name": "Int"
                                    }
                                }
                            },
                            "type": "article",
                            "deletable": false,
                            "uniqueness_constraints": {},
                            "foreign_keys": {}
                        },
                        {
                            "name": "test_nullable_and_array_types",
                            "description": "Testing nullable and array types (input and output)",
                            "arguments": {
                                "nullable_field": {
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "non_nullable_field": {
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "array_field": {
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "nullable_array_field": {
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "array_nullable_field": {
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                },
                                "nullable_array_nullable_field": {
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                }
                            },
                            "type": "test_nullable_and_array",
                            "deletable": false,
                            "uniqueness_constraints": {},
                            "foreign_keys": {}
                        }
                    ],
                    "functions": [
                        {
                            "name": "latest_article_id",
                            "description": "Get the ID of the most recent article",
                            "arguments": {},
                            "result_type": {
                                "type": "nullable",
                                "underlying_type": {
                                    "type": "named",
                                    "name": "Int"
                                }
                            }
                        },
                        {
                            "name": "latest_article",
                            "description": "Get the most recent article",
                            "arguments": {},
                            "result_type": {
                                "type": "nullable",
                                "underlying_type": {
                                    "type": "named",
                                    "name": "article"
                                }
                            }
                        },
                        {
                            "name": "get_article_by_id",
                            "description": "Insert or update an article",
                            "arguments": {
                                "id": {
                                    "description": "the id of the article to fetch",
                                    "type": {
                                        "type": "named",
                                        "name": "Int"
                                    }
                                }
                            },
                            "result_type": {
                                "type": "nullable",
                                "underlying_type": {
                                    "type": "named",
                                    "name": "article"
                                }
                            }
                        }
                    ],
                    "procedures": [
                        {
                            "name": "upsert_article",
                            "description": "Insert or update an article",
                            "arguments": {
                                "article": {
                                    "description": "The article to insert or update",
                                    "type": {
                                        "type": "named",
                                        "name": "article"
                                    }
                                }
                            },
                            "result_type": {
                                "type": "nullable",
                                "underlying_type": {
                                    "type": "named",
                                    "name": "article"
                                }
                            }
                        },
                        {
                            "name": "update_article_title_by_id",
                            "description": "Update an article title given the ID and new title",
                            "arguments": {
                                "id": {
                                    "description": "the id of the article to update",
                                    "type": {
                                        "type": "named",
                                        "name": "Int"
                                    }
                                },
                                "title": {
                                    "description": "the new title of the article",
                                    "type": {
                                        "type": "named",
                                        "name": "String"
                                    }
                                }
                            },
                            "result_type": {
                                "type": "nullable",
                                "underlying_type": {
                                    "type": "named",
                                    "name": "article"
                                }
                            }
                        }
                    ]
                },
                "capabilities": {
                    "capabilities": {
                        "query": {
                            "aggregates": {},
                            "variables": {},
                            "explain": {}
                        },
                        "relationships": {
                            "relation_comparisons": {},
                            "order_by_aggregate": {}
                        },
                        "mutation": {}
                    },
                    "version": "0.1.0" 
                }
            }
        }
    },
    {
        "kind": "ObjectType",
        "version": "v1",
        "definition": {
            "name": "author",
            "fields": [
                {
                    "name": "author_id",
                    "type": "CustomInt!"
                },
                {
                    "name": "first_name",
                    "type": "String!"
                },
                {
                    "name": "last_name",
                    "type": "String!"
                }
            ],
            "graphql": {
                "typeName": "Author"
            }
        }
    },
    {
        "kind": "ScalarType",
        "version": "v1",
        "definition": {
            "name": "CustomInt",
            "graphql": {
                "typeName": "CustomInt"
            }
        }
    },
    {
        "kind": "ObjectType",
        "version": "v1",
        "definition": {
            "name": "article",
            "fields": [
                {
                    "name": "article_id",
                    "type": "Int!"
                },
                {
                    "name": "title",
                    "type": "String!"
                },
                {
                    "name": "author_id",
                    "type": "CustomInt!"
                }
            ],
            "globalIdFields": [
                "article_id"
            ],
            "graphql": {
                "typeName": "Article"
            }
        }
    },
    {
        "kind": "ObjectType",
        "version": "v1",
        "definition": {
            "name": "test_nullable_array_types",
            "fields": [
                {
                    "name": "nullable_field",
                    "type": "String"
                },
                {
                    "name": "non_nullable_field",
                    "type": "String!"
                },
                {
                    "name": "array_field",
                    "type": "[String!]!"
                },
                {
                    "name": "nullable_array_field",
                    "type": "[String!]"
                },
                {
                    "name": "array_nullable_field",
                    "type": "[String]!"
                },
                {
                    "name": "nullable_array_nullable_field",
                    "type": "[String]"
                }
            ],
            "graphql": {
                "typeName": "TestNullableArrayTypes"
            }
        }
    },
    {
        "kind": "Model",
        "version": "v1",
        "definition": {
            "name": "Authors",
            "objectType": "author",
            "source": {
                "dataConnectorName": "db",
                "collection": "authors",
                "typeMapping": {
                    "author": {
                        "fieldMapping": {
                            "author_id": {
                                "column": "id"
                            },
                            "first_name": {
                                "column": "first_name"
                            }
                        }
                    }
                }
            },
            "graphql": {
                "selectUniques": [
                    {
                        "queryRootField": "AuthorByID",
                        "uniqueIdentifier": [
                            "author_id"
                        ]
                    }
                ],
                "selectMany": {
                    "queryRootField": "AuthorMany"
                },
                "filterExpressionType": "Author_Where_Exp",
                "orderByExpressionType": "Author_Order_By"
            },
            "filterableFields": [
                {
                    "fieldName": "author_id",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "first_name",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "last_name",
                    "operators": {
                        "enableAll": true
                    }
                }
            ],
            "orderableFields": [
                {
                    "fieldName": "author_id",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "first_name",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "last_name",
                    "orderByDirections": {
                        "enableAll": true
                    }
                }
            ]
        }
    },
    {
        "kind": "Model",
        "version": "v1",
        "definition": {
            "name": "Articles",
            "objectType": "article",
            "globalIdSource": true,
            "source": {
                "dataConnectorName": "db",
                "collection": "articles",
                "typeMapping": {
                    "article": {
                        "fieldMapping": {
                            "article_id": {
                                "column": "id"
                            },
                            "title": {
                                "column": "title"
                            },
                            "author_id": {
                                "column": "author_id"
                            }
                        }
                    }
                }
            },
            "filterableFields": [
                {
                    "fieldName": "article_id",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "title",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "author_id",
                    "operators": {
                        "enableAll": true
                    }
                }
            ],
            "orderableFields": [
                {
                    "fieldName": "article_id",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "title",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "author_id",
                    "orderByDirections": {
                        "enableAll": true
                    }
                }
            ],
            "graphql": {
                "selectUniques": [
                    {
                        "queryRootField": "ArticleByID",
                        "uniqueIdentifier": [
                            "article_id"
                        ]
                    }
                ],
                "selectMany": {
                    "queryRootField": "ArticleMany"
                },
                "filterExpressionType": "Article_Where_Exp",
                "orderByExpressionType": "Article_Order_By"
            }
        }
    },
    {
        "kind": "Model",
        "version": "v1",
        "definition": {
            "name": "ArticlesByAuthor",
            "objectType": "article",
            "arguments": [
                {
                    "name": "author_id",
                    "type": "Int!"
                }
            ],
            "source": {
                "dataConnectorName": "db",
                "collection": "articles_by_author",
                "typeMapping": {
                    "article": {
                        "fieldMapping": {
                            "article_id": {
                                "column": "id"
                            },
                            "title": {
                                "column": "title"
                            },
                            "author_id": {
                                "column": "author_id"
                            }
                        }
                    }
                }
            },
            "graphql": {
                "selectUniques": [
                    {
                        "queryRootField": "ArticlesByAuthorByID",
                        "uniqueIdentifier": [
                            "article_id"
                        ]
                    }
                ],
                "selectMany": {
                    "queryRootField": "ArticlesByAuthorMany"
                },
                "orderByExpressionType": "ArticlesByAuthorOrderBy",
                "filterExpressionType": "ArticlesByAuthorWhereExp",
                "argumentsInputType": "ArticlesByAuthorArgs"
            },
            "filterableFields": [
                {
                    "fieldName": "article_id",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "title",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "author_id",
                    "operators": {
                        "enableAll": true
                    }
                }
            ],
            "orderableFields": [
                {
                    "fieldName": "article_id",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "title",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "author_id",
                    "orderByDirections": {
                        "enableAll": true
                    }
                }
            ]
        }
    },
    {
        "kind": "Model",
        "version": "v1",
        "definition": {
            "name": "TestNullableAndArrayTypes",
            "objectType": "test_nullable_array_types",
            "globalIdSource": false,
            "source": {
                "dataConnectorName": "db",
                "collection": "test_nullable_and_array_types",
                "typeMapping": {
                    "test_nullable_array_types": {
                        "fieldMapping": {
                            "nullable_field": {
                                "column": "nullable_field"
                            },
                            "non_nullable_field": {
                                "column": "non_nullable_field"
                            },
                            "array_field": {
                                "column": "array_field"
                            },
                            "nullable_array_field": {
                                "column": "nullable_array_field"
                            },
                            "array_nullable_field": {
                                "column": "array_nullable_field"
                            },
                            "nullable_array_nullable_field": {
                                "column": "nullable_array_nullable_field"
                            }
                        }
                    }
                }
            },
            "graphql": {
                "selectUniques": [
                    {
                        "queryRootField": "TestNullableAndArrayById",
                        "uniqueIdentifier": [
                            "nullable_field",
                            "non_nullable_field",
                            "array_field",
                            "nullable_array_field",
                            "array_nullable_field",
                            "nullable_array_nullable_field"
                        ]
                    }
                ],
                "filterExpressionType": "Test_Nullable_And_Array_Types_Where_Exp"
            },
            "filterableFields": [
                {
                    "fieldName": "nullable_field",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "non_nullable_field",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "array_field",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "nullable_array_field",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "array_nullable_field",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "nullable_array_nullable_field",
                    "operators": {
                        "enableAll": true
                    }
                }
            ],
            "orderableFields": [
                {
                    "fieldName": "nullable_field",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "non_nullable_field",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "array_field",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "nullable_array_field",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "array_nullable_field",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "nullable_array_nullable_field",
                    "orderByDirections": {
                        "enableAll": true
                    }
                }
            ]
        }
    },
    {
        "kind": "TypePermissions",
        "version": "v1",
        "definition": {
            "typeName": "author",
            "permissions": [
                {
                    "role": "admin",
                    "output": {
                        "allowedFields": [
                            "author_id",
                            "first_name"
                        ]
                    }
                }
            ]
        }
    },
    {
        "kind": "TypePermissions",
        "version": "v1",
        "definition": {
            "typeName": "test_nullable_array_types",
            "permissions": [
                {
                    "role": "admin",
                    "output": {
                        "allowedFields": [
                            "nullable_field",
                            "non_nullable_field",
                            "array_field",
                            "nullable_array_field",
                            "array_nullable_field",
                            "nullable_array_nullable_field"
                        ]
                    }
                },
                {
                    "role": "user",
                    "output": {
                        "allowedFields": [
                            "nullable_field",
                            "non_nullable_field",
                            "array_field",
                            "nullable_array_field",
                            "array_nullable_field",
                            "nullable_array_nullable_field"
                        ]
                    }
                }
            ]
        }
    },
    {
        "kind": "ModelPermissions",
        "version": "v1",
        "definition": {
            "modelName": "TestNullableAndArrayTypes",
            "permissions": [
                {
                    "role": "admin",
                    "select": {
                        "filter": null
                    }
                },
                {
                    "role": "user",
                    "select": {
                        "filter": null
                    }
                }
            ]
        }
    },
    {
        "kind": "ModelPermissions",
        "version": "v1",
        "definition": {
            "modelName": "Authors",
            "permissions": [
                {
                    "role": "admin",
                    "select": {
                        "filter": null
                    }
                }
            ]
        }
    },
    {
        "kind": "ModelPermissions",
        "version": "v1",
        "definition": {
            "modelName": "ArticlesByAuthor",
            "permissions": [
                {
                    "role": "admin",
                    "select": {
                        "filter": null
                    }
                }
            ]
        }
    },
    {
        "kind": "TypePermissions",
        "version": "v1",
        "definition": {
            "typeName": "article",
            "permissions": [
                {
                    "role": "admin",
                    "output": {
                        "allowedFields": [
                            "article_id",
                            "title",
                            "author_id"
                        ]
                    }
                },
                {
                    "role": "user_1",
                    "output": {
                        "allowedFields": [
                            "article_id",
                            "author_id"
                        ]
                    }
                },
                {
                    "role": "user_2",
                    "output": {
                        "allowedFields": [
                            "article_id",
                            "title"
                        ]
                    }
                }
            ]
        }
    },
    {
        "kind": "ModelPermissions",
        "version": "v1",
        "definition": {
            "modelName": "Articles",
            "permissions": [
                {
                    "role": "admin",
                    "select": {
                        "filter": null
                    }
                },
                {
                    "role": "user_1",
                    "select": {
                        "filter": {
                            "fieldComparison": {
                                "field": "author_id",
                                "operator": "_eq",
                                "value": {
                                    "sessionVariable": "x-hasura-user-id"
                                }
                            }
                        }
                    }
                },
                {
                    "role": "user_2",
                    "select": {
                        "filter": {
                            "and": [
                                {
                                    "fieldComparison": {
                                        "field": "title",
                                        "operator": "_like",
                                        "value": {
                                            "literal": "%Functional%"
                                        }
                                    }
                                },
                                {
                                    "not": {
                                        "fieldIsNull": {
                                            "field": "author_id"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        }
    },
    {
        "kind": "ObjectType",
        "version": "v1",
        "definition": {
            "name": "TestTypeForScalars",
            "fields": [
                {
                    "name": "id",
                    "type": "Int"
                },
                {
                    "name": "name",
                    "type": "CustomString"
                }
            ],
            "graphql": {
                "typeName": "TestTypeForScalars"
            }
        }
    },
    {
        "kind": "TypePermissions",
        "version": "v1",
        "definition": {
            "typeName": "TestTypeForScalars",
            "permissions": [
                {
                    "role": "admin",
                    "output": {
                        "allowedFields": [
                            "id",
                            "name"
                        ]
                    }
                }
            ]
        }
    },
    {
        "kind": "Model",
        "version": "v1",
        "definition": {
            "name": "TestModelForScalars",
            "objectType": "TestTypeForScalars",
            "filterableFields": [
                {
                    "fieldName": "id",
                    "operators": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "name",
                    "operators": {
                        "enableAll": true
                    }
                }
            ],
            "orderableFields": [
                {
                    "fieldName": "id",
                    "orderByDirections": {
                        "enableAll": true
                    }
                },
                {
                    "fieldName": "name",
                    "orderByDirections": {
                        "enableAll": true
                    }
                }
            ],
            "graphql": {
                "selectUniques": [
                    {
                        "queryRootField": "TestModelByID",
                        "uniqueIdentifier": [
                            "id"
                        ]
                    },
                    {
                        "queryRootField": "TestModelByName",
                        "uniqueIdentifier": [
                            "name"
                        ]
                    }
                ]
            }
        }
    },
    {
        "kind": "ScalarType",
        "version": "v1",
        "definition": {
            "name": "CustomString",
            "graphql": {
                "typeName": "CustomString"
            }
        }
    },
    {
        "kind": "Relationship",
        "version": "v1",
        "definition": {
            "source": "author",
            "name": "Articles",
            "target": {
                "model": {
                    "name": "Articles",
                    "relationshipType": "Array"
                }
            },
            "mapping": [
                {
                    "source": {
                        "fieldPath": [
                            {
                                "fieldName": "author_id"
                            }
                        ]
                    },
                    "target": {
                        "modelField": [
                            {
                                "fieldName": "author_id"
                            }
                        ]
                    }
                }
            ]
        }
    },
    {
        "kind": "Relationship",
        "version": "v1",
        "definition": {
            "source": "article",
            "name": "Author",
            "target": {
                "model": {
                    "name": "Authors",
                    "relationshipType": "Object"
                }
            },
            "mapping": [
                {
                    "source": {
                        "fieldPath": [
                            {
                                "fieldName": "author_id"
                            }
                        ]
                    },
                    "target": {
                        "modelField": [
                            {
                                "fieldName": "author_id"
                            }
                        ]
                    }
                }
            ]
        }
    },
    {
        "kind": "DataConnectorScalarRepresentation",
        "version": "v1",
        "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "String",
            "representation": "String",
            "graphql": {
                "comparisonExpressionTypeName": "String_Comparison_Exp"
            }
        }
    },
    {
        "kind": "DataConnectorScalarRepresentation",
        "version": "v1",
        "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "Int",
            "representation": "CustomInt"
        }
    },
    {
        "kind": "ObjectType",
        "version": "v1",
        "definition": {
            "name": "commandArticle",
            "fields": [
                {
                    "name": "article_id",
                    "type": "Int!"
                },
                {
                    "name": "title",
                    "type": "String!"
                },
                {
                    "name": "author_id",
                    "type": "Int!"
                }
            ],
            "graphql": {
                "typeName": "CommandArticle"
            }
        }
    },
    {
        "kind": "TypePermissions",
        "version": "v1",
        "definition": {
            "typeName": "commandArticle",
            "permissions": [
                {
                    "role": "admin",
                    "output": {
                        "allowedFields": [
                            "article_id",
                            "title",
                            "author_id"
                        ]
                    }
                },
                {
                    "role": "user",
                    "output": {
                        "allowedFields": [
                            "article_id",
                            "title",
                            "author_id"
                        ]
                    }
                }
            ]
        }
    },
    {
        "kind": "CommandPermissions",
        "version": "v1",
        "definition": {
            "commandName": "get_article_by_id",
            "permissions": [
                {
                    "role": "admin",
                    "allowExecution": true
                },
                {
                    "role": "user",
                    "allowExecution": true
                }
            ]
        }
    },
    {
        "kind": "Command",
        "version": "v1",
        "definition": {
            "name": "get_article_by_id",
            "arguments": [
                {
                    "name": "article_id",
                    "type": "Int!"
                }
            ],
            "outputType": "commandArticle",
            "source": {
                "dataConnectorName": "db",
                "dataConnectorCommand": {
                    "function": "get_article_by_id"
                },
                "typeMapping": {
                    "commandArticle": {
                        "fieldMapping": {
                            "article_id": {
                                "column": "id"
                            },
                            "title": {
                                "column": "title"
                            },
                            "author_id": {
                                "column": "author_id"
                            }
                        }
                    }
                },
                "argumentMapping": {
                    "article_id": "id"
                }
            },
            "graphql": {
                "rootFieldName": "getArticleById",
                "rootFieldKind": "Query"
            }
        }
    },
    {
        "kind": "CommandPermissions",
        "version": "v1",
        "definition": {
            "commandName": "get_latest_article",
            "permissions": [
                {
                    "role": "admin",
                    "allowExecution": true
                }
            ]
        }
    },
    {
        "kind": "Command",
        "version": "v1",
        "definition": {
            "name": "get_latest_article",
            "arguments": [],
            "outputType": "commandArticle",
            "source": {
                "dataConnectorName": "db",
                "dataConnectorCommand": {
                    "function": "latest_article"
                },
                "typeMapping": {
                    "commandArticle": {
                        "fieldMapping": {
                            "article_id": {
                                "column": "id"
                            },
                            "title": {
                                "column": "title"
                            },
                            "author_id": {
                                "column": "author_id"
                            }
                        }
                    }
                }
            },
            "graphql": {
                "rootFieldName": "getLatestArticle",
                "rootFieldKind": "Query"
            }
        }
    },
    {
        "kind": "CommandPermissions",
        "version": "v1",
        "definition": {
            "commandName": "get_latest_article_id",
            "permissions": [
                {
                    "role": "admin",
                    "allowExecution": true
                }
            ]
        }
    },
    {
        "kind": "Command",
        "version": "v1",
        "definition": {
            "name": "get_latest_article_id",
            "arguments": [],
            "outputType": "Int",
            "source": {
                "dataConnectorName": "db",
                "dataConnectorCommand": {
                    "function": "latest_article_id"
                }
            },
            "graphql": {
                "rootFieldName": "getLatestArticleId",
                "rootFieldKind": "Query"
            }
        }
    },
    {
        "kind": "CommandPermissions",
        "version": "v1",
        "definition": {
            "commandName": "update_article_title_by_id",
            "permissions": [
                {
                    "role": "admin",
                    "allowExecution": true
                }
            ]
        }
    },
    {
        "kind": "Command",
        "version": "v1",
        "definition": {
            "name": "update_article_title_by_id",
            "arguments": [
                {
                    "name": "article_id",
                    "type": "Int!"
                },
                {
                    "name": "title",
                    "type": "String!"
                }
            ],
            "outputType": "commandArticle",
            "source": {
                "dataConnectorName": "db",
                "dataConnectorCommand": {
                    "procedure": "update_article_title_by_id"
                },
                "typeMapping": {
                    "commandArticle": {
                        "fieldMapping": {
                            "article_id": {
                                "column": "id"
                            },
                            "title": {
                                "column": "title"
                            },
                            "author_id": {
                                "column": "author_id"
                            }
                        }
                    }
                },
                "argumentMapping": {
                    "article_id": "id",
                    "title": "title"
                }
            },
            "graphql": {
                "rootFieldName": "updateArticleTitleById",
                "rootFieldKind": "Mutation"
            }
        }
    }
]