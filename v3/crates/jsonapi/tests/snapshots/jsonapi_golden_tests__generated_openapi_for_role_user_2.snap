---
source: crates/jsonapi/tests/jsonapi_golden_tests.rs
expression: generated_openapi
---
{
  "Ok": {
    "openapi": "3.1.0",
    "info": {
      "title": "Hasura JSONAPI (alpha)",
      "description": "REST API generated to match the JSON:API spec: https://jsonapi.org",
      "version": "0.1"
    },
    "paths": {
      "/v1/rest/default/Articles": {
        "get": {
          "summary": "Fetch Article values",
          "parameters": [
            {
              "name": "page[limit]",
              "in": "query",
              "description": "Optional limit for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "5"
            },
            {
              "name": "page[offset]",
              "in": "query",
              "description": "Optional offset for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "10"
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Optional list of fields from Articles to use in sorting response. 'field' will sort in ascending order, whilst '-field' will sort descending.",
              "schema": {
                "items": {
                  "enum": [
                    "article_id",
                    "-article_id",
                    "title",
                    "-title"
                  ]
                }
              },
              "example": "article_id,-title"
            },
            {
              "name": "include",
              "in": "query",
              "description": "Optional list of relationships from Articles to include in the response. Use dot-separated names to include nested relationships.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": "Author,AuthorFromCommand"
            },
            {
              "name": "fields[Article]",
              "in": "query",
              "description": "Optional list of fields from Article type to include in response. If no fields are provided, all fields are returned",
              "schema": {
                "items": {
                  "enum": [
                    "article_id",
                    "title"
                  ]
                }
              },
              "example": "article_id,title"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Articles response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "_type",
                            "attributes"
                          ],
                          "properties": {
                            "_type": {
                              "enum": [
                                "default_Article"
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "article_id": {
                                  "type": "integer"
                                },
                                "title": {
                                  "type": "string"
                                }
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "relationships": {
                              "type": "object",
                              "properties": {
                                "Author": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_Author"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "AuthorFromCommand": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_commandAuthor"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "default_Article": {
          "type": "object",
          "properties": {
            "article_id": {
              "type": "integer"
            },
            "title": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
