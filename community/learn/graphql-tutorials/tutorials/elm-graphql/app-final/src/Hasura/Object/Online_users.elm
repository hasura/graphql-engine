-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Hasura.Object.Online_users exposing (id, last_seen, user)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Hasura.InputObject
import Hasura.Interface
import Hasura.Object
import Hasura.Scalar
import Hasura.ScalarCodecs
import Hasura.Union
import Json.Decode as Decode


id : SelectionSet (Maybe String) Hasura.Object.Online_users
id =
    Object.selectionForField "(Maybe String)" "id" [] (Decode.string |> Decode.nullable)


last_seen : SelectionSet (Maybe Hasura.ScalarCodecs.Timestamptz) Hasura.Object.Online_users
last_seen =
    Object.selectionForField "(Maybe ScalarCodecs.Timestamptz)" "last_seen" [] (Hasura.ScalarCodecs.codecs |> Hasura.Scalar.unwrapCodecs |> .codecTimestamptz |> .decoder |> Decode.nullable)


{-| An object relationship
-}
user : SelectionSet decodesTo Hasura.Object.Users -> SelectionSet (Maybe decodesTo) Hasura.Object.Online_users
user object_ =
    Object.selectionForCompositeField "user" [] object_ (identity >> Decode.nullable)
