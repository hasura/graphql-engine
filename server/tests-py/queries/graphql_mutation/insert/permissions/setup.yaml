type: bulk
args:

#Author table
- type: run_sql
  args:
    sql: |
      create table author(
          id serial primary key, 
          name text unique, 
          bio text,
          is_registered boolean not null default false
      );
- type: track_table
  args:
    schema: public
    name: author

#Article table
- type: run_sql
  args:
    sql: |
      CREATE TABLE article (
        id SERIAL PRIMARY KEY,
        title TEXT,
        content TEXT,
        author_id INTEGER REFERENCES author(id),
        is_published BOOLEAN,
        published_on TIMESTAMP
      )
- type: track_table
  args:
    schema: public
    name: article

#Create resident table
- type: run_sql
  args:
    sql: |
      CREATE TABLE resident (
        id SERIAL PRIMARY KEY,
        name TEXT NOT NULL,
        age INTEGER NOT NULL
      )
- type: track_table
  args:
    schema: public
    name: resident

#Create address table
- type: run_sql
  args:
    sql: |
      CREATE TABLE address (
        id SERIAL PRIMARY KEY,
        door_no TEXT NOT NULL,
        street TEXT NOT NULL,
        city TEXT NOT NULL,
        resident_id INTEGER REFERENCES resident(id)
      )
- type: track_table
  args:
    schema: public
    name: address

#Create Company table
- type: run_sql
  args:
    sql: |
      CREATE TABLE "Company" (
      "id" SERIAL PRIMARY KEY,
      "name" TEXT
      )
- type: track_table
  args:
    schema: public
    name: Company

#Object relationship
- type: create_object_relationship
  args:
    table: article
    name: author
    using:
      foreign_key_constraint_on: author_id

#Array relationship
- type: create_array_relationship
  args:
    table: author
    name: articles
    using:
      foreign_key_constraint_on:
        table: article
        column: author_id

#Article select permission for user
- type: create_select_permission
  args:
    table: article
    role: user
    permission:
      columns: '*'
      filter:
        $or:
          - author_id: X-HASURA-USER-ID
          - is_published: true

#Article insert permission for user
- type: create_insert_permission
  args:
    table: article
    role: user
    permission:
      check:
        author_id: X-Hasura-User-Id

#Author select permission for user
- type: create_select_permission
  args:
    table: author
    role: user
    permission:
      columns:
      - id
      - name
      - is_registered
      filter:
        id: X-HASURA-USER-ID

#Author insert permission for user
#Only admin can set is_registered to true
- type: create_insert_permission
  args:
    table: author
    role: user
    permission:
      check:
        $and:
        - id: X-HASURA-USER-ID
        - is_registered: false
      allow_upsert: true

#Author insert permission for student
#A Student should specify their Bio
- type: create_insert_permission
  args:
    table: author
    role: student
    permission:
      check:
        bio:
          _is_null: false
      allow_upsert: true

#Insert Author table data
- type: insert
  args:
    table: author
    objects:
      - name: Author 1
      - name: Author 2

#Insert aticle table data
- type: insert
  args:
    table: article
    objects:
    - content: Sample article content
      title: Article 1
    - content: Sample article content
      title: Article 2
    - content: Sample article content
      title: Article 3
    
#Company insert permission for user
- type: create_insert_permission
  args:
    table: Company
    role: user
    permission:
      check:
        id: X-HASURA-COMPANY-ID
      allow_upsert: true

#Company select permission for user
- type: create_select_permission
  args:
    table: Company
    role: user
    permission:
      columns:
      - id
      - name
      filter:
        id: X-HASURA-COMPANY-ID
