type: bulk
args:

#Author table
- type: run_sql
  args:
    sql: |
      create table author(
          id serial primary key,
          name text unique,
          is_registered boolean not null default false
      );
- type: track_table
  args:
    schema: public
    name: author

#Article table
- type: run_sql
  args:
    sql: |
      CREATE TABLE article (
        id SERIAL PRIMARY KEY,
        title TEXT,
        content TEXT,
        author_id INTEGER REFERENCES author(id),
        is_published BOOLEAN,
        published_on TIMESTAMP
      )
- type: track_table
  args:
    schema: public
    name: article


#Article table
- type: run_sql
  args:
    sql: |
      CREATE TABLE city (
        id SERIAL PRIMARY KEY,
        name TEXT NOT NULL,
        country TEXT NOT NULL
      )
- type: track_table
  args:
    schema: public
    name: city

#Set timezone
- type: run_sql
  args:
    sql: |
      SET TIME ZONE 'UTC';

#Article order
- type: run_sql
  args:
    sql: |
      CREATE TABLE orders (
        id SERIAL PRIMARY KEY,
        received_at TIMESTAMP WITH TIME ZONE NOT NULL,
        delivered_at TIMESTAMP WITH TIME ZONE
      )
- type: track_table
  args:
    schema: public
    name: orders

#Object relationship
- type: create_object_relationship
  args:
    table: article
    name: author
    using:
      foreign_key_constraint_on: author_id

#Array relationship
- type: create_array_relationship
  args:
    table: author
    name: articles
    using:
      foreign_key_constraint_on:
        table: article
        column: author_id


#Message table
- type: run_sql
  args:
    sql: |
      CREATE TABLE message (
        id int PRIMARY KEY,
        content TEXT NOT NULL,
        parent_id INT NULL
      );
      alter table message
      add constraint parent_fk foreign key (parent_id)
      references message(id)

- type: track_table
  args:
    schema: public
    name: message

# parent obj rel
- type: create_object_relationship
  args:
    table: message
    name: parent
    using:
      foreign_key_constraint_on: parent_id

# children array rel
- type: create_array_relationship
  args:
    table: message
    name: children
    using:
      foreign_key_constraint_on:
        table: message
        column: parent_id

#Insert messages
- type: insert
  args:
    table: message
    objects:
    - id: 1
      content: "hello world"
      parent_id: null
    - id: 2
      content: "content 2"
      parent_id: 1
    - id: 3
      content: "content 3"
      parent_id: 1
    - id: 4
      content: "ahoy"
      parent_id: null
    - id: 5
      content: "content 5"
      parent_id: 4
    - id: 6
      content: "hello there"
      parent_id: 4

#Insert Authors
- type: insert
  args:
    table: author
    objects:
    - name: Author 1
      is_registered: true
    - name: Author 2
      is_registered: true
    - name: Author 3
      is_registered: false


- type: run_sql
  args:
    sql: |
      insert into article (title,content,author_id,is_published)
      values
      (
        'Article 1',
        'Sample article content 1',
        1,
        false
      ),
      (
        'Article 2',
        'Sample article content 2',
        1,
        true
      ),
      (
        'Article 3',
        'Sample article content 3',
        2,
        false
      ),
      (
        'Article 4',
        'Sample article content 4',
        3,
        true
      )

- type: insert
  args:
    table: city
    objects:
    - name: Durham
      country: USA
    - name:  New York
      country: USA
    - name: Framlingham
      country: UK
    - name: New Orleans
      country: USA

- type: insert
  args:
    table: orders
    objects:
      - received_at: '2018-09-21T09:39:44Z'
      - received_at: '2018-09-21T09:40:44Z'
        delivered_at: '2018-09-21T09:50:44Z'

- type: run_sql
  args:
    sql: |
      CREATE TABLE "uuid_test" (
        id serial primary key,
        uuid_col UUID NOT NULL
      )
- type: track_table
  args:
    name: uuid_test
    schema: public

- type: insert
  args:
    table: uuid_test
    objects:
    - uuid_col: 28d6d683-1317-49f7-b1cf-7d195242e4e5
    - uuid_col: 28d6d683-1317-49f7-b1cf-7d195242e4e6
    - uuid_col: 28d6d683-1317-49f7-b1cf-7d195242e4e7

# Tables to test '_exist' field
- type: run_sql
  args:
    sql: |
      create table "user" (
        id serial primary key,
        name text not null unique,
        is_admin boolean default false
      );

      insert into "user" (name, is_admin)
        values ('user_1', false), ('user_2', true)
      ;

      create table account (
        id serial primary key,
        account_no integer not null unique
      );

      insert into account (account_no) values (1), (2) ;

- type: track_table
  args:
    name: user
    schema: public

- type: track_table
  args:
    name: account
    schema: public

- type: create_select_permission
  args:
    table: account
    role: user
    permission:
      columns:
      - id
      - account_no
      filter:
        _exists:
          _table: user
          _where:
            id: X-Hasura-User-Id
            is_admin: true

- type: run_sql
  args:
    sql: |
      CREATE TYPE complex AS (
          r       double precision,
          i       double precision
      );

- type: run_sql
  args:
    sql: |
      CREATE TYPE inventory_item AS (
          name            text,
          supplier_id     integer,
          price           numeric
      );

#Test table with different types
- type: run_sql
  args:
    sql: |
      create table test_types (
          c1_smallint smallint,
          c2_integer integer,
          c3_bigint bigint,
          c4_decimal decimal (5, 2),
          c5_numeric numeric (4, 3),
          c6_real real,
          c7_double_precision double precision,
          c8_smallserial smallserial,
          c9_serial serial,
          c10_bigserial bigserial,
          c11_varchar_3 varchar(3),
          c12_char_4 char(4),
          c13_text text,
          c14_timestamp timestamp,
          c15_timestamptz timestamptz,
          c16_date date,
          c17_time time,
          c18_time_with_zone time with time zone,
          c19_interval interval,
          c20_boolean boolean,
          c21_point point,
          c22_line line,
          c23_lseg lseg,
          c24_box box,
          c25_closed_path path,
          c26_open_path path,
          c27_polygon  polygon,
          c28_circle circle,
          c29_cidr cidr,
          c30_inet inet,
          c31_macaddr macaddr,
          c32_json json,
          c33_jsonb jsonb,
          c34_text_array text[],
          c35_integer_2d_array integer[][],
          c36_uuid uuid,
          c37_composite_type_complex complex,
          c38_composite_type_inventory inventory_item,
          c39_range_integer int4range,
          c40_range_bigint int8range,
          c41_range_numeric numrange,
          c42_range_timestamp tsrange,
          c43_range_timestamptz tstzrange,
          c44_xml xml
      );

# Here we have two set of insert queries for test_types table
# In each inserted row, only one of the non-auto increment columns will be non-null
# All the entries in first insert < corresponding entries in the second insert,
# so that comparison tests can be made
- type: track_table
  args:
    schema: public
    name: test_types

- type: insert
  args:
    table:
      schema: public
      name: test_types
    objects:
      - c1_smallint: 32766
      - c2_integer: 2147483645
      - c3_bigint: "9223372036854775806"
      - c4_decimal: '234.54'
      - c5_numeric: '3.456'
      - c6_real: 1.456
      - c7_double_precision: '1.23456'
      - c11_varchar_3: "abc"
      - c12_char_4: "abcd"
      - c13_text: "abc def"
      - c14_timestamp: "2004-10-19T10:23:54"
      - c15_timestamptz: "2015-10-17T14:42:43+00:00"
      - c16_date: "2014-09-14"
      - c17_time: "11:09:23"
      - c18_time_with_zone: "15:22:23+00"
      - c19_interval: "01:03:02"
      - c20_boolean: false
      - c21_point: "(1,2)"
      - c22_line: "{2,3,-1}"
      - c23_lseg: "[(4,2),(3,1)]"
      - c24_box: "(31,15),(14,11)"
      - c25_closed_path: "((0,0),(0,3),(1,0))"
      - c26_open_path: "[(0,0),(0,-1),(-3,0)]"
      - c27_polygon: "((0,0),(0,6),(2,0))"
      - c28_circle: "<(-2,-3),3>"
      - c29_cidr: "192.168.100.0/25"
      - c30_inet: "198.24.10.0"
      - c31_macaddr: "08:00:2b:01:02:03"
      - c32_json:
          a: b
      - c33_jsonb:
          c: d
      - c36_uuid: "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
      - c39_range_integer: "[123,456)"
      - c40_range_bigint: "[1147483647,2147483647)"
      - c41_range_numeric: "[1.23,4.56]"
      - c42_range_timestamp: "[\"2010-01-01 14:30:00\",\"2010-01-01 15:30:02\")"
      - c43_range_timestamptz: "(\"2011-02-05 12:03:00+00\",\"2012-03-04 16:40:04+00\"]"
      - c44_xml: "<foo>bar</foo>"

- type: insert
  args:
    table:
      schema: public
      name: test_types
    objects:
      - c1_smallint: 32767
      - c2_integer: 2147483646
      - c3_bigint: "9223372036854775807"
      - c4_decimal: '345.67'
      - c5_numeric: '4.567'
      - c6_real: 1.567
      - c7_double_precision: '2.345567'
      - c11_varchar_3: "def"
      - c12_char_4: "efgh"
      - c13_text: "efg hij"
      - c14_timestamp: "2005-11-20T11:24:55"
      - c15_timestamptz: "2016-11-18T15:43:44+00:00"
      - c16_date: "2015-10-15"
      - c17_time: "11:10:24"
      - c18_time_with_zone: "16:23:24+00"
      - c19_interval: "02:04:03"
      - c20_boolean: true
      - c21_point: "(3,4)"
      - c22_line: "{3,4,0}"
      - c23_lseg: "[(8,3),(6,2)]"
      - c24_box: "(32,16),(13,10)"
      - c25_closed_path: "((2,0),(1,3),(1,4),(2,5))"
      - c26_open_path: "[(0,3),(-1,0),(3,-4),(2,5)]"
      - c27_polygon: "((0,0),(0,5),(1,0))"
      - c28_circle: "<(-3,1),4>"
      - c29_cidr: "192.168.100.128/25"
      - c30_inet: "198.24.11.0"
      - c31_macaddr: "08:00:2b:01:02:04"
      - c32_json:
          a: {b: c}
      - c33_jsonb:
          c: {d: {e: f}}
      - c36_uuid: "cee5d385-6556-4b85-adce-8153948068d1"
      - c39_range_integer: "[345,685)"
      - c40_range_bigint: "[2113280647,3215271517)"
      - c41_range_numeric: "[3.21,6.54]"
      - c42_range_timestamp: "[\"2010-01-02 15:03:01\",\"2010-01-02 15:45:03\")"
      - c43_range_timestamptz: "(\"2014-04-05 12:05:00+00\",\"2014-04-06 16:45:04+00\"]"
      - c44_xml: "<bar>foo</bar>"
