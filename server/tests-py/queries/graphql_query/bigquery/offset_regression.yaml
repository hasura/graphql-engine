- description: Aggregate with a limit using nodes, count
  url: /v1/graphql
  status: 200
  response:
    data:
      hasura_Artist:
      - artist_self_id: '1000'
        albums_aggregate:
          nodes:
          - album_self_id: '2002'
          aggregate:
            count: '1'
      - artist_self_id: '1001'
        albums_aggregate:
          nodes:
          - album_self_id: '2000'
          aggregate:
            count: '1'
      - artist_self_id: '1002'
        albums_aggregate:
          nodes:
          - album_self_id: '2003'
          aggregate:
            count: '1'
  query:
    query: |
      query MyQuery {
        hasura_Artist(order_by: {artist_self_id: asc}) {
          artist_self_id
          albums_aggregate(order_by: {album_self_id: asc}, limit: 1) {
            nodes {
              album_self_id
            }
            aggregate {
              count
            }
          }
        }
      }

- description: Aggregate with order by using nodes, count, sum
  url: /v1/graphql
  status: 200
  response:
    data:
      hasura_Artist:
      - artist_self_id: '1001'
        albums_aggregate:
          nodes:
          - album_self_id: '2000'
          - album_self_id: '2001'
          aggregate:
            count: '2'
            sum:
              album_self_id: '4001'
      - artist_self_id: '1002'
        albums_aggregate:
          nodes:
          - album_self_id: '2003'
          - album_self_id: '2004'
          aggregate:
            count: '2'
            sum:
              album_self_id: '4007'
      - artist_self_id: '1000'
        albums_aggregate:
          nodes:
          - album_self_id: '2002'
          - album_self_id: '2005'
          aggregate:
            count: '2'
            sum:
              album_self_id: '4007'
  query:
    query: |
      query MyQuery {
        hasura_Artist {
          artist_self_id
          albums_aggregate(order_by: {album_self_id: asc}) {
            nodes {
              album_self_id
            }
            aggregate {
              count
              sum {
                album_self_id
              }
            }
          }
        }
      }

- description: Aggregate with limit using sum, nodes
  url: /v1/graphql
  status: 200
  response:
    data:
        hasura_Artist:
        - artist_self_id: '1001'
          albums_aggregate:
            nodes:
            - album_self_id: '2000'
            aggregate:
              count: '1'
              sum:
                album_self_id: '2000'
        - artist_self_id: '1002'
          albums_aggregate:
            nodes:
            - album_self_id: '2003'
            aggregate:
              count: '1'
              sum:
                album_self_id: '2003'
        - artist_self_id: '1000'
          albums_aggregate:
            nodes:
            - album_self_id: '2002'
            aggregate:
              count: '1'
              sum:
                album_self_id: '2002'
  query:
    query: |
      query MyQuery {
        hasura_Artist {
          artist_self_id
          albums_aggregate(order_by: {album_self_id: asc}, limit: 1) {
            nodes {
              album_self_id
            }
            aggregate {
              count
              sum {
                album_self_id
              }
            }
          }
        }
      }

- description: Aggregate with offset using sum, nodes
  url: /v1/graphql
  status: 200
  response:
    data:
        hasura_Artist:
        - artist_self_id: '1001'
          albums_aggregate:
            nodes:
            - album_self_id: '2001'
            aggregate:
              count: '1'
              sum:
                album_self_id: '2001'
        - artist_self_id: '1002'
          albums_aggregate:
            nodes:
            - album_self_id: '2004'
            aggregate:
              count: '1'
              sum:
                album_self_id: '2004'
        - artist_self_id: '1000'
          albums_aggregate:
            nodes:
            - album_self_id: '2005'
            aggregate:
              count: '1'
              sum:
                album_self_id: '2005'
  query:
    query: |
      query MyQuery {
        hasura_Artist {
          artist_self_id
          albums_aggregate(order_by: {album_self_id: asc}, offset: 1) {
            nodes {
              album_self_id
            }
            aggregate {
              count
              sum {
                album_self_id
              }
            }
          }
        }
      }
