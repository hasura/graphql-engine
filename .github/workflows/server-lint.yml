name: server lint
on:
  pull_request:
    paths:
      - 'server/**'

jobs:
  stylish-haskell:
    runs-on: ubuntu-latest
    env:
      working-directory: ./server
      temp-directory: temp-stylish
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install stylish-haskell
        working-directory: ${{env.working-directory}}
        run: |
          RELEASES=$(curl --silent https://github.com/jaspervdj/stylish-haskell/releases)
          URL=https://github.com/$(echo $RELEASES | grep -o '\"[^\"]*-linux-x86_64\.tar\.gz\"' | sed s/\"//g | head -n1)
          VERSION=$(echo $URL | sed -e 's/.*-\(v[\.0-9]\+-linux-x86_64\)\.tar\.gz/\1/')
          mkdir -p ${{env.temp-directory}}
          curl --progress-bar --location -o${{env.temp-directory}}/stylish-haskell.tar.gz $URL
          tar -xzf ${{env.temp-directory}}/stylish-haskell.tar.gz -C${{env.temp-directory}}

      - name: Run stylish-haskell
        working-directory: ${{env.working-directory}}
        run: |
          COMMON_ANCESTOR=$(git merge-base origin/${{github.base_ref}} ${{github.sha}})
          BINARY=${{env.temp-directory}}/*/stylish-haskell
          for hfile in $(git diff --name-only $COMMON_ANCESTOR..${{github.sha}} -- . | grep -E '\.hs$|\.lhs$' | sed 's%^server/%%'); do
            echo "Running on $hfile"
            $BINARY -i $hfile &> /dev/null || true
            if [ -n "$(git diff)" ]; then
              echo "::warning file=server/$hfile::This file needs to be formatted using stylish-haskell."
            fi
            git reset --hard
          done

  hlint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'ignore-server-hlint-checks') && github.event.label.name != 'ignore-server-hlint-checks'"
    env:
      working-directory: ./server
      HLINT_BASE_URL: https://dl.haskellworks.io/binaries/hlint
      HLINT_VERSION: 3.1.6
      HLINT_ARCH: x86_64
      HLINT_OS: linux
      HLINT_URL: $HLINT_BASE_URL/hlint-${HLINT_VERSION}-${HLINT_ARCH}-${HLINT_OS}.tar.gz
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download hlint
        working-directory: ${{env.working-directory}}
        run: |
          echo "Downloading from ${{env.HLINT_URL}}"
          curl "${{env.HLINT_URL}}" -o "./hlint-${{env.HLINT_VERSION}}-${{env.HLINT_ARCH}}-${{env.HLINT_OS}}.tar.gz"
          tar -zxvf "./hlint-${{env.HLINT_VERSION}}-${{env.HLINT_ARCH}}-${{env.HLINT_OS}}.tar.gz" -C "."

      - name: Run hlint
        shell: bash
        run: |
          CHANGED_HS_FILES=$(git diff --name-only origin/${{github.base_ref}}...${{github.sha}} -- "${{env.working-directory}}/*.hs" | xargs -i -d '\n' sh -c 'ls -d {} 2>/dev/null || true')
          echo "$CHANGED_HS_FILES"
          JQ_SCRIPT='.[] | "::" + (if (.severity=="Warning" or .severity=="Error") then "error" else "warning" end) + " file=\(.file),line=\(.startLine),col=\(.startColumn)::\(.severity):" + " \(.hint)%0AFound:%0A  \(.from | gsub("\n";"%0A  "))%0A" + try ("Perhaps:%0A  " + (.to | gsub("\n";"%0A  "))) catch ""'
          if [[ "$CHANGED_HS_FILES" ]]
          then
            echo "$CHANGED_HS_FILES" | xargs ${{env.working-directory}}/hlint --json --hint=${{env.working-directory}}/.hlint.yaml | jq -r "$JQ_SCRIPT"
          fi

