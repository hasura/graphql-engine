// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

'use strict';

const Curry = require('bs-platform/lib/js/curry.js');
const React = require('react');
const TableAlias$GraphqlEngineConsole = require('../Common/ReusableComponents/TableAlias.bs.js');
const ModifyActions$GraphqlEngineConsole = require('./ModifyActions.bs.js');
const ExpandableEditor$GraphqlEngineConsole = require('../../../Common/Layout/ExpandableEditor/ExpandableEditor.bs.js');

function AliasEditor(Props) {
  const tableName = Props.tableName;
  const schemaName = Props.schemaName;
  const dispatch = Props.dispatch;
  const existingAliases = Props.existingAliases;
  const existingColNames = Props.existingColNames;
  const newAliases = Props.newAliases;
  const save = Props.save;
  const content = function(cRootFieldAliases, disabled) {
    return React.createElement(TableAlias$GraphqlEngineConsole.make, {
      select: cRootFieldAliases.select,
      selectOnChange: function(e) {
        const alias = e.target.value;
        return Curry._1(
          dispatch,
          ModifyActions$GraphqlEngineConsole.modifyRootFields('select', alias)
        );
      },
      selectByPk: cRootFieldAliases.select_by_pk,
      selectByPkOnChange: function(e) {
        const alias = e.target.value;
        return Curry._1(
          dispatch,
          ModifyActions$GraphqlEngineConsole.modifyRootFields(
            'select_by_pk',
            alias
          )
        );
      },
      selectAgg: cRootFieldAliases.select_aggregate,
      selectAggOnChange: function(e) {
        const alias = e.target.value;
        return Curry._1(
          dispatch,
          ModifyActions$GraphqlEngineConsole.modifyRootFields(
            'select_aggregate',
            alias
          )
        );
      },
      insert: cRootFieldAliases.insert,
      insertOnChange: function(e) {
        const alias = e.target.value;
        return Curry._1(
          dispatch,
          ModifyActions$GraphqlEngineConsole.modifyRootFields('insert', alias)
        );
      },
      update: cRootFieldAliases.update,
      updateOnChange: function(e) {
        const alias = e.target.value;
        return Curry._1(
          dispatch,
          ModifyActions$GraphqlEngineConsole.modifyRootFields('update', alias)
        );
      },
      delete: cRootFieldAliases.delete,
      deleteOnChange: function(e) {
        const alias = e.target.value;
        return Curry._1(
          dispatch,
          ModifyActions$GraphqlEngineConsole.modifyRootFields('delete', alias)
        );
      },
      expanded: true,
      disabled: disabled,
    });
  };
  const editorExpanded = function(param) {
    return content(newAliases, false);
  };
  const editorCollapsed = function(param) {
    return content(existingAliases, true);
  };
  const expandCallback = function(param) {
    const alias = existingAliases.select;
    Curry._1(
      dispatch,
      ModifyActions$GraphqlEngineConsole.modifyRootFields('select', alias)
    );
    const alias$1 = existingAliases.select_by_pk;
    Curry._1(
      dispatch,
      ModifyActions$GraphqlEngineConsole.modifyRootFields(
        'select_by_pk',
        alias$1
      )
    );
    const alias$2 = existingAliases.select_aggregate;
    Curry._1(
      dispatch,
      ModifyActions$GraphqlEngineConsole.modifyRootFields(
        'select_aggregate',
        alias$2
      )
    );
    const alias$3 = existingAliases.insert;
    Curry._1(
      dispatch,
      ModifyActions$GraphqlEngineConsole.modifyRootFields('insert', alias$3)
    );
    const alias$4 = existingAliases.update;
    Curry._1(
      dispatch,
      ModifyActions$GraphqlEngineConsole.modifyRootFields('update', alias$4)
    );
    const alias$5 = existingAliases.delete;
    return Curry._1(
      dispatch,
      ModifyActions$GraphqlEngineConsole.modifyRootFields('delete', alias$5)
    );
  };
  const saveFunc = function(toggle) {
    const match = ModifyActions$GraphqlEngineConsole.generateAliasingQuery(
      newAliases,
      existingColNames,
      existingAliases,
      existingColNames,
      tableName,
      schemaName
    );
    return Curry._3(save, match[0], match[1], toggle);
  };
  return React.createElement(
    'div',
    undefined,
    React.createElement(ExpandableEditor$GraphqlEngineConsole.make, {
      isCollapsable: true,
      property: 'root-field-alias',
      service: 'modify-table',
      saveFunc: saveFunc,
      expandCallback: expandCallback,
      editorCollapsed: editorCollapsed,
      editorExpanded: editorExpanded,
    })
  );
}

const make = AliasEditor;

exports.make = make;
/* react Not a pure module */
