// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

'use strict';

const CommonUtils$GraphqlEngineConsole = require('../../../Common/CommonUtils.bs.js');

const _MODIFY_ROOT_FIELD_ALIASES = 'ModifyTable/MODIFY_ROOT_FIELD_ALIASES';

function modifyRootFields(field, alias) {
  return {
    type: _MODIFY_ROOT_FIELD_ALIASES,
    field: field,
    alias: alias,
  };
}

function sanitiseRootFields(rootFields) {
  return {
    select: CommonUtils$GraphqlEngineConsole.stringToOption(rootFields.select),
    select_by_pk: CommonUtils$GraphqlEngineConsole.stringToOption(
      rootFields.select_by_pk
    ),
    select_aggregate: CommonUtils$GraphqlEngineConsole.stringToOption(
      rootFields.select_aggregate
    ),
    insert: CommonUtils$GraphqlEngineConsole.stringToOption(rootFields.insert),
    update: CommonUtils$GraphqlEngineConsole.stringToOption(rootFields.update),
    delete: CommonUtils$GraphqlEngineConsole.stringToOption(rootFields.delete),
  };
}

function generateAliasingQuery(
  newRootFields,
  newColumnNames,
  oldRootFields,
  oldColumnNames,
  tableName,
  schemaName
) {
  const generateQuery = function(cRootFields, cColumnNames) {
    return {
      type: 'set_table_custom_fields',
      version: 2,
      args: {
        table: {
          name: tableName,
          schema: schemaName,
        },
        custom_root_fields: sanitiseRootFields(cRootFields),
        custom_column_names: cColumnNames,
      },
    };
  };
  const upQuery = generateQuery(newRootFields, newColumnNames);
  const downQuery = generateQuery(oldRootFields, oldColumnNames);
  return /* tuple */ [upQuery, downQuery];
}

exports._MODIFY_ROOT_FIELD_ALIASES = _MODIFY_ROOT_FIELD_ALIASES;
exports.modifyRootFields = modifyRootFields;
exports.sanitiseRootFields = sanitiseRootFields;
exports.generateAliasingQuery = generateAliasingQuery;
/* CommonUtils-GraphqlEngineConsole Not a pure module */
