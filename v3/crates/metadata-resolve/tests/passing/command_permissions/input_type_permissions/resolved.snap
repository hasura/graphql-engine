---
source: crates/metadata-resolve/tests/metadata_golden_tests.rs
expression: resolved
input_file: crates/metadata-resolve/tests/passing/command_permissions/input_type_permissions/metadata.json
---
(
    Metadata {
        object_types: {
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CustomTypeName(
                    Identifier(
                        "Album",
                    ),
                ),
            }: ObjectTypeWithRelationships {
                object_type: ObjectTypeRepresentation {
                    fields: {
                        FieldName(
                            Identifier(
                                "albumId",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Int4",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "artistId",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Int4",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "title",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Varchar",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                    },
                    global_id_fields: [],
                    apollo_federation_config: None,
                    graphql_output_type_name: Some(
                        TypeName(
                            Name(
                                "Album",
                            ),
                        ),
                    ),
                    graphql_input_type_name: Some(
                        TypeName(
                            Name(
                                "AlbumInput",
                            ),
                        ),
                    ),
                    description: None,
                },
                type_output_permissions: {
                    Role(
                        "admin",
                    ): TypeOutputPermission {
                        allowed_fields: {
                            FieldName(
                                Identifier(
                                    "albumId",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "artistId",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "title",
                                ),
                            ),
                        },
                    },
                },
                type_input_permissions: {},
                relationship_fields: {},
                type_mappings: DataConnectorTypeMappingsForObject {
                    mappings: {
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                        }: {
                            DataConnectorObjectType(
                                "album",
                            ): Object {
                                ndc_object_type_name: DataConnectorObjectType(
                                    "album",
                                ),
                                field_mappings: {
                                    FieldName(
                                        Identifier(
                                            "albumId",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "album_id",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "int4",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            Int32,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "avg",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_and",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_or",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_xor",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "sum",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "variance",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "artistId",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "artist_id",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "int4",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            Int32,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "avg",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_and",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_or",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_xor",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "sum",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "variance",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "title",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "title",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "varchar",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            String,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_ilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_iregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_like",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_niregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nlike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_regex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "starts_with",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "ts_match_tt",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                },
                            },
                        },
                    },
                },
            },
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CustomTypeName(
                    Identifier(
                        "Disc",
                    ),
                ),
            }: ObjectTypeWithRelationships {
                object_type: ObjectTypeRepresentation {
                    fields: {
                        FieldName(
                            Identifier(
                                "name",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Varchar",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "lengthMins",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Int4",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                    },
                    global_id_fields: [],
                    apollo_federation_config: None,
                    graphql_output_type_name: Some(
                        TypeName(
                            Name(
                                "Disc",
                            ),
                        ),
                    ),
                    graphql_input_type_name: Some(
                        TypeName(
                            Name(
                                "DiscInput",
                            ),
                        ),
                    ),
                    description: None,
                },
                type_output_permissions: {
                    Role(
                        "admin",
                    ): TypeOutputPermission {
                        allowed_fields: {
                            FieldName(
                                Identifier(
                                    "name",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "lengthMins",
                                ),
                            ),
                        },
                    },
                },
                type_input_permissions: {
                    Role(
                        "admin",
                    ): TypeInputPermission {
                        field_presets: {
                            FieldName(
                                Identifier(
                                    "lengthMins",
                                ),
                            ): FieldPresetInfo {
                                value: Literal(
                                    Number(70),
                                ),
                                deprecated: None,
                            },
                        },
                    },
                },
                relationship_fields: {},
                type_mappings: DataConnectorTypeMappingsForObject {
                    mappings: {
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                        }: {
                            DataConnectorObjectType(
                                "disc",
                            ): Object {
                                ndc_object_type_name: DataConnectorObjectType(
                                    "disc",
                                ),
                                field_mappings: {
                                    FieldName(
                                        Identifier(
                                            "lengthMins",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "length_mins",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "int4",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            Int32,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "avg",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_and",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_or",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_xor",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "sum",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "variance",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "name",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "name",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "varchar",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            String,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_ilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_iregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_like",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_niregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nlike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_regex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "starts_with",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "ts_match_tt",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                },
                            },
                        },
                    },
                },
            },
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CustomTypeName(
                    Identifier(
                        "InsertAlbumObject",
                    ),
                ),
            }: ObjectTypeWithRelationships {
                object_type: ObjectTypeRepresentation {
                    fields: {
                        FieldName(
                            Identifier(
                                "albumId",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Int4",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "artistId",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Int4",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "title",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Varchar",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "recordLabel",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "RecordLabel",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: true,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "discs",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: List(
                                    QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Disc",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                ),
                                nullable: true,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                    },
                    global_id_fields: [],
                    apollo_federation_config: None,
                    graphql_output_type_name: Some(
                        TypeName(
                            Name(
                                "InsertAlbumObject",
                            ),
                        ),
                    ),
                    graphql_input_type_name: Some(
                        TypeName(
                            Name(
                                "InsertAlbumObjectInput",
                            ),
                        ),
                    ),
                    description: None,
                },
                type_output_permissions: {
                    Role(
                        "admin",
                    ): TypeOutputPermission {
                        allowed_fields: {
                            FieldName(
                                Identifier(
                                    "albumId",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "artistId",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "title",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "discs",
                                ),
                            ),
                        },
                    },
                },
                type_input_permissions: {
                    Role(
                        "admin",
                    ): TypeInputPermission {
                        field_presets: {
                            FieldName(
                                Identifier(
                                    "artistId",
                                ),
                            ): FieldPresetInfo {
                                value: SessionVariable(
                                    SessionVariableReference {
                                        name: SessionVariableName(
                                            "x-hasura-artist-id",
                                        ),
                                        passed_as_json: true,
                                        disallow_unknown_fields: false,
                                    },
                                ),
                                deprecated: None,
                            },
                        },
                    },
                },
                relationship_fields: {},
                type_mappings: DataConnectorTypeMappingsForObject {
                    mappings: {
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                        }: {
                            DataConnectorObjectType(
                                "insert_album_object",
                            ): Object {
                                ndc_object_type_name: DataConnectorObjectType(
                                    "insert_album_object",
                                ),
                                field_mappings: {
                                    FieldName(
                                        Identifier(
                                            "albumId",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "album_id",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "int4",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            Int32,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "avg",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_and",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_or",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_xor",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "sum",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "variance",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "artistId",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "artist_id",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "int4",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            Int32,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "avg",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_and",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_or",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_xor",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "sum",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "variance",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "discs",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "discs",
                                        ),
                                        column_type: Nullable {
                                            underlying_type: Array {
                                                element_type: Named {
                                                    name: TypeName(
                                                        "disc",
                                                    ),
                                                },
                                            },
                                        },
                                        column_type_representation: None,
                                        comparison_operators: None,
                                        aggregate_functions: None,
                                        extraction_functions: None,
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "recordLabel",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "record_label",
                                        ),
                                        column_type: Nullable {
                                            underlying_type: Named {
                                                name: TypeName(
                                                    "record_label",
                                                ),
                                            },
                                        },
                                        column_type_representation: None,
                                        comparison_operators: None,
                                        aggregate_functions: None,
                                        extraction_functions: None,
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "title",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "title",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "varchar",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            String,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_ilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_iregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_like",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_niregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nlike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_regex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "starts_with",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "ts_match_tt",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                },
                            },
                        },
                    },
                },
            },
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CustomTypeName(
                    Identifier(
                        "InsertAlbumResponse",
                    ),
                ),
            }: ObjectTypeWithRelationships {
                object_type: ObjectTypeRepresentation {
                    fields: {
                        FieldName(
                            Identifier(
                                "affectedRows",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Int4",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: Some(
                                "The number of rows affected by the mutation",
                            ),
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "returning",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: List(
                                    QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Album",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                ),
                                nullable: false,
                            },
                            description: Some(
                                "Data from rows affected by the mutation",
                            ),
                            deprecated: None,
                            field_arguments: {},
                        },
                    },
                    global_id_fields: [],
                    apollo_federation_config: None,
                    graphql_output_type_name: Some(
                        TypeName(
                            Name(
                                "InsertAlbumResponse",
                            ),
                        ),
                    ),
                    graphql_input_type_name: Some(
                        TypeName(
                            Name(
                                "InsertAlbumResponseInput",
                            ),
                        ),
                    ),
                    description: Some(
                        "Responses from the 'insert_album' procedure",
                    ),
                },
                type_output_permissions: {
                    Role(
                        "admin",
                    ): TypeOutputPermission {
                        allowed_fields: {
                            FieldName(
                                Identifier(
                                    "affectedRows",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "returning",
                                ),
                            ),
                        },
                    },
                },
                type_input_permissions: {},
                relationship_fields: {},
                type_mappings: DataConnectorTypeMappingsForObject {
                    mappings: {
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                        }: {
                            DataConnectorObjectType(
                                "insert_album_response",
                            ): Object {
                                ndc_object_type_name: DataConnectorObjectType(
                                    "insert_album_response",
                                ),
                                field_mappings: {
                                    FieldName(
                                        Identifier(
                                            "affectedRows",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "affected_rows",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "int4",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            Int32,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "avg",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_and",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_or",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bit_xor",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "stddev_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "sum",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_pop",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "var_samp",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "variance",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "returning",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "returning",
                                        ),
                                        column_type: Array {
                                            element_type: Named {
                                                name: TypeName(
                                                    "album",
                                                ),
                                            },
                                        },
                                        column_type_representation: None,
                                        comparison_operators: None,
                                        aggregate_functions: None,
                                        extraction_functions: None,
                                        argument_mappings: {},
                                    },
                                },
                            },
                        },
                    },
                },
            },
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CustomTypeName(
                    Identifier(
                        "RecordLabel",
                    ),
                ),
            }: ObjectTypeWithRelationships {
                object_type: ObjectTypeRepresentation {
                    fields: {
                        FieldName(
                            Identifier(
                                "name",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Varchar",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                        FieldName(
                            Identifier(
                                "exclusiveRights",
                            ),
                        ): FieldDefinition {
                            field_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Inbuilt(
                                        Boolean,
                                    ),
                                ),
                                nullable: false,
                            },
                            description: None,
                            deprecated: None,
                            field_arguments: {},
                        },
                    },
                    global_id_fields: [],
                    apollo_federation_config: None,
                    graphql_output_type_name: Some(
                        TypeName(
                            Name(
                                "RecordLabel",
                            ),
                        ),
                    ),
                    graphql_input_type_name: Some(
                        TypeName(
                            Name(
                                "RecordLabelInput",
                            ),
                        ),
                    ),
                    description: None,
                },
                type_output_permissions: {
                    Role(
                        "admin",
                    ): TypeOutputPermission {
                        allowed_fields: {
                            FieldName(
                                Identifier(
                                    "name",
                                ),
                            ),
                            FieldName(
                                Identifier(
                                    "exclusiveRights",
                                ),
                            ),
                        },
                    },
                },
                type_input_permissions: {
                    Role(
                        "admin",
                    ): TypeInputPermission {
                        field_presets: {
                            FieldName(
                                Identifier(
                                    "exclusiveRights",
                                ),
                            ): FieldPresetInfo {
                                value: Literal(
                                    Bool(true),
                                ),
                                deprecated: None,
                            },
                        },
                    },
                },
                relationship_fields: {},
                type_mappings: DataConnectorTypeMappingsForObject {
                    mappings: {
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                        }: {
                            DataConnectorObjectType(
                                "record_label",
                            ): Object {
                                ndc_object_type_name: DataConnectorObjectType(
                                    "record_label",
                                ),
                                field_mappings: {
                                    FieldName(
                                        Identifier(
                                            "exclusiveRights",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "exclusive_rights",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "bool",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            Boolean,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "bool_and",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "bool_or",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "every",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                    FieldName(
                                        Identifier(
                                            "name",
                                        ),
                                    ): FieldMapping {
                                        column: DataConnectorColumnName(
                                            "name",
                                        ),
                                        column_type: Named {
                                            name: TypeName(
                                                "varchar",
                                            ),
                                        },
                                        column_type_representation: Some(
                                            String,
                                        ),
                                        comparison_operators: Some(
                                            ComparisonOperators {
                                                eq_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_eq",
                                                    ),
                                                ),
                                                in_operator: Some(
                                                    DataConnectorOperatorName(
                                                        "_in",
                                                    ),
                                                ),
                                                lt_operator: None,
                                                lte_operator: None,
                                                gt_operator: None,
                                                gte_operator: None,
                                                contains_operator: None,
                                                icontains_operator: None,
                                                starts_with_operator: None,
                                                istarts_with_operator: None,
                                                ends_with_operator: None,
                                                iends_with_operator: None,
                                                other_operators: [
                                                    DataConnectorOperatorName(
                                                        "_gt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_gte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_ilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_iregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_like",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lt",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_lte",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_neq",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nilike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_niregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nlike",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_nregex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "_regex",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "starts_with",
                                                    ),
                                                    DataConnectorOperatorName(
                                                        "ts_match_tt",
                                                    ),
                                                ],
                                            },
                                        ),
                                        aggregate_functions: Some(
                                            AggregateFunctions {
                                                sum_function: None,
                                                min_function: None,
                                                max_function: None,
                                                avg_function: None,
                                                other_functions: [
                                                    DataConnectorAggregationFunctionName(
                                                        "max",
                                                    ),
                                                    DataConnectorAggregationFunctionName(
                                                        "min",
                                                    ),
                                                ],
                                            },
                                        ),
                                        extraction_functions: Some(
                                            ExtractionFunctions {
                                                year_function: None,
                                                month_function: None,
                                                day_function: None,
                                                nanosecond_function: None,
                                                microsecond_function: None,
                                                second_function: None,
                                                minute_function: None,
                                                hour_function: None,
                                                week_function: None,
                                                quarter_function: None,
                                                day_of_week_function: None,
                                                day_of_year_function: None,
                                                other_functions: [],
                                            },
                                        ),
                                        argument_mappings: {},
                                    },
                                },
                            },
                        },
                    },
                },
            },
        },
        scalar_types: {
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CustomTypeName(
                    Identifier(
                        "Int4",
                    ),
                ),
            }: ScalarTypeRepresentation {
                graphql_type_name: Some(
                    TypeName(
                        Name(
                            "Int4",
                        ),
                    ),
                ),
                description: None,
                representations: {
                    Qualified {
                        subgraph: SubgraphName(
                            "default",
                        ),
                        name: DataConnectorName(
                            Identifier(
                                "pg",
                            ),
                        ),
                    }: Int32,
                },
            },
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CustomTypeName(
                    Identifier(
                        "Varchar",
                    ),
                ),
            }: ScalarTypeRepresentation {
                graphql_type_name: Some(
                    TypeName(
                        Name(
                            "Varchar",
                        ),
                    ),
                ),
                description: None,
                representations: {
                    Qualified {
                        subgraph: SubgraphName(
                            "default",
                        ),
                        name: DataConnectorName(
                            Identifier(
                                "pg",
                            ),
                        ),
                    }: String,
                },
            },
        },
        models: {},
        commands: {
            Qualified {
                subgraph: SubgraphName(
                    "default",
                ),
                name: CommandName(
                    Identifier(
                        "InsertAlbum",
                    ),
                ),
            }: CommandWithPermissions {
                command: Command {
                    name: Qualified {
                        subgraph: SubgraphName(
                            "default",
                        ),
                        name: CommandName(
                            Identifier(
                                "InsertAlbum",
                            ),
                        ),
                    },
                    output_type: QualifiedTypeReference {
                        underlying_type: Named(
                            Custom(
                                Qualified {
                                    subgraph: SubgraphName(
                                        "default",
                                    ),
                                    name: CustomTypeName(
                                        Identifier(
                                            "InsertAlbumResponse",
                                        ),
                                    ),
                                },
                            ),
                        ),
                        nullable: false,
                    },
                    arguments: {
                        ArgumentName(
                            Identifier(
                                "objects",
                            ),
                        ): ArgumentInfo {
                            argument_type: QualifiedTypeReference {
                                underlying_type: List(
                                    QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "InsertAlbumObject",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                ),
                                nullable: false,
                            },
                            description: None,
                            argument_kind: Other,
                        },
                        ArgumentName(
                            Identifier(
                                "postCheck",
                            ),
                        ): ArgumentInfo {
                            argument_type: QualifiedTypeReference {
                                underlying_type: Named(
                                    Custom(
                                        Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "AlbumBoolExp",
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                                nullable: true,
                            },
                            description: Some(
                                "Insert permission predicate over the 'album' collection",
                            ),
                            argument_kind: NDCExpression,
                        },
                    },
                    graphql_api: Some(
                        CommandGraphQlApi {
                            root_field_kind: Mutation,
                            root_field_name: Name(
                                "insertAlbum",
                            ),
                            deprecated: None,
                        },
                    ),
                    source: Some(
                        CommandSource {
                            data_connector: DataConnectorLink {
                                name: Qualified {
                                    subgraph: SubgraphName(
                                        "default",
                                    ),
                                    name: DataConnectorName(
                                        Identifier(
                                            "pg",
                                        ),
                                    ),
                                },
                                url: ReadWriteUrls(
                                    ResolvedReadWriteUrls {
                                        read: SerializableUrl(
                                            Url {
                                                scheme: "http",
                                                cannot_be_a_base: false,
                                                username: "",
                                                password: None,
                                                host: Some(
                                                    Domain(
                                                        "local.hasura.dev",
                                                    ),
                                                ),
                                                port: Some(
                                                    8080,
                                                ),
                                                path: "/",
                                                query: None,
                                                fragment: None,
                                            },
                                        ),
                                        write: SerializableUrl(
                                            Url {
                                                scheme: "http",
                                                cannot_be_a_base: false,
                                                username: "",
                                                password: None,
                                                host: Some(
                                                    Domain(
                                                        "local.hasura.dev",
                                                    ),
                                                ),
                                                port: Some(
                                                    8080,
                                                ),
                                                path: "/",
                                                query: None,
                                                fragment: None,
                                            },
                                        ),
                                    },
                                ),
                                headers: SerializableHeaderMap(
                                    {
                                        "authorization": "Bearer RPDvzYG6hYoZGJxtIRdD8g==",
                                    },
                                ),
                                response_config: None,
                                capabilities: DataConnectorCapabilities {
                                    supported_ndc_version: V01,
                                    supports_explaining_queries: true,
                                    supports_explaining_mutations: true,
                                    supports_nested_object_filtering: true,
                                    supports_nested_object_ordering: true,
                                    supports_nested_object_array_filtering: true,
                                    supports_nested_scalar_array_filtering: false,
                                    supports_aggregates: Some(
                                        DataConnectorAggregateCapabilities {
                                            supports_nested_object_aggregations: false,
                                            aggregate_count_scalar_type: None,
                                            supports_grouping: None,
                                        },
                                    ),
                                    supports_query_variables: true,
                                    supports_relationships: Some(
                                        DataConnectorRelationshipCapabilities {
                                            supports_relation_comparisons: true,
                                            supports_nested_relationships: Some(
                                                DataConnectorNestedRelationshipCapabilities {
                                                    supports_nested_array_selection: true,
                                                    supports_nested_in_filtering: false,
                                                    supports_nested_in_ordering: false,
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                            source: Procedure(
                                ProcedureName(
                                    "insert_album",
                                ),
                            ),
                            ndc_type_opendd_type_same: true,
                            type_mappings: {
                                Qualified {
                                    subgraph: SubgraphName(
                                        "default",
                                    ),
                                    name: CustomTypeName(
                                        Identifier(
                                            "Album",
                                        ),
                                    ),
                                }: Object {
                                    ndc_object_type_name: DataConnectorObjectType(
                                        "album",
                                    ),
                                    field_mappings: {
                                        FieldName(
                                            Identifier(
                                                "albumId",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "album_id",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "int4",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                Int32,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "avg",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_and",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_or",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_xor",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "sum",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "variance",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "artistId",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "artist_id",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "int4",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                Int32,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "avg",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_and",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_or",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_xor",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "sum",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "variance",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "title",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "title",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "varchar",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                String,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_ilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_iregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_like",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_niregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nlike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_regex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "starts_with",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "ts_match_tt",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                    },
                                },
                                Qualified {
                                    subgraph: SubgraphName(
                                        "default",
                                    ),
                                    name: CustomTypeName(
                                        Identifier(
                                            "Disc",
                                        ),
                                    ),
                                }: Object {
                                    ndc_object_type_name: DataConnectorObjectType(
                                        "disc",
                                    ),
                                    field_mappings: {
                                        FieldName(
                                            Identifier(
                                                "lengthMins",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "length_mins",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "int4",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                Int32,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "avg",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_and",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_or",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_xor",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "sum",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "variance",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "name",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "name",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "varchar",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                String,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_ilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_iregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_like",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_niregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nlike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_regex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "starts_with",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "ts_match_tt",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                    },
                                },
                                Qualified {
                                    subgraph: SubgraphName(
                                        "default",
                                    ),
                                    name: CustomTypeName(
                                        Identifier(
                                            "InsertAlbumObject",
                                        ),
                                    ),
                                }: Object {
                                    ndc_object_type_name: DataConnectorObjectType(
                                        "insert_album_object",
                                    ),
                                    field_mappings: {
                                        FieldName(
                                            Identifier(
                                                "albumId",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "album_id",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "int4",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                Int32,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "avg",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_and",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_or",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_xor",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "sum",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "variance",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "artistId",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "artist_id",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "int4",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                Int32,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "avg",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_and",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_or",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_xor",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "sum",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "variance",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "discs",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "discs",
                                            ),
                                            column_type: Nullable {
                                                underlying_type: Array {
                                                    element_type: Named {
                                                        name: TypeName(
                                                            "disc",
                                                        ),
                                                    },
                                                },
                                            },
                                            column_type_representation: None,
                                            comparison_operators: None,
                                            aggregate_functions: None,
                                            extraction_functions: None,
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "recordLabel",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "record_label",
                                            ),
                                            column_type: Nullable {
                                                underlying_type: Named {
                                                    name: TypeName(
                                                        "record_label",
                                                    ),
                                                },
                                            },
                                            column_type_representation: None,
                                            comparison_operators: None,
                                            aggregate_functions: None,
                                            extraction_functions: None,
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "title",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "title",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "varchar",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                String,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_ilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_iregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_like",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_niregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nlike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_regex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "starts_with",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "ts_match_tt",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                    },
                                },
                                Qualified {
                                    subgraph: SubgraphName(
                                        "default",
                                    ),
                                    name: CustomTypeName(
                                        Identifier(
                                            "InsertAlbumResponse",
                                        ),
                                    ),
                                }: Object {
                                    ndc_object_type_name: DataConnectorObjectType(
                                        "insert_album_response",
                                    ),
                                    field_mappings: {
                                        FieldName(
                                            Identifier(
                                                "affectedRows",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "affected_rows",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "int4",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                Int32,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "avg",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_and",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_or",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bit_xor",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "stddev_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "sum",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_pop",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "var_samp",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "variance",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "returning",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "returning",
                                            ),
                                            column_type: Array {
                                                element_type: Named {
                                                    name: TypeName(
                                                        "album",
                                                    ),
                                                },
                                            },
                                            column_type_representation: None,
                                            comparison_operators: None,
                                            aggregate_functions: None,
                                            extraction_functions: None,
                                            argument_mappings: {},
                                        },
                                    },
                                },
                                Qualified {
                                    subgraph: SubgraphName(
                                        "default",
                                    ),
                                    name: CustomTypeName(
                                        Identifier(
                                            "RecordLabel",
                                        ),
                                    ),
                                }: Object {
                                    ndc_object_type_name: DataConnectorObjectType(
                                        "record_label",
                                    ),
                                    field_mappings: {
                                        FieldName(
                                            Identifier(
                                                "exclusiveRights",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "exclusive_rights",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "bool",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                Boolean,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "bool_and",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "bool_or",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "every",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                        FieldName(
                                            Identifier(
                                                "name",
                                            ),
                                        ): FieldMapping {
                                            column: DataConnectorColumnName(
                                                "name",
                                            ),
                                            column_type: Named {
                                                name: TypeName(
                                                    "varchar",
                                                ),
                                            },
                                            column_type_representation: Some(
                                                String,
                                            ),
                                            comparison_operators: Some(
                                                ComparisonOperators {
                                                    eq_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_eq",
                                                        ),
                                                    ),
                                                    in_operator: Some(
                                                        DataConnectorOperatorName(
                                                            "_in",
                                                        ),
                                                    ),
                                                    lt_operator: None,
                                                    lte_operator: None,
                                                    gt_operator: None,
                                                    gte_operator: None,
                                                    contains_operator: None,
                                                    icontains_operator: None,
                                                    starts_with_operator: None,
                                                    istarts_with_operator: None,
                                                    ends_with_operator: None,
                                                    iends_with_operator: None,
                                                    other_operators: [
                                                        DataConnectorOperatorName(
                                                            "_gt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_gte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_ilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_iregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_like",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lt",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_lte",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_neq",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nilike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_niregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nlike",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_nregex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "_regex",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "starts_with",
                                                        ),
                                                        DataConnectorOperatorName(
                                                            "ts_match_tt",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            aggregate_functions: Some(
                                                AggregateFunctions {
                                                    sum_function: None,
                                                    min_function: None,
                                                    max_function: None,
                                                    avg_function: None,
                                                    other_functions: [
                                                        DataConnectorAggregationFunctionName(
                                                            "max",
                                                        ),
                                                        DataConnectorAggregationFunctionName(
                                                            "min",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            extraction_functions: Some(
                                                ExtractionFunctions {
                                                    year_function: None,
                                                    month_function: None,
                                                    day_function: None,
                                                    nanosecond_function: None,
                                                    microsecond_function: None,
                                                    second_function: None,
                                                    minute_function: None,
                                                    hour_function: None,
                                                    week_function: None,
                                                    quarter_function: None,
                                                    day_of_week_function: None,
                                                    day_of_year_function: None,
                                                    other_functions: [],
                                                },
                                            ),
                                            argument_mappings: {},
                                        },
                                    },
                                },
                            },
                            argument_mappings: {
                                ArgumentName(
                                    Identifier(
                                        "objects",
                                    ),
                                ): DataConnectorArgumentName(
                                    "objects",
                                ),
                                ArgumentName(
                                    Identifier(
                                        "postCheck",
                                    ),
                                ): DataConnectorArgumentName(
                                    "post_check",
                                ),
                            },
                            data_connector_link_argument_presets: {},
                            source_arguments: {
                                DataConnectorArgumentName(
                                    "objects",
                                ): Array {
                                    element_type: Named {
                                        name: TypeName(
                                            "insert_album_object",
                                        ),
                                    },
                                },
                                DataConnectorArgumentName(
                                    "post_check",
                                ): Nullable {
                                    underlying_type: Predicate {
                                        object_type_name: ObjectTypeName(
                                            TypeName(
                                                "album",
                                            ),
                                        ),
                                    },
                                },
                            },
                        },
                    ),
                    description: Some(
                        "Insert into the album table",
                    ),
                },
                permissions: {
                    Role(
                        "admin",
                    ): CommandPermission {
                        allow_execution: true,
                        argument_presets: {
                            ArgumentName(
                                Identifier(
                                    "postCheck",
                                ),
                            ): (
                                QualifiedTypeReference {
                                    underlying_type: Named(
                                        Custom(
                                            Qualified {
                                                subgraph: SubgraphName(
                                                    "default",
                                                ),
                                                name: CustomTypeName(
                                                    Identifier(
                                                        "AlbumBoolExp",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    nullable: true,
                                },
                                BooleanExpression(
                                    BinaryFieldComparison {
                                        field: FieldName(
                                            Identifier(
                                                "artistId",
                                            ),
                                        ),
                                        field_parent_type: Qualified {
                                            subgraph: SubgraphName(
                                                "default",
                                            ),
                                            name: CustomTypeName(
                                                Identifier(
                                                    "Album",
                                                ),
                                            ),
                                        },
                                        ndc_column: DataConnectorColumnName(
                                            "artist_id",
                                        ),
                                        operator: DataConnectorOperatorName(
                                            "_eq",
                                        ),
                                        argument_type: QualifiedTypeReference {
                                            underlying_type: Named(
                                                Custom(
                                                    Qualified {
                                                        subgraph: SubgraphName(
                                                            "default",
                                                        ),
                                                        name: CustomTypeName(
                                                            Identifier(
                                                                "Int4",
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                            nullable: false,
                                        },
                                        value: SessionVariable(
                                            SessionVariableReference {
                                                name: SessionVariableName(
                                                    "x-hasura-artist-id",
                                                ),
                                                passed_as_json: true,
                                                disallow_unknown_fields: false,
                                            },
                                        ),
                                        deprecated: None,
                                    },
                                ),
                            ),
                        },
                    },
                },
            },
        },
        boolean_expression_types: BooleanExpressionTypes {
            objects: {
                Qualified {
                    subgraph: SubgraphName(
                        "default",
                    ),
                    name: CustomTypeName(
                        Identifier(
                            "AlbumBoolExp",
                        ),
                    ),
                }: ResolvedObjectBooleanExpressionType {
                    name: Qualified {
                        subgraph: SubgraphName(
                            "default",
                        ),
                        name: CustomTypeName(
                            Identifier(
                                "AlbumBoolExp",
                            ),
                        ),
                    },
                    object_type: Qualified {
                        subgraph: SubgraphName(
                            "default",
                        ),
                        name: CustomTypeName(
                            Identifier(
                                "Album",
                            ),
                        ),
                    },
                    graphql: Some(
                        BooleanExpressionGraphqlConfig {
                            type_name: TypeName(
                                Name(
                                    "AlbumBoolExp",
                                ),
                            ),
                            object_fields: {},
                            scalar_fields: {
                                FieldName(
                                    Identifier(
                                        "albumId",
                                    ),
                                ): ScalarBooleanExpressionGraphqlConfig {
                                    type_name: TypeName(
                                        Name(
                                            "Int4BoolExp",
                                        ),
                                    ),
                                    is_null_operator_name: Some(
                                        Name(
                                            "_is_null",
                                        ),
                                    ),
                                },
                                FieldName(
                                    Identifier(
                                        "artistId",
                                    ),
                                ): ScalarBooleanExpressionGraphqlConfig {
                                    type_name: TypeName(
                                        Name(
                                            "Int4BoolExp",
                                        ),
                                    ),
                                    is_null_operator_name: Some(
                                        Name(
                                            "_is_null",
                                        ),
                                    ),
                                },
                                FieldName(
                                    Identifier(
                                        "title",
                                    ),
                                ): ScalarBooleanExpressionGraphqlConfig {
                                    type_name: TypeName(
                                        Name(
                                            "VarcharBoolExp",
                                        ),
                                    ),
                                    is_null_operator_name: Some(
                                        Name(
                                            "_is_null",
                                        ),
                                    ),
                                },
                            },
                            field_config: BooleanExpressionGraphqlFieldConfig {
                                where_field_name: Name(
                                    "where",
                                ),
                                logical_operators: LogicalOperatorsGraphqlConfig {
                                    and_operator_name: Name(
                                        "_and",
                                    ),
                                    or_operator_name: Name(
                                        "_or",
                                    ),
                                    not_operator_name: Name(
                                        "_not",
                                    ),
                                },
                            },
                        },
                    ),
                    fields: ResolvedObjectBooleanExpressionTypeFields {
                        object_fields: {},
                        scalar_fields: {
                            FieldName(
                                Identifier(
                                    "albumId",
                                ),
                            ): ComparisonExpressionInfo {
                                boolean_expression_type_name: FromBooleanExpressionType(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4BoolExp",
                                            ),
                                        ),
                                    },
                                ),
                                operators: {
                                    OperatorName(
                                        "_eq",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_gt",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_gte",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_in",
                                    ): QualifiedTypeReference {
                                        underlying_type: List(
                                            QualifiedTypeReference {
                                                underlying_type: Named(
                                                    Custom(
                                                        Qualified {
                                                            subgraph: SubgraphName(
                                                                "default",
                                                            ),
                                                            name: CustomTypeName(
                                                                Identifier(
                                                                    "Int4",
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ),
                                                nullable: false,
                                            },
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_lt",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_lte",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_neq",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                },
                                operator_mapping: {
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: DataConnectorName(
                                            Identifier(
                                                "pg",
                                            ),
                                        ),
                                    }: OperatorMapping(
                                        {},
                                    ),
                                },
                                logical_operators: Include {
                                    graphql: Some(
                                        LogicalOperatorsGraphqlConfig {
                                            and_operator_name: Name(
                                                "_and",
                                            ),
                                            or_operator_name: Name(
                                                "_or",
                                            ),
                                            not_operator_name: Name(
                                                "_not",
                                            ),
                                        },
                                    ),
                                },
                                field_kind: Scalar,
                            },
                            FieldName(
                                Identifier(
                                    "artistId",
                                ),
                            ): ComparisonExpressionInfo {
                                boolean_expression_type_name: FromBooleanExpressionType(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4BoolExp",
                                            ),
                                        ),
                                    },
                                ),
                                operators: {
                                    OperatorName(
                                        "_eq",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_gt",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_gte",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_in",
                                    ): QualifiedTypeReference {
                                        underlying_type: List(
                                            QualifiedTypeReference {
                                                underlying_type: Named(
                                                    Custom(
                                                        Qualified {
                                                            subgraph: SubgraphName(
                                                                "default",
                                                            ),
                                                            name: CustomTypeName(
                                                                Identifier(
                                                                    "Int4",
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ),
                                                nullable: false,
                                            },
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_lt",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_lte",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_neq",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Int4",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                },
                                operator_mapping: {
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: DataConnectorName(
                                            Identifier(
                                                "pg",
                                            ),
                                        ),
                                    }: OperatorMapping(
                                        {},
                                    ),
                                },
                                logical_operators: Include {
                                    graphql: Some(
                                        LogicalOperatorsGraphqlConfig {
                                            and_operator_name: Name(
                                                "_and",
                                            ),
                                            or_operator_name: Name(
                                                "_or",
                                            ),
                                            not_operator_name: Name(
                                                "_not",
                                            ),
                                        },
                                    ),
                                },
                                field_kind: Scalar,
                            },
                            FieldName(
                                Identifier(
                                    "title",
                                ),
                            ): ComparisonExpressionInfo {
                                boolean_expression_type_name: FromBooleanExpressionType(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "VarcharBoolExp",
                                            ),
                                        ),
                                    },
                                ),
                                operators: {
                                    OperatorName(
                                        "_eq",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_gt",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_gte",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_ilike",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_in",
                                    ): QualifiedTypeReference {
                                        underlying_type: List(
                                            QualifiedTypeReference {
                                                underlying_type: Named(
                                                    Custom(
                                                        Qualified {
                                                            subgraph: SubgraphName(
                                                                "default",
                                                            ),
                                                            name: CustomTypeName(
                                                                Identifier(
                                                                    "Varchar",
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ),
                                                nullable: false,
                                            },
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_iregex",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_like",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_lt",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_lte",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_neq",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_nilike",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_niregex",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_nlike",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_nregex",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "_regex",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "starts_with",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                    OperatorName(
                                        "ts_match_tt",
                                    ): QualifiedTypeReference {
                                        underlying_type: Named(
                                            Custom(
                                                Qualified {
                                                    subgraph: SubgraphName(
                                                        "default",
                                                    ),
                                                    name: CustomTypeName(
                                                        Identifier(
                                                            "Varchar",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        nullable: false,
                                    },
                                },
                                operator_mapping: {
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: DataConnectorName(
                                            Identifier(
                                                "pg",
                                            ),
                                        ),
                                    }: OperatorMapping(
                                        {},
                                    ),
                                },
                                logical_operators: Include {
                                    graphql: Some(
                                        LogicalOperatorsGraphqlConfig {
                                            and_operator_name: Name(
                                                "_and",
                                            ),
                                            or_operator_name: Name(
                                                "_or",
                                            ),
                                            not_operator_name: Name(
                                                "_not",
                                            ),
                                        },
                                    ),
                                },
                                field_kind: Scalar,
                            },
                        },
                        relationship_fields: {},
                    },
                    include_logical_operators: Yes,
                    data_connector: None,
                },
            },
            scalars: {
                FromBooleanExpressionType(
                    Qualified {
                        subgraph: SubgraphName(
                            "default",
                        ),
                        name: CustomTypeName(
                            Identifier(
                                "Int4BoolExp",
                            ),
                        ),
                    },
                ): ResolvedScalarBooleanExpressionType {
                    operand_type: Custom(
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: CustomTypeName(
                                Identifier(
                                    "Int4",
                                ),
                            ),
                        },
                    ),
                    comparison_operators: {
                        OperatorName(
                            "_eq",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_gt",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_gte",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_in",
                        ): QualifiedTypeReference {
                            underlying_type: List(
                                QualifiedTypeReference {
                                    underlying_type: Named(
                                        Custom(
                                            Qualified {
                                                subgraph: SubgraphName(
                                                    "default",
                                                ),
                                                name: CustomTypeName(
                                                    Identifier(
                                                        "Int4",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    nullable: false,
                                },
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_lt",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_lte",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_neq",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Int4",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                    },
                    data_connector_operator_mappings: {
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                        }: DataConnectorOperatorMapping {
                            data_connector_name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                            data_connector_scalar_type: DataConnectorScalarType(
                                "int4",
                            ),
                            operator_mapping: {},
                        },
                    },
                    graphql_name: Some(
                        GraphQlTypeName(
                            "Int4BoolExp",
                        ),
                    ),
                    logical_operators: Include {
                        graphql: Some(
                            LogicalOperatorsGraphqlConfig {
                                and_operator_name: Name(
                                    "_and",
                                ),
                                or_operator_name: Name(
                                    "_or",
                                ),
                                not_operator_name: Name(
                                    "_not",
                                ),
                            },
                        ),
                    },
                    is_null_operator: Include {
                        graphql: Some(
                            IsNullOperatorGraphqlConfig {
                                is_null_operator_name: Name(
                                    "_is_null",
                                ),
                            },
                        ),
                    },
                },
                FromBooleanExpressionType(
                    Qualified {
                        subgraph: SubgraphName(
                            "default",
                        ),
                        name: CustomTypeName(
                            Identifier(
                                "VarcharBoolExp",
                            ),
                        ),
                    },
                ): ResolvedScalarBooleanExpressionType {
                    operand_type: Custom(
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: CustomTypeName(
                                Identifier(
                                    "Varchar",
                                ),
                            ),
                        },
                    ),
                    comparison_operators: {
                        OperatorName(
                            "_eq",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_gt",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_gte",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_ilike",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_in",
                        ): QualifiedTypeReference {
                            underlying_type: List(
                                QualifiedTypeReference {
                                    underlying_type: Named(
                                        Custom(
                                            Qualified {
                                                subgraph: SubgraphName(
                                                    "default",
                                                ),
                                                name: CustomTypeName(
                                                    Identifier(
                                                        "Varchar",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    nullable: false,
                                },
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_iregex",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_like",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_lt",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_lte",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_neq",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_nilike",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_niregex",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_nlike",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_nregex",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "_regex",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "starts_with",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                        OperatorName(
                            "ts_match_tt",
                        ): QualifiedTypeReference {
                            underlying_type: Named(
                                Custom(
                                    Qualified {
                                        subgraph: SubgraphName(
                                            "default",
                                        ),
                                        name: CustomTypeName(
                                            Identifier(
                                                "Varchar",
                                            ),
                                        ),
                                    },
                                ),
                            ),
                            nullable: false,
                        },
                    },
                    data_connector_operator_mappings: {
                        Qualified {
                            subgraph: SubgraphName(
                                "default",
                            ),
                            name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                        }: DataConnectorOperatorMapping {
                            data_connector_name: DataConnectorName(
                                Identifier(
                                    "pg",
                                ),
                            ),
                            data_connector_scalar_type: DataConnectorScalarType(
                                "varchar",
                            ),
                            operator_mapping: {},
                        },
                    },
                    graphql_name: Some(
                        GraphQlTypeName(
                            "VarcharBoolExp",
                        ),
                    ),
                    logical_operators: Include {
                        graphql: Some(
                            LogicalOperatorsGraphqlConfig {
                                and_operator_name: Name(
                                    "_and",
                                ),
                                or_operator_name: Name(
                                    "_or",
                                ),
                                not_operator_name: Name(
                                    "_not",
                                ),
                            },
                        ),
                    },
                    is_null_operator: Include {
                        graphql: Some(
                            IsNullOperatorGraphqlConfig {
                                is_null_operator_name: Name(
                                    "_is_null",
                                ),
                            },
                        ),
                    },
                },
            },
            object_aggregates: {},
            scalar_aggregates: {},
        },
        order_by_expressions: OrderByExpressions {
            objects: {},
            scalars: {},
        },
        aggregate_expressions: {},
        graphql_config: GlobalGraphqlConfig {
            query_root_type_name: TypeName(
                Name(
                    "Query",
                ),
            ),
            mutation_root_type_name: TypeName(
                Name(
                    "Mutation",
                ),
            ),
            subscription_root_type_name: None,
            order_by_input: Some(
                OrderByInputGraphqlConfig {
                    asc_direction_field_value: Name(
                        "Asc",
                    ),
                    desc_direction_field_value: Name(
                        "Desc",
                    ),
                    enum_type_name: TypeName(
                        Name(
                            "order_by",
                        ),
                    ),
                },
            ),
            enable_apollo_federation_fields: false,
            bypass_relation_comparisons_ndc_capability: true,
            propagate_boolean_expression_deprecation_status: true,
            multiple_order_by_input_object_fields: Disallow,
        },
        plugin_configs: LifecyclePluginConfigs {
            pre_parse_plugins: [],
            pre_response_plugins: [],
            pre_route_plugins: [],
        },
        roles: {
            Role(
                "admin",
            ),
        },
    },
    [],
)
