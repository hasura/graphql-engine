.. meta::
   :description: Use hasura metadata export to export Hasura metadata from the database with the Hasura CLI
   :keywords: hasura, docs, CLI, hasura metadata export

.. _hasura_metadata_export:

Hasura CLI: hasura metadata export
----------------------------------

Export Hasura GraphQL engine metadata from the database

Synopsis
~~~~~~~~


Export Hasura metadata and save it in the ``migrations/metadata.yaml`` file.
The output is a yaml file which captures all the metadata required
by the GraphQL engine. This includes info about tables that are tracked,
permission rules, relationships and event triggers that are defined
on those tables.

::

  hasura metadata export [flags]

Examples
~~~~~~~~

::

    # Export metadata and save it in migrations/metadata.yaml file:
    hasura metadata export

    # Use with admin secret:
    hasura metadata export --admin-secret "<admin-secret>"

    # Export metadata to another instance specified by the flag:
    hasura metadata export --endpoint "<endpoint>"

Options
~~~~~~~

::

  -h, --help   help for export

Options inherited from parent commands
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

      --admin-secret string            admin secret for Hasura GraphQL Engine
      --certificate-authority string   path to a cert file for the certificate authority
      --endpoint string                http(s) endpoint for Hasura GraphQL engine 
      --envfile string                 .env filename to load ENV vars from (default ".env")
      --insecure-skip-tls-verify       skip TLS verification and disable cert checking (default: false)
      --log-level string               log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")
      --no-color                       do not colorize output (default: false)
      --project string                 directory where commands are executed (default: current dir)
      --skip-update-check              Skip automatic update check on command execution

SEE ALSO
~~~~~~~~

* :ref:`hasura metadata <hasura_metadata>` 	 - Manage Hasura GraphQL engine metadata saved in the database

*Auto generated by spf13/cobra*
