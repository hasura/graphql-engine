{
  "version": "v2",
  "supergraph": {
    "objects": [
      {
        "kind": "GraphqlConfig",
        "version": "v1",
        "definition": {
          "query": {
            "rootOperationTypeName": "Query",
            "argumentsInput": {
              "fieldName": "args"
            },
            "limitInput": {
              "fieldName": "limit"
            },
            "offsetInput": {
              "fieldName": "offset"
            },
            "filterInput": {
              "fieldName": "where",
              "operatorNames": {
                "and": "_and",
                "or": "_or",
                "not": "_not",
                "isNull": "_is_null"
              }
            },
            "orderByInput": {
              "fieldName": "order_by",
              "enumDirectionValues": {
                "asc": "Asc",
                "desc": "Desc"
              },
              "enumTypeNames": [
                {
                  "directions": ["Asc", "Desc"],
                  "typeName": "OrderByAscDesc"
                }
              ]
            }
          },
          "mutation": {
            "rootOperationTypeName": "Mutation"
          },
          "apolloFederation": {
            "enableRootFields": false
          }
        }
      }
    ]
  },
  "subgraphs": [
    {
      "name": "default",
      "objects": [
        {
          "kind": "DataConnectorLink",
          "version": "v1",
          "definition": {
            "name": "db",
            "url": {
              "singleUrl": {
                "value": "http://postgres-connector:8080"
              }
            },
            "schema": {
              "version": "v0.1",
              "schema": {
                "scalar_types": {
                  "varchar": {
                    "aggregate_functions": {},
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_like": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_ilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nlike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_regex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_iregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_niregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    },
                    "update_operators": {}
                  },
                  "int4": {
                    "aggregate_functions": {
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    },
                    "update_operators": {}
                  }
                },
                "object_types": {
                  "Artist": {
                    "description": "An artist",
                    "fields": {
                      "ArtistId": {
                        "description": "The artist's primary key",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "description": "The artist's name",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "Artist_response": {
                    "description": "Responses from the 'insert_artist' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "arguments": {},
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Artist"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId_response": {
                    "description": "Responses from the 'v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "PlaylistTrack"
                          }
                        }
                      }
                    }
                  },
                  "Album": {
                    "description": "An album",
                    "fields": {
                      "AlbumId": {
                        "description": "The album's primary key",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Title": {
                        "description": "The album's title",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "ArtistId": {
                        "description": "The album's artist ID",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "Album_response": {
                    "description": "Responses from the 'insert_album' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "arguments": {},
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Album"
                          }
                        }
                      }
                    }
                  },
                  "Track": {
                    "description": "A track",
                    "fields": {
                      "TrackId": {
                        "description": "The track's primary key",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "description": "The track's name",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "AlbumId": {
                        "description": "The track's album ID",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "PlaylistTrack": {
                    "description": "A playlist track",
                    "fields": {
                      "PlaylistId": {
                        "description": "Identifier for the playlist",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "TrackId": {
                        "description": "Identifier for the track",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "artist_below_id": {
                    "description": "An artist",
                    "fields": {
                      "ArtistId": {
                        "description": "The artist's primary key",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "description": "The artist's name",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "v2_insert_Artist_object": {
                    "fields": {
                      "ArtistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Artist_response": {
                    "description": "Responses from the 'v2_insert_Artist' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Artist"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Artist_by_ArtistId_response": {
                    "description": "Responses from the 'v2_update_Artist_by_ArtistId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Artist"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Artist_by_ArtistId_update_columns": {
                    "description": "Update the columns of the 'Artist' collection",
                    "fields": {
                      "ArtistId": {
                        "description": "Update the 'ArtistId' column in the 'Artist' collection.",
                        "type": {
                          "type": "named",
                          "name": "update_column_Artist_ArtistId"
                        }
                      },
                      "Name": {
                        "description": "Update the 'Name' column in the 'Artist' collection.",
                        "type": {
                          "type": "named",
                          "name": "update_column_Artist_Name"
                        }
                      }
                    }
                  },
                  "update_column_Artist_ArtistId": {
                    "description": "Update the 'ArtistId' column in the 'Artist' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Artist_Name": {
                    "description": "Update the 'Name' column in the 'Artist' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  }
                },
                "collections": [
                  {
                    "name": "Artist",
                    "description": "A collection of artists",
                    "arguments": {},
                    "type": "Artist",
                    "deletable": false,
                    "uniqueness_constraints": {
                      "ArtistById": {
                        "unique_columns": ["ArtistId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "Album",
                    "description": "A collection of albums",
                    "arguments": {},
                    "type": "Album",
                    "deletable": false,
                    "uniqueness_constraints": {
                      "AlbumById": {
                        "unique_columns": ["AlbumId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "Track",
                    "description": "A collection of tracks",
                    "arguments": {},
                    "type": "Track",
                    "deletable": false,
                    "uniqueness_constraints": {
                      "TrackById": {
                        "unique_columns": ["TrackId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "PlaylistTrack",
                    "description": "A collection of playlist tracks",
                    "arguments": {},
                    "type": "PlaylistTrack",
                    "deletable": false,
                    "uniqueness_constraints": {
                      "PlaylistTrackByPlaylistIdAndTrackId": {
                        "unique_columns": ["PlaylistId", "TrackId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "artist_below_id",
                    "description": "A collection of artists below a certain id",
                    "arguments": {
                      "id": {
                        "description": "The ceiling id",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    },
                    "type": "Artist",
                    "deletable": false,
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  }
                ],
                "functions": [],
                "procedures": [
                  {
                    "name": "v2_insert_Artist",
                    "description": "Insert into the Artist table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Artist_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Artist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Artist"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Artist_response"
                    }
                  },
                  {
                    "name": "insert_album",
                    "description": "Insert an album",
                    "arguments": {
                      "artist_id": {
                        "description": "The id of the artist who owns the album",
                        "type": {
                          "type": "named",
                          "name": "Int!"
                        }
                      },
                      "id": {
                        "description": "The id of the album to insert",
                        "type": {
                          "type": "named",
                          "name": "Int!"
                        }
                      },
                      "title": {
                        "description": "The title of the album to insert",
                        "type": {
                          "type": "named",
                          "name": "String!"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "Album_response"
                    }
                  },
                  {
                    "name": "insert_artist",
                    "description": "Insert an artist",
                    "arguments": {
                      "id": {
                        "description": "The id of the artist to insert",
                        "type": {
                          "type": "named",
                          "name": "Int!"
                        }
                      },
                      "name": {
                        "description": "The name of the artist to insert",
                        "type": {
                          "type": "named",
                          "name": "String!"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "Artist_response"
                    }
                  },
                  {
                    "name": "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId",
                    "description": "Delete any value on the 'PlaylistTrack' collection using the 'PlaylistId' and 'TrackId' keys",
                    "arguments": {
                      "key_PlaylistId": {
                        "description": "The identifier of a playlist",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "key_TrackId": {
                        "description": "The identifier of a track",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'PlaylistTrack' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "PlaylistTrack"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId_response"
                    }
                  },
                  {
                    "name": "v2_update_Artist_by_ArtistId",
                    "description": "Update any row on the 'Artist' collection using the 'ArtistId' key",
                    "arguments": {
                      "key_ArtistId": {
                        "description": "The identifier of an artist",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Artist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Artist"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Artist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Artist"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Artist_by_ArtistId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Artist_by_ArtistId_response"
                    }
                  }
                ]
              },
              "capabilities": {
                "version": "0.1.0",
                "capabilities": {
                  "query": {
                    "aggregates": {},
                    "variables": {},
                    "explain": {}
                  },
                  "mutation": {
                    "transactional": {},
                    "explain": {}
                  },
                  "relationships": {
                    "relation_comparisons": {},
                    "order_by_aggregate": {}
                  }
                }
              }
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Artist",
            "fields": [
              {
                "name": "ArtistId",
                "type": "Int!"
              },
              {
                "name": "Name",
                "type": "String!"
              }
            ],
            "graphql": {
              "typeName": "Artist",
              "apolloFederation": {
                "keys": [
                  {
                    "fields": ["ArtistId"]
                  }
                ]
              }
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Artist",
                "fieldMapping": {
                  "ArtistId": {
                    "column": {
                      "name": "ArtistId"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Artist_response",
            "fields": [
              {
                "name": "affected_rows",
                "type": "Int!"
              },
              {
                "name": "returning",
                "type": "[Artist!]!"
              }
            ],
            "graphql": {
              "typeName": "Artist_response"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Artist_response",
                "fieldMapping": {
                  "affected_rows": {
                    "column": {
                      "name": "affected_rows"
                    }
                  },
                  "returning": {
                    "column": {
                      "name": "returning"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Album",
            "fields": [
              {
                "name": "AlbumId",
                "type": "Int!"
              },
              {
                "name": "Title",
                "type": "String!"
              },
              {
                "name": "ArtistId",
                "type": "Int!"
              }
            ],
            "graphql": {
              "typeName": "Album"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Album",
                "fieldMapping": {
                  "AlbumId": {
                    "column": {
                      "name": "AlbumId"
                    }
                  },
                  "Title": {
                    "column": {
                      "name": "Title"
                    }
                  },
                  "ArtistId": {
                    "column": {
                      "name": "ArtistId"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Album_response",
            "fields": [
              {
                "name": "affected_rows",
                "type": "Int!"
              },
              {
                "name": "returning",
                "type": "[Album!]!"
              }
            ],
            "graphql": {
              "typeName": "Album_response"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Album_response",
                "fieldMapping": {
                  "affected_rows": {
                    "column": {
                      "name": "affected_rows"
                    }
                  },
                  "returning": {
                    "column": {
                      "name": "returning"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Track",
            "fields": [
              {
                "name": "TrackId",
                "type": "Int!"
              },
              {
                "name": "Name",
                "type": "String!"
              },
              {
                "name": "AlbumId",
                "type": "Int!"
              }
            ],
            "graphql": {
              "typeName": "Track"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Track",
                "fieldMapping": {
                  "TrackId": {
                    "column": {
                      "name": "TrackId"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  },
                  "AlbumId": {
                    "column": {
                      "name": "AlbumId"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "PlaylistTrack",
            "fields": [
              {
                "name": "PlaylistId",
                "type": "Int!"
              },
              {
                "name": "TrackId",
                "type": "Int!"
              }
            ],
            "graphql": {
              "typeName": "PlaylistTrack",
              "apolloFederation": {
                "keys": [
                  {
                    "fields": ["PlaylistId", "TrackId"]
                  }
                ]
              }
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "PlaylistTrack",
                "fieldMapping": {
                  "PlaylistId": {
                    "column": {
                      "name": "PlaylistId"
                    }
                  },
                  "TrackId": {
                    "column": {
                      "name": "TrackId"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "artist_below_id",
            "fields": [
              {
                "name": "ArtistId",
                "type": "Int!"
              },
              {
                "name": "Name",
                "type": "String!"
              }
            ],
            "graphql": {
              "typeName": "ArtistBelowId"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Artist",
                "fieldMapping": {
                  "ArtistId": {
                    "column": {
                      "name": "ArtistId"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Artist_Where_Exp",
            "objectType": "Artist",
            "dataConnectorName": "db",
            "dataConnectorObjectType": "Artist",
            "comparableFields": [
              {
                "fieldName": "ArtistId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "Artist_Where_Exp"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Artists",
            "objectType": "Artist",
            "source": {
              "dataConnectorName": "db",
              "collection": "Artist"
            },
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "ArtistByID",
                  "uniqueIdentifier": ["ArtistId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Artist"
              },
              "orderByExpressionType": "Artist_Order_By",
              "apolloFederation": {
                "entitySource": true
              }
            },
            "filterExpressionType": "Artist_Where_Exp",
            "orderableFields": [
              {
                "fieldName": "ArtistId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Album_Where_Exp",
            "objectType": "Album",
            "dataConnectorName": "db",
            "dataConnectorObjectType": "Album",
            "comparableFields": [
              {
                "fieldName": "AlbumId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Title",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "ArtistId",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "Album_Where_Exp"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Albums",
            "objectType": "Album",
            "source": {
              "dataConnectorName": "db",
              "collection": "Album"
            },
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "AlbumByID",
                  "uniqueIdentifier": ["AlbumId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Album"
              },
              "orderByExpressionType": "Album_Order_By"
            },
            "filterExpressionType": "Album_Where_Exp",
            "orderableFields": [
              {
                "fieldName": "AlbumId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Title",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "ArtistId",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Track_Where_Exp",
            "objectType": "Track",
            "dataConnectorName": "db",
            "dataConnectorObjectType": "Track",
            "comparableFields": [
              {
                "fieldName": "TrackId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "AlbumId",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "Track_Where_Exp"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Tracks",
            "objectType": "Track",
            "source": {
              "dataConnectorName": "db",
              "collection": "Track"
            },
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "TrackByID",
                  "uniqueIdentifier": ["TrackId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Track"
              },
              "orderByExpressionType": "Track_Order_By"
            },
            "filterExpressionType": "Track_Where_Exp",
            "orderableFields": [
              {
                "fieldName": "TrackId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "AlbumId",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "PlaylistTrack_Where_Exp",
            "objectType": "PlaylistTrack",
            "dataConnectorName": "db",
            "dataConnectorObjectType": "PlaylistTrack",
            "comparableFields": [
              {
                "fieldName": "PlaylistId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "TrackId",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "PlaylistTrack_Where_Exp"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "PlaylistTracks",
            "objectType": "PlaylistTrack",
            "source": {
              "dataConnectorName": "db",
              "collection": "PlaylistTrack"
            },
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "PlaylistTrackByID",
                  "uniqueIdentifier": ["PlaylistId", "TrackId"]
                }
              ],
              "selectMany": {
                "queryRootField": "PlaylistTrack"
              },
              "orderByExpressionType": "PlaylistTrack_Order_By",
              "apolloFederation": {
                "entitySource": true
              }
            },
            "filterExpressionType": "PlaylistTrack_Where_Exp",
            "orderableFields": [
              {
                "fieldName": "PlaylistId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "TrackId",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "artist_below_id_Where_Exp",
            "objectType": "artist_below_id",
            "dataConnectorName": "db",
            "dataConnectorObjectType": "Artist",
            "comparableFields": [
              {
                "fieldName": "ArtistId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "artist_below_id_Where_Exp"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "artist_below_id",
            "objectType": "artist_below_id",
            "arguments": [
              {
                "name": "id",
                "type": "Int!"
              }
            ],
            "source": {
              "dataConnectorName": "db",
              "collection": "artist_below_id",
              "argumentMapping": {
                "id": "id"
              }
            },
            "graphql": {
              "selectUniques": [],
              "selectMany": {
                "queryRootField": "artist_below_id"
              },
              "orderByExpressionType": "artist_below_id_Order_By",
              "argumentsInputType": "artist_below_id_Args"
            },
            "filterExpressionType": "artist_below_id_Where_Exp",
            "orderableFields": [
              {
                "fieldName": "ArtistId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "CommandPermissions",
          "version": "v1",
          "definition": {
            "commandName": "insert_album",
            "permissions": [
              {
                "role": "admin",
                "allowExecution": true
              },
              {
                "role": "user",
                "allowExecution": true
              }
            ]
          }
        },
        {
          "kind": "CommandPermissions",
          "version": "v1",
          "definition": {
            "commandName": "insert_artist",
            "permissions": [
              {
                "role": "admin",
                "allowExecution": true
              },
              {
                "role": "user",
                "allowExecution": true
              }
            ]
          }
        },
        {
          "kind": "Command",
          "version": "v1",
          "definition": {
            "name": "insert_album",
            "arguments": [
              {
                "name": "artist_id",
                "type": "Int!"
              },
              {
                "name": "id",
                "type": "Int!"
              },
              {
                "name": "title",
                "type": "String!"
              }
            ],
            "outputType": "Album_response",
            "source": {
              "dataConnectorName": "db",
              "dataConnectorCommand": {
                "procedure": "insert_album"
              },
              "argumentMapping": {
                "id": "id",
                "artist_id": "artist_id",
                "title": "title"
              }
            },
            "graphql": {
              "rootFieldName": "insert_album",
              "rootFieldKind": "Mutation"
            }
          }
        },
        {
          "kind": "Command",
          "version": "v1",
          "definition": {
            "name": "insert_artist",
            "arguments": [
              {
                "name": "id",
                "type": "Int!"
              },
              {
                "name": "name",
                "type": "String!"
              }
            ],
            "outputType": "Artist_response",
            "source": {
              "dataConnectorName": "db",
              "dataConnectorCommand": {
                "procedure": "insert_artist"
              },
              "argumentMapping": {
                "id": "id",
                "name": "name"
              }
            },
            "graphql": {
              "rootFieldName": "insert_artist",
              "rootFieldKind": "Mutation"
            }
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "PlaylistTrackBoolExp",
            "objectType": "PlaylistTrack",
            "dataConnectorName": "db",
            "dataConnectorObjectType": "PlaylistTrack",
            "comparableFields": [
              {
                "fieldName": "PlaylistId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "TrackId",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "PlaylistTrackBoolExp"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "V2DeletePlaylistTrackByPlaylistIdAndTrackIdResponse",
            "fields": [
              {
                "name": "affectedRows",
                "type": "Int!",
                "description": "The number of rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "returning",
                "type": "[PlaylistTrack!]!",
                "description": "Data from rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "V2DeletePlaylistTrackByPlaylistIdAndTrackIdResponse",
              "inputTypeName": "V2DeletePlaylistTrackByPlaylistIdAndTrackIdResponseInput",
              "apolloFederation": null
            },
            "description": "Responses from the 'v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId' procedure",
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId_response",
                "fieldMapping": {
                  "affectedRows": {
                    "column": {
                      "name": "affected_rows",
                      "argumentMapping": null
                    }
                  },
                  "returning": {
                    "column": {
                      "name": "returning",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "V2DeletePlaylistTrackByPlaylistIdAndTrackIdResponse",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["affectedRows", "returning"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "Command",
          "version": "v1",
          "definition": {
            "name": "V2DeletePlaylistTrackByPlaylistIdAndTrackId",
            "outputType": "V2DeletePlaylistTrackByPlaylistIdAndTrackIdResponse!",
            "arguments": [
              {
                "name": "key_PlaylistId",
                "type": "Int!",
                "description": "The identifier of a playlist"
              },
              {
                "name": "key_TrackId",
                "type": "Int!",
                "description": "The identifier of a track"
              },
              {
                "name": "pre_check",
                "type": "PlaylistTrackBoolExp!",
                "description": "Delete permission predicate over the 'PlaylistTrack' collection"
              }
            ],
            "source": {
              "dataConnectorName": "db",
              "dataConnectorCommand": {
                "procedure": "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId"
              },
              "argumentMapping": {
                "key_PlaylistId": "key_PlaylistId",
                "key_TrackId": "key_TrackId",
                "pre_check": "pre_check"
              }
            },
            "graphql": {
              "rootFieldName": "v2DeletePlaylistTrackByPlaylistIdAndTrackId",
              "rootFieldKind": "Mutation",
              "deprecated": null
            },
            "description": "Delete any value on the 'PlaylistTrack' collection using the 'PlaylistId' and 'TrackId' keys"
          }
        },
        {
          "kind": "CommandPermissions",
          "version": "v1",
          "definition": {
            "commandName": "V2DeletePlaylistTrackByPlaylistIdAndTrackId",
            "permissions": [
              {
                "role": "admin",
                "allowExecution": true,
                "argumentPresets": [
                  {
                    "argument": "pre_check",
                    "value": {
                      "booleanExpression": {
                        "fieldComparison": {
                          "field": "TrackId",
                          "operator": "_eq",
                          "value": {
                            "literal": 8
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "PlaylistTrack",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["PlaylistId", "TrackId"]
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Artist",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["ArtistId", "Name"]
                }
              },
              {
                "role": "complex-permission",
                "output": {
                  "allowedFields": ["ArtistId", "Name"]
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Artist_response",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["returning", "affected_rows"]
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Album",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["AlbumId", "Title", "ArtistId"]
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Album_response",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["returning", "affected_rows"]
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Track",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["TrackId", "Name", "AlbumId"]
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "PlaylistTrack",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["PlaylistId", "TrackId"]
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "artist_below_id",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["ArtistId", "Name"]
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Artists",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              },
              {
                "role": "complex-permission",
                "select": {
                  "filter": {
                    "relationship": {
                      "name": "Albums",
                      "predicate": {
                        "fieldComparison": {
                          "field": "Title",
                          "operator": "_eq",
                          "value": {
                            "literal": "Supernatural"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Albums",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Tracks",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "PlaylistTracks",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "artist_below_id",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "source": "Artist",
            "name": "Albums",
            "target": {
              "model": {
                "name": "Albums",
                "relationshipType": "Array"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "source": "Album",
            "name": "Tracks",
            "target": {
              "model": {
                "name": "Tracks",
                "relationshipType": "Array"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "source": "Album",
            "name": "Artist",
            "target": {
              "model": {
                "name": "Artists",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "source": "Track",
            "name": "Album",
            "target": {
              "model": {
                "name": "Albums",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "int4",
            "representation": "Int",
            "graphql": {
              "comparisonExpressionTypeName": "int4_comparison"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "representation": "String",
            "dataConnectorScalarType": "varchar",
            "graphql": {
              "comparisonExpressionTypeName": "varchar_comparison"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "V2InsertArtistObject",
            "fields": [
              {
                "name": "ArtistId",
                "type": "Int!",
                "description": null,
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "Name",
                "type": "String",
                "description": null,
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "V2InsertArtistObject",
              "inputTypeName": "V2InsertArtistObjectInput",
              "apolloFederation": null
            },
            "description": null,
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "v2_insert_Artist_object",
                "fieldMapping": {
                  "ArtistId": {
                    "column": {
                      "name": "ArtistId",
                      "argumentMapping": null
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "V2InsertArtistObject",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["ArtistId", "Name"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "V2InsertArtistResponse",
            "fields": [
              {
                "name": "affectedRows",
                "type": "Int!",
                "description": "The number of rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "returning",
                "type": "[Artist!]!",
                "description": "Data from rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "V2InsertArtistResponse",
              "inputTypeName": "V2InsertArtistResponseInput",
              "apolloFederation": null
            },
            "description": "Responses from the 'v2_insert_Artist' procedure",
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "v2_insert_Artist_response",
                "fieldMapping": {
                  "affectedRows": {
                    "column": {
                      "name": "affected_rows",
                      "argumentMapping": null
                    }
                  },
                  "returning": {
                    "column": {
                      "name": "returning",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "V2InsertArtistResponse",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["affectedRows", "returning"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "Command",
          "version": "v1",
          "definition": {
            "name": "V2InsertArtist",
            "outputType": "V2InsertArtistResponse!",
            "arguments": [
              {
                "name": "objects",
                "type": "[V2InsertArtistObject!]!",
                "description": null
              },
              {
                "name": "post_check",
                "type": "ArtistBoolExp!",
                "description": "Insert permission predicate over the 'Artist' collection"
              }
            ],
            "source": {
              "dataConnectorName": "db",
              "dataConnectorCommand": {
                "procedure": "v2_insert_Artist"
              },
              "argumentMapping": {
                "post_check": "post_check",
                "objects": "objects"
              }
            },
            "graphql": {
              "rootFieldName": "v2InsertArtist",
              "rootFieldKind": "Mutation",
              "deprecated": null
            },
            "description": "Insert into the Artist table"
          }
        },
        {
          "kind": "CommandPermissions",
          "version": "v1",
          "definition": {
            "commandName": "V2InsertArtist",
            "permissions": [
              {
                "role": "admin",
                "allowExecution": true,
                "argumentPresets": [
                  {
                    "argument": "post_check",
                    "value": {
                      "booleanExpression": {
                        "fieldComparison": {
                          "field": "Name",
                          "operator": "_eq",
                          "value": {
                            "literal": "Olympians"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "ArtistBoolExp",
            "objectType": "Artist",
            "dataConnectorName": "db",
            "dataConnectorObjectType": "Artist",
            "comparableFields": [
              {
                "fieldName": "ArtistId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "ArtistBoolExp"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "UpdateColumnArtistArtistId",
            "fields": [
              {
                "name": "set",
                "type": "Int!",
                "description": "Set the column to this value",
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "UpdateColumnArtistArtistId",
              "inputTypeName": "UpdateColumnArtistArtistIdInput",
              "apolloFederation": null
            },
            "description": "Update the 'ArtistId' column in the 'Artist' collection",
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "update_column_Artist_ArtistId",
                "fieldMapping": {
                  "set": {
                    "column": {
                      "name": "_set",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "UpdateColumnArtistArtistId",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["set"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "UpdateColumnArtistName",
            "fields": [
              {
                "name": "set",
                "type": "String",
                "description": "Set the column to this value",
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "UpdateColumnArtistName",
              "inputTypeName": "UpdateColumnArtistNameInput",
              "apolloFederation": null
            },
            "description": "Update the 'Name' column in the 'Artist' collection",
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "update_column_Artist_Name",
                "fieldMapping": {
                  "set": {
                    "column": {
                      "name": "_set",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "UpdateColumnArtistName",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["set"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "V2UpdateArtistByArtistIdUpdateColumns",
            "fields": [
              {
                "name": "ArtistId",
                "type": "UpdateColumnArtistArtistId!",
                "description": "Update the 'ArtistId' column in the 'Artist' collection.",
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "Name",
                "type": "UpdateColumnArtistName!",
                "description": "Update the 'Name' column in the 'Artist' collection.",
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "V2UpdateArtistByArtistIdUpdateColumns",
              "inputTypeName": "V2UpdateArtistByArtistIdUpdateColumnsInput",
              "apolloFederation": null
            },
            "description": "Update the columns of the 'Artist' collection",
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "v2_update_Artist_by_ArtistId_update_columns",
                "fieldMapping": {
                  "ArtistId": {
                    "column": {
                      "name": "ArtistId",
                      "argumentMapping": null
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "V2UpdateArtistByArtistIdUpdateColumns",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["ArtistId", "Name"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "V2UpdateArtistByArtistIdResponse",
            "fields": [
              {
                "name": "affectedRows",
                "type": "Int!",
                "description": "The number of rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              },
              {
                "name": "returning",
                "type": "[Artist!]!",
                "description": "Data from rows affected by the mutation",
                "deprecated": null,
                "arguments": []
              }
            ],
            "globalIdFields": null,
            "graphql": {
              "typeName": "V2UpdateArtistByArtistIdResponse",
              "inputTypeName": "V2UpdateArtistByArtistIdResponseInput",
              "apolloFederation": null
            },
            "description": "Responses from the 'v2_update_Artist_by_ArtistId' procedure",
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "v2_update_Artist_by_ArtistId_response",
                "fieldMapping": {
                  "affectedRows": {
                    "column": {
                      "name": "affected_rows",
                      "argumentMapping": null
                    }
                  },
                  "returning": {
                    "column": {
                      "name": "returning",
                      "argumentMapping": null
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "V2UpdateArtistByArtistIdResponse",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["affectedRows", "returning"]
                },
                "input": null
              }
            ]
          }
        },
        {
          "kind": "Command",
          "version": "v1",
          "definition": {
            "name": "V2UpdateArtistByArtistId",
            "outputType": "V2UpdateArtistByArtistIdResponse!",
            "arguments": [
              {
                "name": "key_ArtistId",
                "type": "Int!",
                "description": "The identifier of an artist"
              },
              {
                "name": "postCheck",
                "type": "ArtistBoolExp!",
                "description": "Update permission post-condition predicate over the 'Artist' collection"
              },
              {
                "name": "preCheck",
                "type": "ArtistBoolExp!",
                "description": "Update permission pre-condition predicate over the 'Artist' collection"
              },
              {
                "name": "updateColumns",
                "type": "V2UpdateArtistByArtistIdUpdateColumns!",
                "description": null
              }
            ],
            "source": {
              "dataConnectorName": "db",
              "dataConnectorCommand": {
                "procedure": "v2_update_Artist_by_ArtistId"
              },
              "argumentMapping": {
                "key_ArtistId": "key_ArtistId",
                "postCheck": "post_check",
                "preCheck": "pre_check",
                "updateColumns": "update_columns"
              }
            },
            "graphql": {
              "rootFieldName": "v2UpdateArtistByArtistId",
              "rootFieldKind": "Mutation",
              "deprecated": null
            },
            "description": "Update any row on the 'Artist' collection using the 'ArtistId' key"
          }
        },
        {
          "kind": "CommandPermissions",
          "version": "v1",
          "definition": {
            "commandName": "V2UpdateArtistByArtistId",
            "permissions": [
              {
                "role": "admin",
                "allowExecution": true,
                "argumentPresets": [
                  {
                    "argument": "preCheck",
                    "value": {
                      "booleanExpression": {
                        "fieldComparison": {
                          "field": "Name",
                          "operator": "_eq",
                          "value": {
                            "literal": "AC/DC"
                          }
                        }
                      }
                    }
                  },
                  {
                    "argument": "postCheck",
                    "value": {
                      "booleanExpression": {
                        "fieldComparison": {
                          "field": "Name",
                          "operator": "_eq",
                          "value": {
                            "literal": "Olympians"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "kind": "DataConnectorLink",
          "version": "v1",
          "definition": {
            "name": "db_remote",
            "url": {
              "singleUrl": {
                "value": "http://postgres-connector:8080"
              }
            },
            "schema": {
              "version": "v0.1",
              "schema": {
                "scalar_types": {
                  "varchar": {
                    "aggregate_functions": {},
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_like": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_ilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nlike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_regex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_iregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_niregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    },
                    "update_operators": {}
                  },
                  "int4": {
                    "aggregate_functions": {
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    },
                    "update_operators": {}
                  }
                },
                "object_types": {
                  "Track": {
                    "description": "A track",
                    "fields": {
                      "TrackId": {
                        "description": "The track's primary key",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "description": "The track's name",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "AlbumId": {
                        "description": "The track's album ID",
                        "arguments": {},
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  }
                },
                "collections": [
                  {
                    "name": "Track",
                    "description": "A collection of tracks",
                    "arguments": {},
                    "type": "Track",
                    "deletable": false,
                    "uniqueness_constraints": {
                      "SongById": {
                        "unique_columns": ["SongId"]
                      }
                    },
                    "foreign_keys": {}
                  }
                ],
                "functions": [],
                "procedures": []
              },
              "capabilities": {
                "version": "0.1.0",
                "capabilities": {
                  "query": {
                    "aggregates": {},
                    "variables": {},
                    "explain": {}
                  },
                  "mutation": {
                    "transactional": {},
                    "explain": {}
                  },
                  "relationships": {
                    "relation_comparisons": {},
                    "order_by_aggregate": {}
                  }
                }
              }
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db_remote",
            "representation": "String",
            "dataConnectorScalarType": "varchar",
            "graphql": {
              "comparisonExpressionTypeName": "varchar_comparison_remote"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Song",
            "fields": [
              {
                "name": "SongId",
                "type": "Int!"
              },
              {
                "name": "Name",
                "type": "String!"
              },
              {
                "name": "AlbumId",
                "type": "Int!"
              }
            ],
            "graphql": {
              "typeName": "Song"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db_remote",
                "dataConnectorObjectType": "Track",
                "fieldMapping": {
                  "SongId": {
                    "column": {
                      "name": "TrackId"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  },
                  "AlbumId": {
                    "column": {
                      "name": "AlbumId"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectBooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Song_Where_Exp",
            "objectType": "Song",
            "dataConnectorName": "db_remote",
            "dataConnectorObjectType": "Track",
            "comparableFields": [
              {
                "fieldName": "SongId",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "operators": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "AlbumId",
                "operators": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "typeName": "Song_Where_Exp"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Songs",
            "objectType": "Song",
            "source": {
              "dataConnectorName": "db_remote",
              "collection": "Track"
            },
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "SongByID",
                  "uniqueIdentifier": ["SongId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Song"
              },
              "orderByExpressionType": "Song_Order_By"
            },
            "filterExpressionType": "Song_Where_Exp",
            "orderableFields": [
              {
                "fieldName": "SongId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "AlbumId",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Song",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["SongId", "Name", "AlbumId"]
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Songs",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": {
                    "relationship": {
                      "name": "Album",
                      "predicate": {
                        "fieldComparison": {
                          "field": "Title",
                          "operator": "_ilike",
                          "value": {
                            "literal": "%rock%"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "source": "Song",
            "name": "Album",
            "target": {
              "model": {
                "name": "Albums",
                "subgraph": "default",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  ]
}
