{
  "version": "v3",
  "subgraphs": [
    {
      "name": "default",
      "objects": [
        {
          "definition": {
            "name": "db",
            "url": {
              "singleUrl": {
                "value": "http://local.hasura.dev:8080"
              }
            },
            "headers": {
              "Authorization": {
                "value": "Bearer super sekret"
              },
              "hasura-m-auth-token": {
                "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.~!#$&'()*+,/:;=?@[]\""
              }
            },
            "schema": {
              "version": "v0.1",
              "schema": {
                "scalar_types": {
                  "bool": {
                    "representation": {
                      "type": "boolean"
                    },
                    "aggregate_functions": {
                      "bool_and": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      },
                      "bool_or": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      },
                      "every": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "bool"
                        }
                      }
                    }
                  },
                  "char": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_ilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_iregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_like": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_nilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_niregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_nlike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_nregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "_regex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "st_coveredby": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "st_covers": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "st_intersects": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "st_relatematch": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "starts_with": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      },
                      "ts_match_tt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "char"
                        }
                      }
                    }
                  },
                  "date": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "date"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "date"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "date"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "date"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "date"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "date"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "date"
                        }
                      }
                    }
                  },
                  "float4": {
                    "representation": {
                      "type": "json"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float4"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float4"
                          }
                        }
                      },
                      "stddev": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "stddev_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "stddev_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float4"
                          }
                        }
                      },
                      "var_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "var_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "variance": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float4"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float4"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float4"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float4"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float4"
                        }
                      }
                    }
                  },
                  "float8": {
                    "representation": {
                      "type": "json"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "stddev": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "stddev_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "stddev_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "var_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "var_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "variance": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float8"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float8"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float8"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float8"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "float8"
                        }
                      }
                    }
                  },
                  "int2": {
                    "representation": {
                      "type": "json"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "bit_and": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int2"
                          }
                        }
                      },
                      "bit_or": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int2"
                          }
                        }
                      },
                      "bit_xor": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int2"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int2"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int2"
                          }
                        }
                      },
                      "stddev": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "var_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "var_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "variance": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int2"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int2"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int2"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int2"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int2"
                        }
                      }
                    }
                  },
                  "int4": {
                    "representation": {
                      "type": "json"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "bit_and": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "bit_or": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "bit_xor": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "stddev": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "var_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "var_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "variance": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "int8": {
                    "representation": {
                      "type": "json"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "bit_and": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "bit_or": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "bit_xor": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "stddev": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "var_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "var_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "variance": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int8"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int8"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int8"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int8"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "int8"
                        }
                      }
                    }
                  },
                  "interval": {
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "interval"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "interval"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "interval"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "interval"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "interval"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "interval"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "interval"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "interval"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "interval"
                        }
                      }
                    }
                  },
                  "numeric": {
                    "representation": {
                      "type": "json"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "stddev_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "var_pop": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "var_samp": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "variance": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "text": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_ilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_iregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_like": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_nilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_niregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_nlike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_nregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "_regex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "st_coveredby": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "st_covers": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "st_intersects": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "st_relatematch": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "starts_with": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      },
                      "ts_match_tt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "text"
                        }
                      }
                    }
                  },
                  "time": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "avg": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "interval"
                          }
                        }
                      },
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "time"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "time"
                          }
                        }
                      },
                      "sum": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "interval"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "time"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "time"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "time"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "time"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "time"
                        }
                      }
                    }
                  },
                  "timestamp": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      }
                    }
                  },
                  "timestamptz": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamptz"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamptz"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamptz"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamptz"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamptz"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamptz"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timestamptz"
                        }
                      }
                    }
                  },
                  "timetz": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timetz"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timetz"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timetz"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timetz"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timetz"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timetz"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "timetz"
                        }
                      }
                    }
                  },
                  "uuid": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {},
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "uuid"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "uuid"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "uuid"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "uuid"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "uuid"
                        }
                      }
                    }
                  },
                  "varchar": {
                    "representation": {
                      "type": "string"
                    },
                    "aggregate_functions": {
                      "max": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "min": {
                        "result_type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    },
                    "comparison_operators": {
                      "_eq": {
                        "type": "equal"
                      },
                      "_gt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_gte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_ilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_in": {
                        "type": "in"
                      },
                      "_iregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_like": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_lte": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_neq": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nilike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_niregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nlike": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_nregex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "_regex": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "st_coveredby": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "st_covers": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "st_intersects": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "st_relatematch": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "starts_with": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "ts_match_tt": {
                        "type": "custom",
                        "argument_type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  }
                },
                "object_types": {
                  "Album": {
                    "description": "The record of all albums",
                    "fields": {
                      "AlbumId": {
                        "description": "The identifier of an album",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "ArtistId": {
                        "description": "The id of the artist that authored the album",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Title": {
                        "description": "The title of an album",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "Artist": {
                    "description": "The record of all artists",
                    "fields": {
                      "ArtistId": {
                        "description": "The identifier of an artist",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "description": "The name of an artist",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "Customer": {
                    "description": "The record of all customers",
                    "fields": {
                      "Address": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "City": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Company": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Country": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "CustomerId": {
                        "description": "The identifier of customer",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Email": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "Fax": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "FirstName": {
                        "description": "The first name of a customer",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "LastName": {
                        "description": "The last name of a customer",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "Phone": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "PostalCode": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "State": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "SupportRepId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "Employee": {
                    "fields": {
                      "Address": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BirthDate": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      },
                      "City": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Country": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Email": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "EmployeeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Fax": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "FirstName": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "HireDate": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      },
                      "LastName": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "Phone": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "PostalCode": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "ReportsTo": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "State": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Title": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "Genre": {
                    "fields": {
                      "GenreId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "Invoice": {
                    "fields": {
                      "BillingAddress": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingCity": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingCountry": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingPostalCode": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingState": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "CustomerId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "InvoiceDate": {
                        "type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      },
                      "InvoiceId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Total": {
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "InvoiceLine": {
                    "fields": {
                      "InvoiceId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "InvoiceLineId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Quantity": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "UnitPrice": {
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "MediaType": {
                    "fields": {
                      "MediaTypeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "Playlist": {
                    "fields": {
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "PlaylistTrack": {
                    "fields": {
                      "PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "Track": {
                    "fields": {
                      "AlbumId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "Bytes": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "Composer": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "GenreId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "MediaTypeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Milliseconds": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "UnitPrice": {
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "album_by_title": {
                    "fields": {
                      "AlbumId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "ArtistId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "Title": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "article": {
                    "fields": {
                      "author_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "title": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "articles_by_author": {
                    "fields": {
                      "author_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "title": {
                        "type": {
                          "type": "named",
                          "name": "character varying"
                        }
                      }
                    }
                  },
                  "artist": {
                    "fields": {
                      "ArtistId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "artist_below_id": {
                    "fields": {
                      "ArtistId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "author": {
                    "fields": {
                      "first_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "last_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "country": {
                    "fields": {
                      "continent": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "institution": {
                    "fields": {
                      "departments": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "text"
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "location": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "location"
                          }
                        }
                      },
                      "name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "songs": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "institution_songs"
                          }
                        }
                      },
                      "staff": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "staff"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "institution_songs": {
                    "fields": {
                      "primary_anthem_track_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "secondary_anthem_track_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "location": {
                    "fields": {
                      "campuses": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "text"
                              }
                            }
                          }
                        }
                      },
                      "city": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "country": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "country"
                          }
                        }
                      }
                    }
                  },
                  "movie_analytics": {
                    "fields": {
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "movie_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "movie_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "num_users_faved": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "num_users_watchlisted": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "num_views_day": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "num_votes_day": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "prev_day_scores": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "total_votes": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "pet": {
                    "fields": {
                      "age": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "spatial_ref_sys": {
                    "fields": {
                      "auth_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "auth_srid": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "proj4text": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "srid": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "srtext": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "staff": {
                    "fields": {
                      "favourite_artist_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "first_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "last_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "pets": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "pet"
                              }
                            }
                          }
                        }
                      },
                      "specialities": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "text"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "topology_layer": {
                    "fields": {
                      "child_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "feature_column": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "feature_type": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "layer_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "level": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "schema_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "table_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "topology_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "topology_topology": {
                    "fields": {
                      "hasz": {
                        "type": {
                          "type": "named",
                          "name": "bool"
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "precision": {
                        "type": {
                          "type": "named",
                          "name": "float8"
                        }
                      },
                      "srid": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Album_AlbumId": {
                    "description": "Update the 'AlbumId' column in the 'Album' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Album_ArtistId": {
                    "description": "Update the 'ArtistId' column in the 'Album' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Album_Title": {
                    "description": "Update the 'Title' column in the 'Album' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_Artist_ArtistId": {
                    "description": "Update the 'ArtistId' column in the 'Artist' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Artist_Name": {
                    "description": "Update the 'Name' column in the 'Artist' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_Address": {
                    "description": "Update the 'Address' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_City": {
                    "description": "Update the 'City' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_Company": {
                    "description": "Update the 'Company' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_Country": {
                    "description": "Update the 'Country' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_CustomerId": {
                    "description": "Update the 'CustomerId' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Customer_Email": {
                    "description": "Update the 'Email' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_Customer_Fax": {
                    "description": "Update the 'Fax' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_FirstName": {
                    "description": "Update the 'FirstName' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_Customer_LastName": {
                    "description": "Update the 'LastName' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_Customer_Phone": {
                    "description": "Update the 'Phone' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_PostalCode": {
                    "description": "Update the 'PostalCode' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_State": {
                    "description": "Update the 'State' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Customer_SupportRepId": {
                    "description": "Update the 'SupportRepId' column in the 'Customer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_Address": {
                    "description": "Update the 'Address' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_BirthDate": {
                    "description": "Update the 'BirthDate' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_City": {
                    "description": "Update the 'City' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_Country": {
                    "description": "Update the 'Country' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_Email": {
                    "description": "Update the 'Email' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_EmployeeId": {
                    "description": "Update the 'EmployeeId' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Employee_Fax": {
                    "description": "Update the 'Fax' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_FirstName": {
                    "description": "Update the 'FirstName' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_Employee_HireDate": {
                    "description": "Update the 'HireDate' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_LastName": {
                    "description": "Update the 'LastName' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_Employee_Phone": {
                    "description": "Update the 'Phone' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_PostalCode": {
                    "description": "Update the 'PostalCode' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_ReportsTo": {
                    "description": "Update the 'ReportsTo' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_State": {
                    "description": "Update the 'State' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Employee_Title": {
                    "description": "Update the 'Title' column in the 'Employee' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Genre_GenreId": {
                    "description": "Update the 'GenreId' column in the 'Genre' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Genre_Name": {
                    "description": "Update the 'Name' column in the 'Genre' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_InvoiceLine_InvoiceId": {
                    "description": "Update the 'InvoiceId' column in the 'InvoiceLine' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_InvoiceLine_InvoiceLineId": {
                    "description": "Update the 'InvoiceLineId' column in the 'InvoiceLine' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_InvoiceLine_Quantity": {
                    "description": "Update the 'Quantity' column in the 'InvoiceLine' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_InvoiceLine_TrackId": {
                    "description": "Update the 'TrackId' column in the 'InvoiceLine' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_InvoiceLine_UnitPrice": {
                    "description": "Update the 'UnitPrice' column in the 'InvoiceLine' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "update_column_Invoice_BillingAddress": {
                    "description": "Update the 'BillingAddress' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Invoice_BillingCity": {
                    "description": "Update the 'BillingCity' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Invoice_BillingCountry": {
                    "description": "Update the 'BillingCountry' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Invoice_BillingPostalCode": {
                    "description": "Update the 'BillingPostalCode' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Invoice_BillingState": {
                    "description": "Update the 'BillingState' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Invoice_CustomerId": {
                    "description": "Update the 'CustomerId' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Invoice_InvoiceDate": {
                    "description": "Update the 'InvoiceDate' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      }
                    }
                  },
                  "update_column_Invoice_InvoiceId": {
                    "description": "Update the 'InvoiceId' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Invoice_Total": {
                    "description": "Update the 'Total' column in the 'Invoice' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "update_column_MediaType_MediaTypeId": {
                    "description": "Update the 'MediaTypeId' column in the 'MediaType' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_MediaType_Name": {
                    "description": "Update the 'Name' column in the 'MediaType' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_PlaylistTrack_PlaylistId": {
                    "description": "Update the 'PlaylistId' column in the 'PlaylistTrack' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_PlaylistTrack_TrackId": {
                    "description": "Update the 'TrackId' column in the 'PlaylistTrack' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Playlist_Name": {
                    "description": "Update the 'Name' column in the 'Playlist' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Playlist_PlaylistId": {
                    "description": "Update the 'PlaylistId' column in the 'Playlist' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Track_AlbumId": {
                    "description": "Update the 'AlbumId' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Track_Bytes": {
                    "description": "Update the 'Bytes' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Track_Composer": {
                    "description": "Update the 'Composer' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Track_GenreId": {
                    "description": "Update the 'GenreId' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_Track_MediaTypeId": {
                    "description": "Update the 'MediaTypeId' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Track_Milliseconds": {
                    "description": "Update the 'Milliseconds' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Track_Name": {
                    "description": "Update the 'Name' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_Track_TrackId": {
                    "description": "Update the 'TrackId' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_Track_UnitPrice": {
                    "description": "Update the 'UnitPrice' column in the 'Track' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "update_column_article_author_id": {
                    "description": "Update the 'author_id' column in the 'article' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_article_id": {
                    "description": "Update the 'id' column in the 'article' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_article_title": {
                    "description": "Update the 'title' column in the 'article' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "update_column_author_first_name": {
                    "description": "Update the 'first_name' column in the 'author' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "update_column_author_id": {
                    "description": "Update the 'id' column in the 'author' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_author_last_name": {
                    "description": "Update the 'last_name' column in the 'author' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "update_column_institution_departments": {
                    "description": "Update the 'departments' column in the 'institution' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "text"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "update_column_institution_id": {
                    "description": "Update the 'id' column in the 'institution' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_institution_location": {
                    "description": "Update the 'location' column in the 'institution' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "location"
                          }
                        }
                      }
                    }
                  },
                  "update_column_institution_name": {
                    "description": "Update the 'name' column in the 'institution' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "update_column_institution_songs": {
                    "description": "Update the 'songs' column in the 'institution' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "institution_songs"
                          }
                        }
                      }
                    }
                  },
                  "update_column_institution_staff": {
                    "description": "Update the 'staff' column in the 'institution' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "staff"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_id": {
                    "description": "Update the 'id' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_movie_id": {
                    "description": "Update the 'movie_id' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_movie_name": {
                    "description": "Update the 'movie_name' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_num_users_faved": {
                    "description": "Update the 'num_users_faved' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_num_users_watchlisted": {
                    "description": "Update the 'num_users_watchlisted' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_num_views_day": {
                    "description": "Update the 'num_views_day' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_num_votes_day": {
                    "description": "Update the 'num_votes_day' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_prev_day_scores": {
                    "description": "Update the 'prev_day_scores' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_movie_analytics_total_votes": {
                    "description": "Update the 'total_votes' column in the 'movie_analytics' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_spatial_ref_sys_auth_name": {
                    "description": "Update the 'auth_name' column in the 'spatial_ref_sys' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_spatial_ref_sys_auth_srid": {
                    "description": "Update the 'auth_srid' column in the 'spatial_ref_sys' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_spatial_ref_sys_proj4text": {
                    "description": "Update the 'proj4text' column in the 'spatial_ref_sys' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_spatial_ref_sys_srid": {
                    "description": "Update the 'srid' column in the 'spatial_ref_sys' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_spatial_ref_sys_srtext": {
                    "description": "Update the 'srtext' column in the 'spatial_ref_sys' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_child_id": {
                    "description": "Update the 'child_id' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_feature_column": {
                    "description": "Update the 'feature_column' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_feature_type": {
                    "description": "Update the 'feature_type' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_layer_id": {
                    "description": "Update the 'layer_id' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_level": {
                    "description": "Update the 'level' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_schema_name": {
                    "description": "Update the 'schema_name' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_table_name": {
                    "description": "Update the 'table_name' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_topology_layer_topology_id": {
                    "description": "Update the 'topology_id' column in the 'topology_layer' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_topology_topology_hasz": {
                    "description": "Update the 'hasz' column in the 'topology_topology' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "bool"
                        }
                      }
                    }
                  },
                  "update_column_topology_topology_id": {
                    "description": "Update the 'id' column in the 'topology_topology' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "update_column_topology_topology_name": {
                    "description": "Update the 'name' column in the 'topology_topology' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "update_column_topology_topology_precision": {
                    "description": "Update the 'precision' column in the 'topology_topology' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "float8"
                        }
                      }
                    }
                  },
                  "update_column_topology_topology_srid": {
                    "description": "Update the 'srid' column in the 'topology_topology' collection",
                    "fields": {
                      "_set": {
                        "description": "Set the column to this value",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "v2_delete_Album_by_AlbumId_response": {
                    "description": "Responses from the 'v2_delete_Album_by_AlbumId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Album"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_Artist_by_ArtistId_response": {
                    "description": "Responses from the 'v2_delete_Artist_by_ArtistId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Artist"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_Customer_by_CustomerId_response": {
                    "description": "Responses from the 'v2_delete_Customer_by_CustomerId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Customer"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_Employee_by_EmployeeId_response": {
                    "description": "Responses from the 'v2_delete_Employee_by_EmployeeId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Employee"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_Genre_by_GenreId_response": {
                    "description": "Responses from the 'v2_delete_Genre_by_GenreId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Genre"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_InvoiceLine_by_InvoiceLineId_response": {
                    "description": "Responses from the 'v2_delete_InvoiceLine_by_InvoiceLineId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "InvoiceLine"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_Invoice_by_InvoiceId_response": {
                    "description": "Responses from the 'v2_delete_Invoice_by_InvoiceId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Invoice"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_MediaType_by_MediaTypeId_response": {
                    "description": "Responses from the 'v2_delete_MediaType_by_MediaTypeId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "MediaType"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId_response": {
                    "description": "Responses from the 'v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "PlaylistTrack"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_Playlist_by_PlaylistId_response": {
                    "description": "Responses from the 'v2_delete_Playlist_by_PlaylistId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Playlist"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_Track_by_TrackId_response": {
                    "description": "Responses from the 'v2_delete_Track_by_TrackId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Track"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_article_by_id_response": {
                    "description": "Responses from the 'v2_delete_article_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "article"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_author_by_id_response": {
                    "description": "Responses from the 'v2_delete_author_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "author"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_institution_by_id_response": {
                    "description": "Responses from the 'v2_delete_institution_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "institution"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_movie_analytics_by_id_response": {
                    "description": "Responses from the 'v2_delete_movie_analytics_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "movie_analytics"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_spatial_ref_sys_by_srid_response": {
                    "description": "Responses from the 'v2_delete_spatial_ref_sys_by_srid' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "spatial_ref_sys"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_topology_layer_by_feature_column_and_schema_name_and_table_name_response": {
                    "description": "Responses from the 'v2_delete_topology_layer_by_feature_column_and_schema_name_and_table_name' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_layer"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_topology_layer_by_layer_id_and_topology_id_response": {
                    "description": "Responses from the 'v2_delete_topology_layer_by_layer_id_and_topology_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_layer"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_topology_topology_by_id_response": {
                    "description": "Responses from the 'v2_delete_topology_topology_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_topology"
                          }
                        }
                      }
                    }
                  },
                  "v2_delete_topology_topology_by_name_response": {
                    "description": "Responses from the 'v2_delete_topology_topology_by_name' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_topology"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Album_object": {
                    "fields": {
                      "AlbumId": {
                        "description": "The identifier of an album",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "ArtistId": {
                        "description": "The id of the artist that authored the album",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Title": {
                        "description": "The title of an album",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      }
                    }
                  },
                  "v2_insert_Album_response": {
                    "description": "Responses from the 'v2_insert_Album' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Album"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Artist_object": {
                    "fields": {
                      "ArtistId": {
                        "description": "The identifier of an artist",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "description": "The name of an artist",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Artist_response": {
                    "description": "Responses from the 'v2_insert_Artist' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Artist"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Customer_object": {
                    "fields": {
                      "Address": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "City": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Company": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Country": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "CustomerId": {
                        "description": "The identifier of customer",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Email": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "Fax": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "FirstName": {
                        "description": "The first name of a customer",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "LastName": {
                        "description": "The last name of a customer",
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "Phone": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "PostalCode": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "State": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "SupportRepId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Customer_response": {
                    "description": "Responses from the 'v2_insert_Customer' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Customer"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Employee_object": {
                    "fields": {
                      "Address": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BirthDate": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      },
                      "City": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Country": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Email": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "EmployeeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Fax": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "FirstName": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "HireDate": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      },
                      "LastName": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "Phone": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "PostalCode": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "ReportsTo": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "State": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "Title": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Employee_response": {
                    "description": "Responses from the 'v2_insert_Employee' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Employee"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Genre_object": {
                    "fields": {
                      "GenreId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Genre_response": {
                    "description": "Responses from the 'v2_insert_Genre' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Genre"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_InvoiceLine_object": {
                    "fields": {
                      "InvoiceId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "InvoiceLineId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Quantity": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "UnitPrice": {
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "v2_insert_InvoiceLine_response": {
                    "description": "Responses from the 'v2_insert_InvoiceLine' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "InvoiceLine"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Invoice_object": {
                    "fields": {
                      "BillingAddress": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingCity": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingCountry": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingPostalCode": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "BillingState": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "CustomerId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "InvoiceDate": {
                        "type": {
                          "type": "named",
                          "name": "timestamp"
                        }
                      },
                      "InvoiceId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Total": {
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "v2_insert_Invoice_response": {
                    "description": "Responses from the 'v2_insert_Invoice' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Invoice"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_MediaType_object": {
                    "fields": {
                      "MediaTypeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_MediaType_response": {
                    "description": "Responses from the 'v2_insert_MediaType' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "MediaType"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_PlaylistTrack_object": {
                    "fields": {
                      "PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "v2_insert_PlaylistTrack_response": {
                    "description": "Responses from the 'v2_insert_PlaylistTrack' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "PlaylistTrack"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Playlist_object": {
                    "fields": {
                      "Name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "v2_insert_Playlist_response": {
                    "description": "Responses from the 'v2_insert_Playlist' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Playlist"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_Track_object": {
                    "fields": {
                      "AlbumId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "Bytes": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "Composer": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "GenreId": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "MediaTypeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Milliseconds": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "Name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "UnitPrice": {
                        "type": {
                          "type": "named",
                          "name": "numeric"
                        }
                      }
                    }
                  },
                  "v2_insert_Track_response": {
                    "description": "Responses from the 'v2_insert_Track' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Track"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_article_object": {
                    "fields": {
                      "author_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "title": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_article_response": {
                    "description": "Responses from the 'v2_insert_article' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "article"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_author_object": {
                    "fields": {
                      "first_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "last_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_author_response": {
                    "description": "Responses from the 'v2_insert_author' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "author"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_institution_object": {
                    "fields": {
                      "departments": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "text"
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "location": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "location"
                          }
                        }
                      },
                      "name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "songs": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "institution_songs"
                          }
                        }
                      },
                      "staff": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "array",
                            "element_type": {
                              "type": "nullable",
                              "underlying_type": {
                                "type": "named",
                                "name": "staff"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_institution_response": {
                    "description": "Responses from the 'v2_insert_institution' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "institution"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_movie_analytics_object": {
                    "fields": {
                      "id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "movie_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "movie_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "num_users_faved": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "num_users_watchlisted": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "num_views_day": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "num_votes_day": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "prev_day_scores": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "total_votes": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_movie_analytics_response": {
                    "description": "Responses from the 'v2_insert_movie_analytics' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "movie_analytics"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_spatial_ref_sys_object": {
                    "fields": {
                      "auth_name": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "auth_srid": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "proj4text": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      },
                      "srid": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "srtext": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_spatial_ref_sys_response": {
                    "description": "Responses from the 'v2_insert_spatial_ref_sys' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "spatial_ref_sys"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_topology_layer_object": {
                    "fields": {
                      "child_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "feature_column": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "feature_type": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "layer_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "level": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "schema_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "table_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "topology_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "v2_insert_topology_layer_response": {
                    "description": "Responses from the 'v2_insert_topology_layer' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_layer"
                          }
                        }
                      }
                    }
                  },
                  "v2_insert_topology_topology_object": {
                    "fields": {
                      "hasz": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      },
                      "id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "precision": {
                        "type": {
                          "type": "named",
                          "name": "float8"
                        }
                      },
                      "srid": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      }
                    }
                  },
                  "v2_insert_topology_topology_response": {
                    "description": "Responses from the 'v2_insert_topology_topology' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_topology"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Album_by_AlbumId_response": {
                    "description": "Responses from the 'v2_update_Album_by_AlbumId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Album"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Album_by_AlbumId_update_columns": {
                    "description": "Update the columns of the 'Album' collection",
                    "fields": {
                      "AlbumId": {
                        "description": "Update the 'AlbumId' column in the 'Album' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Album_AlbumId"
                          }
                        }
                      },
                      "ArtistId": {
                        "description": "Update the 'ArtistId' column in the 'Album' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Album_ArtistId"
                          }
                        }
                      },
                      "Title": {
                        "description": "Update the 'Title' column in the 'Album' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Album_Title"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Artist_by_ArtistId_response": {
                    "description": "Responses from the 'v2_update_Artist_by_ArtistId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Artist"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Artist_by_ArtistId_update_columns": {
                    "description": "Update the columns of the 'Artist' collection",
                    "fields": {
                      "ArtistId": {
                        "description": "Update the 'ArtistId' column in the 'Artist' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Artist_ArtistId"
                          }
                        }
                      },
                      "Name": {
                        "description": "Update the 'Name' column in the 'Artist' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Artist_Name"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Customer_by_CustomerId_response": {
                    "description": "Responses from the 'v2_update_Customer_by_CustomerId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Customer"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Customer_by_CustomerId_update_columns": {
                    "description": "Update the columns of the 'Customer' collection",
                    "fields": {
                      "Address": {
                        "description": "Update the 'Address' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_Address"
                          }
                        }
                      },
                      "City": {
                        "description": "Update the 'City' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_City"
                          }
                        }
                      },
                      "Company": {
                        "description": "Update the 'Company' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_Company"
                          }
                        }
                      },
                      "Country": {
                        "description": "Update the 'Country' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_Country"
                          }
                        }
                      },
                      "CustomerId": {
                        "description": "Update the 'CustomerId' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_CustomerId"
                          }
                        }
                      },
                      "Email": {
                        "description": "Update the 'Email' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_Email"
                          }
                        }
                      },
                      "Fax": {
                        "description": "Update the 'Fax' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_Fax"
                          }
                        }
                      },
                      "FirstName": {
                        "description": "Update the 'FirstName' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_FirstName"
                          }
                        }
                      },
                      "LastName": {
                        "description": "Update the 'LastName' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_LastName"
                          }
                        }
                      },
                      "Phone": {
                        "description": "Update the 'Phone' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_Phone"
                          }
                        }
                      },
                      "PostalCode": {
                        "description": "Update the 'PostalCode' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_PostalCode"
                          }
                        }
                      },
                      "State": {
                        "description": "Update the 'State' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_State"
                          }
                        }
                      },
                      "SupportRepId": {
                        "description": "Update the 'SupportRepId' column in the 'Customer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Customer_SupportRepId"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Employee_by_EmployeeId_response": {
                    "description": "Responses from the 'v2_update_Employee_by_EmployeeId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Employee"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Employee_by_EmployeeId_update_columns": {
                    "description": "Update the columns of the 'Employee' collection",
                    "fields": {
                      "Address": {
                        "description": "Update the 'Address' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_Address"
                          }
                        }
                      },
                      "BirthDate": {
                        "description": "Update the 'BirthDate' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_BirthDate"
                          }
                        }
                      },
                      "City": {
                        "description": "Update the 'City' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_City"
                          }
                        }
                      },
                      "Country": {
                        "description": "Update the 'Country' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_Country"
                          }
                        }
                      },
                      "Email": {
                        "description": "Update the 'Email' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_Email"
                          }
                        }
                      },
                      "EmployeeId": {
                        "description": "Update the 'EmployeeId' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_EmployeeId"
                          }
                        }
                      },
                      "Fax": {
                        "description": "Update the 'Fax' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_Fax"
                          }
                        }
                      },
                      "FirstName": {
                        "description": "Update the 'FirstName' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_FirstName"
                          }
                        }
                      },
                      "HireDate": {
                        "description": "Update the 'HireDate' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_HireDate"
                          }
                        }
                      },
                      "LastName": {
                        "description": "Update the 'LastName' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_LastName"
                          }
                        }
                      },
                      "Phone": {
                        "description": "Update the 'Phone' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_Phone"
                          }
                        }
                      },
                      "PostalCode": {
                        "description": "Update the 'PostalCode' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_PostalCode"
                          }
                        }
                      },
                      "ReportsTo": {
                        "description": "Update the 'ReportsTo' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_ReportsTo"
                          }
                        }
                      },
                      "State": {
                        "description": "Update the 'State' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_State"
                          }
                        }
                      },
                      "Title": {
                        "description": "Update the 'Title' column in the 'Employee' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Employee_Title"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Genre_by_GenreId_response": {
                    "description": "Responses from the 'v2_update_Genre_by_GenreId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Genre"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Genre_by_GenreId_update_columns": {
                    "description": "Update the columns of the 'Genre' collection",
                    "fields": {
                      "GenreId": {
                        "description": "Update the 'GenreId' column in the 'Genre' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Genre_GenreId"
                          }
                        }
                      },
                      "Name": {
                        "description": "Update the 'Name' column in the 'Genre' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Genre_Name"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_InvoiceLine_by_InvoiceLineId_response": {
                    "description": "Responses from the 'v2_update_InvoiceLine_by_InvoiceLineId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "InvoiceLine"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_InvoiceLine_by_InvoiceLineId_update_columns": {
                    "description": "Update the columns of the 'InvoiceLine' collection",
                    "fields": {
                      "InvoiceId": {
                        "description": "Update the 'InvoiceId' column in the 'InvoiceLine' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_InvoiceLine_InvoiceId"
                          }
                        }
                      },
                      "InvoiceLineId": {
                        "description": "Update the 'InvoiceLineId' column in the 'InvoiceLine' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_InvoiceLine_InvoiceLineId"
                          }
                        }
                      },
                      "Quantity": {
                        "description": "Update the 'Quantity' column in the 'InvoiceLine' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_InvoiceLine_Quantity"
                          }
                        }
                      },
                      "TrackId": {
                        "description": "Update the 'TrackId' column in the 'InvoiceLine' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_InvoiceLine_TrackId"
                          }
                        }
                      },
                      "UnitPrice": {
                        "description": "Update the 'UnitPrice' column in the 'InvoiceLine' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_InvoiceLine_UnitPrice"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Invoice_by_InvoiceId_response": {
                    "description": "Responses from the 'v2_update_Invoice_by_InvoiceId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Invoice"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Invoice_by_InvoiceId_update_columns": {
                    "description": "Update the columns of the 'Invoice' collection",
                    "fields": {
                      "BillingAddress": {
                        "description": "Update the 'BillingAddress' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_BillingAddress"
                          }
                        }
                      },
                      "BillingCity": {
                        "description": "Update the 'BillingCity' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_BillingCity"
                          }
                        }
                      },
                      "BillingCountry": {
                        "description": "Update the 'BillingCountry' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_BillingCountry"
                          }
                        }
                      },
                      "BillingPostalCode": {
                        "description": "Update the 'BillingPostalCode' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_BillingPostalCode"
                          }
                        }
                      },
                      "BillingState": {
                        "description": "Update the 'BillingState' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_BillingState"
                          }
                        }
                      },
                      "CustomerId": {
                        "description": "Update the 'CustomerId' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_CustomerId"
                          }
                        }
                      },
                      "InvoiceDate": {
                        "description": "Update the 'InvoiceDate' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_InvoiceDate"
                          }
                        }
                      },
                      "InvoiceId": {
                        "description": "Update the 'InvoiceId' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_InvoiceId"
                          }
                        }
                      },
                      "Total": {
                        "description": "Update the 'Total' column in the 'Invoice' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Invoice_Total"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_MediaType_by_MediaTypeId_response": {
                    "description": "Responses from the 'v2_update_MediaType_by_MediaTypeId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "MediaType"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_MediaType_by_MediaTypeId_update_columns": {
                    "description": "Update the columns of the 'MediaType' collection",
                    "fields": {
                      "MediaTypeId": {
                        "description": "Update the 'MediaTypeId' column in the 'MediaType' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_MediaType_MediaTypeId"
                          }
                        }
                      },
                      "Name": {
                        "description": "Update the 'Name' column in the 'MediaType' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_MediaType_Name"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_PlaylistTrack_by_PlaylistId_and_TrackId_response": {
                    "description": "Responses from the 'v2_update_PlaylistTrack_by_PlaylistId_and_TrackId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "PlaylistTrack"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_PlaylistTrack_by_PlaylistId_and_TrackId_update_columns": {
                    "description": "Update the columns of the 'PlaylistTrack' collection",
                    "fields": {
                      "PlaylistId": {
                        "description": "Update the 'PlaylistId' column in the 'PlaylistTrack' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_PlaylistTrack_PlaylistId"
                          }
                        }
                      },
                      "TrackId": {
                        "description": "Update the 'TrackId' column in the 'PlaylistTrack' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_PlaylistTrack_TrackId"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Playlist_by_PlaylistId_response": {
                    "description": "Responses from the 'v2_update_Playlist_by_PlaylistId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Playlist"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Playlist_by_PlaylistId_update_columns": {
                    "description": "Update the columns of the 'Playlist' collection",
                    "fields": {
                      "Name": {
                        "description": "Update the 'Name' column in the 'Playlist' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Playlist_Name"
                          }
                        }
                      },
                      "PlaylistId": {
                        "description": "Update the 'PlaylistId' column in the 'Playlist' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Playlist_PlaylistId"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Track_by_TrackId_response": {
                    "description": "Responses from the 'v2_update_Track_by_TrackId' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "Track"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_Track_by_TrackId_update_columns": {
                    "description": "Update the columns of the 'Track' collection",
                    "fields": {
                      "AlbumId": {
                        "description": "Update the 'AlbumId' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_AlbumId"
                          }
                        }
                      },
                      "Bytes": {
                        "description": "Update the 'Bytes' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_Bytes"
                          }
                        }
                      },
                      "Composer": {
                        "description": "Update the 'Composer' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_Composer"
                          }
                        }
                      },
                      "GenreId": {
                        "description": "Update the 'GenreId' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_GenreId"
                          }
                        }
                      },
                      "MediaTypeId": {
                        "description": "Update the 'MediaTypeId' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_MediaTypeId"
                          }
                        }
                      },
                      "Milliseconds": {
                        "description": "Update the 'Milliseconds' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_Milliseconds"
                          }
                        }
                      },
                      "Name": {
                        "description": "Update the 'Name' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_Name"
                          }
                        }
                      },
                      "TrackId": {
                        "description": "Update the 'TrackId' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_TrackId"
                          }
                        }
                      },
                      "UnitPrice": {
                        "description": "Update the 'UnitPrice' column in the 'Track' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_Track_UnitPrice"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_article_by_id_response": {
                    "description": "Responses from the 'v2_update_article_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "article"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_article_by_id_update_columns": {
                    "description": "Update the columns of the 'article' collection",
                    "fields": {
                      "author_id": {
                        "description": "Update the 'author_id' column in the 'article' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_article_author_id"
                          }
                        }
                      },
                      "id": {
                        "description": "Update the 'id' column in the 'article' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_article_id"
                          }
                        }
                      },
                      "title": {
                        "description": "Update the 'title' column in the 'article' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_article_title"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_author_by_id_response": {
                    "description": "Responses from the 'v2_update_author_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "author"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_author_by_id_update_columns": {
                    "description": "Update the columns of the 'author' collection",
                    "fields": {
                      "first_name": {
                        "description": "Update the 'first_name' column in the 'author' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_author_first_name"
                          }
                        }
                      },
                      "id": {
                        "description": "Update the 'id' column in the 'author' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_author_id"
                          }
                        }
                      },
                      "last_name": {
                        "description": "Update the 'last_name' column in the 'author' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_author_last_name"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_institution_by_id_response": {
                    "description": "Responses from the 'v2_update_institution_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "institution"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_institution_by_id_update_columns": {
                    "description": "Update the columns of the 'institution' collection",
                    "fields": {
                      "departments": {
                        "description": "Update the 'departments' column in the 'institution' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_institution_departments"
                          }
                        }
                      },
                      "id": {
                        "description": "Update the 'id' column in the 'institution' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_institution_id"
                          }
                        }
                      },
                      "location": {
                        "description": "Update the 'location' column in the 'institution' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_institution_location"
                          }
                        }
                      },
                      "name": {
                        "description": "Update the 'name' column in the 'institution' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_institution_name"
                          }
                        }
                      },
                      "songs": {
                        "description": "Update the 'songs' column in the 'institution' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_institution_songs"
                          }
                        }
                      },
                      "staff": {
                        "description": "Update the 'staff' column in the 'institution' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_institution_staff"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_movie_analytics_by_id_response": {
                    "description": "Responses from the 'v2_update_movie_analytics_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "movie_analytics"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_movie_analytics_by_id_update_columns": {
                    "description": "Update the columns of the 'movie_analytics' collection",
                    "fields": {
                      "id": {
                        "description": "Update the 'id' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_id"
                          }
                        }
                      },
                      "movie_id": {
                        "description": "Update the 'movie_id' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_movie_id"
                          }
                        }
                      },
                      "movie_name": {
                        "description": "Update the 'movie_name' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_movie_name"
                          }
                        }
                      },
                      "num_users_faved": {
                        "description": "Update the 'num_users_faved' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_num_users_faved"
                          }
                        }
                      },
                      "num_users_watchlisted": {
                        "description": "Update the 'num_users_watchlisted' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_num_users_watchlisted"
                          }
                        }
                      },
                      "num_views_day": {
                        "description": "Update the 'num_views_day' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_num_views_day"
                          }
                        }
                      },
                      "num_votes_day": {
                        "description": "Update the 'num_votes_day' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_num_votes_day"
                          }
                        }
                      },
                      "prev_day_scores": {
                        "description": "Update the 'prev_day_scores' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_prev_day_scores"
                          }
                        }
                      },
                      "total_votes": {
                        "description": "Update the 'total_votes' column in the 'movie_analytics' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_movie_analytics_total_votes"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_spatial_ref_sys_by_srid_response": {
                    "description": "Responses from the 'v2_update_spatial_ref_sys_by_srid' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "spatial_ref_sys"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_spatial_ref_sys_by_srid_update_columns": {
                    "description": "Update the columns of the 'spatial_ref_sys' collection",
                    "fields": {
                      "auth_name": {
                        "description": "Update the 'auth_name' column in the 'spatial_ref_sys' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_spatial_ref_sys_auth_name"
                          }
                        }
                      },
                      "auth_srid": {
                        "description": "Update the 'auth_srid' column in the 'spatial_ref_sys' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_spatial_ref_sys_auth_srid"
                          }
                        }
                      },
                      "proj4text": {
                        "description": "Update the 'proj4text' column in the 'spatial_ref_sys' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_spatial_ref_sys_proj4text"
                          }
                        }
                      },
                      "srid": {
                        "description": "Update the 'srid' column in the 'spatial_ref_sys' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_spatial_ref_sys_srid"
                          }
                        }
                      },
                      "srtext": {
                        "description": "Update the 'srtext' column in the 'spatial_ref_sys' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_spatial_ref_sys_srtext"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_layer_by_feature_column_and_schema_name_and_table_name_response": {
                    "description": "Responses from the 'v2_update_topology_layer_by_feature_column_and_schema_name_and_table_name' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_layer"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_layer_by_feature_column_and_schema_name_and_table_name_update_columns": {
                    "description": "Update the columns of the 'topology_layer' collection",
                    "fields": {
                      "child_id": {
                        "description": "Update the 'child_id' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_child_id"
                          }
                        }
                      },
                      "feature_column": {
                        "description": "Update the 'feature_column' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_feature_column"
                          }
                        }
                      },
                      "feature_type": {
                        "description": "Update the 'feature_type' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_feature_type"
                          }
                        }
                      },
                      "layer_id": {
                        "description": "Update the 'layer_id' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_layer_id"
                          }
                        }
                      },
                      "level": {
                        "description": "Update the 'level' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_level"
                          }
                        }
                      },
                      "schema_name": {
                        "description": "Update the 'schema_name' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_schema_name"
                          }
                        }
                      },
                      "table_name": {
                        "description": "Update the 'table_name' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_table_name"
                          }
                        }
                      },
                      "topology_id": {
                        "description": "Update the 'topology_id' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_topology_id"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_layer_by_layer_id_and_topology_id_response": {
                    "description": "Responses from the 'v2_update_topology_layer_by_layer_id_and_topology_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_layer"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_layer_by_layer_id_and_topology_id_update_columns": {
                    "description": "Update the columns of the 'topology_layer' collection",
                    "fields": {
                      "child_id": {
                        "description": "Update the 'child_id' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_child_id"
                          }
                        }
                      },
                      "feature_column": {
                        "description": "Update the 'feature_column' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_feature_column"
                          }
                        }
                      },
                      "feature_type": {
                        "description": "Update the 'feature_type' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_feature_type"
                          }
                        }
                      },
                      "layer_id": {
                        "description": "Update the 'layer_id' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_layer_id"
                          }
                        }
                      },
                      "level": {
                        "description": "Update the 'level' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_level"
                          }
                        }
                      },
                      "schema_name": {
                        "description": "Update the 'schema_name' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_schema_name"
                          }
                        }
                      },
                      "table_name": {
                        "description": "Update the 'table_name' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_table_name"
                          }
                        }
                      },
                      "topology_id": {
                        "description": "Update the 'topology_id' column in the 'topology_layer' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_layer_topology_id"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_topology_by_id_response": {
                    "description": "Responses from the 'v2_update_topology_topology_by_id' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_topology"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_topology_by_id_update_columns": {
                    "description": "Update the columns of the 'topology_topology' collection",
                    "fields": {
                      "hasz": {
                        "description": "Update the 'hasz' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_hasz"
                          }
                        }
                      },
                      "id": {
                        "description": "Update the 'id' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_id"
                          }
                        }
                      },
                      "name": {
                        "description": "Update the 'name' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_name"
                          }
                        }
                      },
                      "precision": {
                        "description": "Update the 'precision' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_precision"
                          }
                        }
                      },
                      "srid": {
                        "description": "Update the 'srid' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_srid"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_topology_by_name_response": {
                    "description": "Responses from the 'v2_update_topology_topology_by_name' procedure",
                    "fields": {
                      "affected_rows": {
                        "description": "The number of rows affected by the mutation",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "returning": {
                        "description": "Data from rows affected by the mutation",
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "topology_topology"
                          }
                        }
                      }
                    }
                  },
                  "v2_update_topology_topology_by_name_update_columns": {
                    "description": "Update the columns of the 'topology_topology' collection",
                    "fields": {
                      "hasz": {
                        "description": "Update the 'hasz' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_hasz"
                          }
                        }
                      },
                      "id": {
                        "description": "Update the 'id' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_id"
                          }
                        }
                      },
                      "name": {
                        "description": "Update the 'name' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_name"
                          }
                        }
                      },
                      "precision": {
                        "description": "Update the 'precision' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_precision"
                          }
                        }
                      },
                      "srid": {
                        "description": "Update the 'srid' column in the 'topology_topology' collection.",
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "update_column_topology_topology_srid"
                          }
                        }
                      }
                    }
                  },
                  "value_types": {
                    "fields": {
                      "bool": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      },
                      "char": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "char"
                          }
                        }
                      },
                      "date": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "date"
                          }
                        }
                      },
                      "float4": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float4"
                          }
                        }
                      },
                      "float8": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "int2": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int2"
                          }
                        }
                      },
                      "int4": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "int8": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "numeric": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "text": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "time": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "time"
                          }
                        }
                      },
                      "timestamp": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      },
                      "timestamptz": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamptz"
                          }
                        }
                      },
                      "timetz": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timetz"
                          }
                        }
                      },
                      "uuid": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "uuid"
                          }
                        }
                      },
                      "varchar": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    }
                  }
                },
                "collections": [
                  {
                    "name": "Album",
                    "description": "The record of all albums",
                    "arguments": {},
                    "type": "Album",
                    "uniqueness_constraints": {
                      "PK_Album": {
                        "unique_columns": ["AlbumId"]
                      }
                    },
                    "foreign_keys": {
                      "FK_AlbumArtistId": {
                        "column_mapping": {
                          "ArtistId": "ArtistId"
                        },
                        "foreign_collection": "Artist"
                      }
                    }
                  },
                  {
                    "name": "Artist",
                    "description": "The record of all artists",
                    "arguments": {},
                    "type": "Artist",
                    "uniqueness_constraints": {
                      "PK_Artist": {
                        "unique_columns": ["ArtistId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "Customer",
                    "description": "The record of all customers",
                    "arguments": {},
                    "type": "Customer",
                    "uniqueness_constraints": {
                      "PK_Customer": {
                        "unique_columns": ["CustomerId"]
                      }
                    },
                    "foreign_keys": {
                      "FK_CustomerSupportRepId": {
                        "column_mapping": {
                          "SupportRepId": "EmployeeId"
                        },
                        "foreign_collection": "Employee"
                      }
                    }
                  },
                  {
                    "name": "Employee",
                    "arguments": {},
                    "type": "Employee",
                    "uniqueness_constraints": {
                      "PK_Employee": {
                        "unique_columns": ["EmployeeId"]
                      }
                    },
                    "foreign_keys": {
                      "FK_EmployeeReportsTo": {
                        "column_mapping": {
                          "ReportsTo": "EmployeeId"
                        },
                        "foreign_collection": "Employee"
                      }
                    }
                  },
                  {
                    "name": "Genre",
                    "arguments": {},
                    "type": "Genre",
                    "uniqueness_constraints": {
                      "PK_Genre": {
                        "unique_columns": ["GenreId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "Invoice",
                    "arguments": {},
                    "type": "Invoice",
                    "uniqueness_constraints": {
                      "PK_Invoice": {
                        "unique_columns": ["InvoiceId"]
                      }
                    },
                    "foreign_keys": {
                      "FK_InvoiceCustomerId": {
                        "column_mapping": {
                          "CustomerId": "CustomerId"
                        },
                        "foreign_collection": "Customer"
                      }
                    }
                  },
                  {
                    "name": "InvoiceLine",
                    "arguments": {},
                    "type": "InvoiceLine",
                    "uniqueness_constraints": {
                      "PK_InvoiceLine": {
                        "unique_columns": ["InvoiceLineId"]
                      }
                    },
                    "foreign_keys": {
                      "FK_InvoiceLineInvoiceId": {
                        "column_mapping": {
                          "InvoiceId": "InvoiceId"
                        },
                        "foreign_collection": "Invoice"
                      },
                      "FK_InvoiceLineTrackId": {
                        "column_mapping": {
                          "TrackId": "TrackId"
                        },
                        "foreign_collection": "Track"
                      }
                    }
                  },
                  {
                    "name": "MediaType",
                    "arguments": {},
                    "type": "MediaType",
                    "uniqueness_constraints": {
                      "PK_MediaType": {
                        "unique_columns": ["MediaTypeId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "Playlist",
                    "arguments": {},
                    "type": "Playlist",
                    "uniqueness_constraints": {
                      "PK_Playlist": {
                        "unique_columns": ["PlaylistId"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "PlaylistTrack",
                    "arguments": {},
                    "type": "PlaylistTrack",
                    "uniqueness_constraints": {
                      "PK_PlaylistTrack": {
                        "unique_columns": ["PlaylistId", "TrackId"]
                      }
                    },
                    "foreign_keys": {
                      "FK_PlaylistTrackPlaylistId": {
                        "column_mapping": {
                          "PlaylistId": "PlaylistId"
                        },
                        "foreign_collection": "Playlist"
                      },
                      "FK_PlaylistTrackTrackId": {
                        "column_mapping": {
                          "TrackId": "TrackId"
                        },
                        "foreign_collection": "Track"
                      }
                    }
                  },
                  {
                    "name": "Track",
                    "arguments": {},
                    "type": "Track",
                    "uniqueness_constraints": {
                      "PK_Track": {
                        "unique_columns": ["TrackId"]
                      }
                    },
                    "foreign_keys": {
                      "FK_TrackAlbumId": {
                        "column_mapping": {
                          "AlbumId": "AlbumId"
                        },
                        "foreign_collection": "Album"
                      },
                      "FK_TrackGenreId": {
                        "column_mapping": {
                          "GenreId": "GenreId"
                        },
                        "foreign_collection": "Genre"
                      },
                      "FK_TrackMediaTypeId": {
                        "column_mapping": {
                          "MediaTypeId": "MediaTypeId"
                        },
                        "foreign_collection": "MediaType"
                      }
                    }
                  },
                  {
                    "name": "article",
                    "arguments": {},
                    "type": "article",
                    "uniqueness_constraints": {
                      "article_pkey": {
                        "unique_columns": ["id"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "author",
                    "arguments": {},
                    "type": "author",
                    "uniqueness_constraints": {
                      "author_pkey": {
                        "unique_columns": ["id"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "institution",
                    "arguments": {},
                    "type": "institution",
                    "uniqueness_constraints": {
                      "institution_pkey": {
                        "unique_columns": ["id"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "movie_analytics",
                    "arguments": {},
                    "type": "movie_analytics",
                    "uniqueness_constraints": {
                      "movie_analytics_pkey": {
                        "unique_columns": ["id"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "spatial_ref_sys",
                    "arguments": {},
                    "type": "spatial_ref_sys",
                    "uniqueness_constraints": {
                      "spatial_ref_sys_pkey": {
                        "unique_columns": ["srid"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "topology_layer",
                    "arguments": {},
                    "type": "topology_layer",
                    "uniqueness_constraints": {
                      "layer_pkey": {
                        "unique_columns": ["layer_id", "topology_id"]
                      },
                      "layer_schema_name_table_name_feature_column_key": {
                        "unique_columns": [
                          "feature_column",
                          "schema_name",
                          "table_name"
                        ]
                      }
                    },
                    "foreign_keys": {
                      "layer_topology_id_fkey": {
                        "column_mapping": {
                          "topology_id": "id"
                        },
                        "foreign_collection": "topology_topology"
                      }
                    }
                  },
                  {
                    "name": "topology_topology",
                    "arguments": {},
                    "type": "topology_topology",
                    "uniqueness_constraints": {
                      "topology_name_key": {
                        "unique_columns": ["name"]
                      },
                      "topology_pkey": {
                        "unique_columns": ["id"]
                      }
                    },
                    "foreign_keys": {}
                  },
                  {
                    "name": "album_by_title",
                    "arguments": {
                      "id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "title": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    },
                    "type": "album_by_title",
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  },
                  {
                    "name": "articles_by_author",
                    "arguments": {
                      "author_id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    },
                    "type": "articles_by_author",
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  },
                  {
                    "name": "artist",
                    "arguments": {},
                    "type": "artist",
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  },
                  {
                    "name": "artist_below_id",
                    "arguments": {
                      "id": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      }
                    },
                    "type": "artist_below_id",
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  },
                  {
                    "name": "value_types",
                    "arguments": {
                      "bool": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "bool"
                          }
                        }
                      },
                      "char": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "char"
                          }
                        }
                      },
                      "date": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "date"
                          }
                        }
                      },
                      "float4": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float4"
                          }
                        }
                      },
                      "float8": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "float8"
                          }
                        }
                      },
                      "int2": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int2"
                          }
                        }
                      },
                      "int4": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int4"
                          }
                        }
                      },
                      "int8": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "int8"
                          }
                        }
                      },
                      "numeric": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "numeric"
                          }
                        }
                      },
                      "text": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "text"
                          }
                        }
                      },
                      "time": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "time"
                          }
                        }
                      },
                      "timestamp": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamp"
                          }
                        }
                      },
                      "timestamptz": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timestamptz"
                          }
                        }
                      },
                      "timetz": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "timetz"
                          }
                        }
                      },
                      "uuid": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "uuid"
                          }
                        }
                      },
                      "varchar": {
                        "type": {
                          "type": "nullable",
                          "underlying_type": {
                            "type": "named",
                            "name": "varchar"
                          }
                        }
                      }
                    },
                    "type": "value_types",
                    "uniqueness_constraints": {},
                    "foreign_keys": {}
                  }
                ],
                "functions": [],
                "procedures": [
                  {
                    "name": "v2_delete_Album_by_AlbumId",
                    "description": "Delete any row on the 'Album' collection using the 'AlbumId' key",
                    "arguments": {
                      "key_AlbumId": {
                        "description": "The identifier of an album",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Album' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Album"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Album_by_AlbumId_response"
                    }
                  },
                  {
                    "name": "v2_delete_Artist_by_ArtistId",
                    "description": "Delete any row on the 'Artist' collection using the 'ArtistId' key",
                    "arguments": {
                      "key_ArtistId": {
                        "description": "The identifier of an artist",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Artist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Artist"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Artist_by_ArtistId_response"
                    }
                  },
                  {
                    "name": "v2_delete_Customer_by_CustomerId",
                    "description": "Delete any row on the 'Customer' collection using the 'CustomerId' key",
                    "arguments": {
                      "key_CustomerId": {
                        "description": "The identifier of customer",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Customer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Customer"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Customer_by_CustomerId_response"
                    }
                  },
                  {
                    "name": "v2_delete_Employee_by_EmployeeId",
                    "description": "Delete any row on the 'Employee' collection using the 'EmployeeId' key",
                    "arguments": {
                      "key_EmployeeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Employee' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Employee"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Employee_by_EmployeeId_response"
                    }
                  },
                  {
                    "name": "v2_delete_Genre_by_GenreId",
                    "description": "Delete any row on the 'Genre' collection using the 'GenreId' key",
                    "arguments": {
                      "key_GenreId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Genre' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Genre"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Genre_by_GenreId_response"
                    }
                  },
                  {
                    "name": "v2_delete_InvoiceLine_by_InvoiceLineId",
                    "description": "Delete any row on the 'InvoiceLine' collection using the 'InvoiceLineId' key",
                    "arguments": {
                      "key_InvoiceLineId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'InvoiceLine' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "InvoiceLine"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_InvoiceLine_by_InvoiceLineId_response"
                    }
                  },
                  {
                    "name": "v2_delete_Invoice_by_InvoiceId",
                    "description": "Delete any row on the 'Invoice' collection using the 'InvoiceId' key",
                    "arguments": {
                      "key_InvoiceId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Invoice' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Invoice"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Invoice_by_InvoiceId_response"
                    }
                  },
                  {
                    "name": "v2_delete_MediaType_by_MediaTypeId",
                    "description": "Delete any row on the 'MediaType' collection using the 'MediaTypeId' key",
                    "arguments": {
                      "key_MediaTypeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'MediaType' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "MediaType"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_MediaType_by_MediaTypeId_response"
                    }
                  },
                  {
                    "name": "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId",
                    "description": "Delete any row on the 'PlaylistTrack' collection using the 'PlaylistId' and 'TrackId' keys",
                    "arguments": {
                      "key_PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "key_TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'PlaylistTrack' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "PlaylistTrack"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_PlaylistTrack_by_PlaylistId_and_TrackId_response"
                    }
                  },
                  {
                    "name": "v2_delete_Playlist_by_PlaylistId",
                    "description": "Delete any row on the 'Playlist' collection using the 'PlaylistId' key",
                    "arguments": {
                      "key_PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Playlist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Playlist"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Playlist_by_PlaylistId_response"
                    }
                  },
                  {
                    "name": "v2_delete_Track_by_TrackId",
                    "description": "Delete any row on the 'Track' collection using the 'TrackId' key",
                    "arguments": {
                      "key_TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'Track' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Track"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_Track_by_TrackId_response"
                    }
                  },
                  {
                    "name": "v2_delete_article_by_id",
                    "description": "Delete any row on the 'article' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'article' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "article"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_article_by_id_response"
                    }
                  },
                  {
                    "name": "v2_delete_author_by_id",
                    "description": "Delete any row on the 'author' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'author' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "author"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_author_by_id_response"
                    }
                  },
                  {
                    "name": "v2_delete_institution_by_id",
                    "description": "Delete any row on the 'institution' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'institution' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "institution"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_institution_by_id_response"
                    }
                  },
                  {
                    "name": "v2_delete_movie_analytics_by_id",
                    "description": "Delete any row on the 'movie_analytics' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'movie_analytics' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "movie_analytics"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_movie_analytics_by_id_response"
                    }
                  },
                  {
                    "name": "v2_delete_spatial_ref_sys_by_srid",
                    "description": "Delete any row on the 'spatial_ref_sys' collection using the 'srid' key",
                    "arguments": {
                      "key_srid": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'spatial_ref_sys' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "spatial_ref_sys"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_spatial_ref_sys_by_srid_response"
                    }
                  },
                  {
                    "name": "v2_delete_topology_layer_by_feature_column_and_schema_name_and_table_name",
                    "description": "Delete any row on the 'topology_layer' collection using the 'feature_column', 'schema_name' and 'table_name' keys",
                    "arguments": {
                      "key_feature_column": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "key_schema_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "key_table_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'topology_layer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_layer"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_topology_layer_by_feature_column_and_schema_name_and_table_name_response"
                    }
                  },
                  {
                    "name": "v2_delete_topology_layer_by_layer_id_and_topology_id",
                    "description": "Delete any row on the 'topology_layer' collection using the 'layer_id' and 'topology_id' keys",
                    "arguments": {
                      "key_layer_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "key_topology_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'topology_layer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_layer"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_topology_layer_by_layer_id_and_topology_id_response"
                    }
                  },
                  {
                    "name": "v2_delete_topology_topology_by_id",
                    "description": "Delete any row on the 'topology_topology' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'topology_topology' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_topology"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_topology_topology_by_id_response"
                    }
                  },
                  {
                    "name": "v2_delete_topology_topology_by_name",
                    "description": "Delete any row on the 'topology_topology' collection using the 'name' key",
                    "arguments": {
                      "key_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "pre_check": {
                        "description": "Delete permission predicate over the 'topology_topology' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_topology"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_delete_topology_topology_by_name_response"
                    }
                  },
                  {
                    "name": "v2_insert_Album",
                    "description": "Insert into the Album table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Album_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Album' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Album"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Album_response"
                    }
                  },
                  {
                    "name": "v2_insert_Artist",
                    "description": "Insert into the Artist table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Artist_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Artist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Artist"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Artist_response"
                    }
                  },
                  {
                    "name": "v2_insert_Customer",
                    "description": "Insert into the Customer table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Customer_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Customer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Customer"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Customer_response"
                    }
                  },
                  {
                    "name": "v2_insert_Employee",
                    "description": "Insert into the Employee table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Employee_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Employee' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Employee"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Employee_response"
                    }
                  },
                  {
                    "name": "v2_insert_Genre",
                    "description": "Insert into the Genre table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Genre_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Genre' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Genre"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Genre_response"
                    }
                  },
                  {
                    "name": "v2_insert_Invoice",
                    "description": "Insert into the Invoice table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Invoice_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Invoice' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Invoice"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Invoice_response"
                    }
                  },
                  {
                    "name": "v2_insert_InvoiceLine",
                    "description": "Insert into the InvoiceLine table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_InvoiceLine_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'InvoiceLine' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "InvoiceLine"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_InvoiceLine_response"
                    }
                  },
                  {
                    "name": "v2_insert_MediaType",
                    "description": "Insert into the MediaType table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_MediaType_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'MediaType' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "MediaType"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_MediaType_response"
                    }
                  },
                  {
                    "name": "v2_insert_Playlist",
                    "description": "Insert into the Playlist table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Playlist_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Playlist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Playlist"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Playlist_response"
                    }
                  },
                  {
                    "name": "v2_insert_PlaylistTrack",
                    "description": "Insert into the PlaylistTrack table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_PlaylistTrack_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'PlaylistTrack' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "PlaylistTrack"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_PlaylistTrack_response"
                    }
                  },
                  {
                    "name": "v2_insert_Track",
                    "description": "Insert into the Track table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_Track_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'Track' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Track"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_Track_response"
                    }
                  },
                  {
                    "name": "v2_insert_article",
                    "description": "Insert into the article table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_article_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'article' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "article"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_article_response"
                    }
                  },
                  {
                    "name": "v2_insert_author",
                    "description": "Insert into the author table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_author_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'author' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "author"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_author_response"
                    }
                  },
                  {
                    "name": "v2_insert_institution",
                    "description": "Insert into the institution table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_institution_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'institution' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "institution"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_institution_response"
                    }
                  },
                  {
                    "name": "v2_insert_movie_analytics",
                    "description": "Insert into the movie_analytics table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_movie_analytics_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'movie_analytics' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "movie_analytics"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_movie_analytics_response"
                    }
                  },
                  {
                    "name": "v2_insert_spatial_ref_sys",
                    "description": "Insert into the spatial_ref_sys table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_spatial_ref_sys_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'spatial_ref_sys' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "spatial_ref_sys"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_spatial_ref_sys_response"
                    }
                  },
                  {
                    "name": "v2_insert_topology_layer",
                    "description": "Insert into the topology_layer table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_topology_layer_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'topology_layer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_layer"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_topology_layer_response"
                    }
                  },
                  {
                    "name": "v2_insert_topology_topology",
                    "description": "Insert into the topology_topology table",
                    "arguments": {
                      "objects": {
                        "type": {
                          "type": "array",
                          "element_type": {
                            "type": "named",
                            "name": "v2_insert_topology_topology_object"
                          }
                        }
                      },
                      "post_check": {
                        "description": "Insert permission predicate over the 'topology_topology' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_topology"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_insert_topology_topology_response"
                    }
                  },
                  {
                    "name": "v2_update_Album_by_AlbumId",
                    "description": "Update any row on the 'Album' collection using the 'AlbumId' key",
                    "arguments": {
                      "key_AlbumId": {
                        "description": "The identifier of an album",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Album' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Album"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Album' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Album"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Album_by_AlbumId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Album_by_AlbumId_response"
                    }
                  },
                  {
                    "name": "v2_update_Artist_by_ArtistId",
                    "description": "Update any row on the 'Artist' collection using the 'ArtistId' key",
                    "arguments": {
                      "key_ArtistId": {
                        "description": "The identifier of an artist",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Artist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Artist"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Artist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Artist"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Artist_by_ArtistId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Artist_by_ArtistId_response"
                    }
                  },
                  {
                    "name": "v2_update_Customer_by_CustomerId",
                    "description": "Update any row on the 'Customer' collection using the 'CustomerId' key",
                    "arguments": {
                      "key_CustomerId": {
                        "description": "The identifier of customer",
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Customer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Customer"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Customer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Customer"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Customer_by_CustomerId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Customer_by_CustomerId_response"
                    }
                  },
                  {
                    "name": "v2_update_Employee_by_EmployeeId",
                    "description": "Update any row on the 'Employee' collection using the 'EmployeeId' key",
                    "arguments": {
                      "key_EmployeeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Employee' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Employee"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Employee' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Employee"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Employee_by_EmployeeId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Employee_by_EmployeeId_response"
                    }
                  },
                  {
                    "name": "v2_update_Genre_by_GenreId",
                    "description": "Update any row on the 'Genre' collection using the 'GenreId' key",
                    "arguments": {
                      "key_GenreId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Genre' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Genre"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Genre' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Genre"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Genre_by_GenreId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Genre_by_GenreId_response"
                    }
                  },
                  {
                    "name": "v2_update_InvoiceLine_by_InvoiceLineId",
                    "description": "Update any row on the 'InvoiceLine' collection using the 'InvoiceLineId' key",
                    "arguments": {
                      "key_InvoiceLineId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'InvoiceLine' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "InvoiceLine"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'InvoiceLine' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "InvoiceLine"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_InvoiceLine_by_InvoiceLineId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_InvoiceLine_by_InvoiceLineId_response"
                    }
                  },
                  {
                    "name": "v2_update_Invoice_by_InvoiceId",
                    "description": "Update any row on the 'Invoice' collection using the 'InvoiceId' key",
                    "arguments": {
                      "key_InvoiceId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Invoice' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Invoice"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Invoice' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Invoice"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Invoice_by_InvoiceId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Invoice_by_InvoiceId_response"
                    }
                  },
                  {
                    "name": "v2_update_MediaType_by_MediaTypeId",
                    "description": "Update any row on the 'MediaType' collection using the 'MediaTypeId' key",
                    "arguments": {
                      "key_MediaTypeId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'MediaType' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "MediaType"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'MediaType' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "MediaType"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_MediaType_by_MediaTypeId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_MediaType_by_MediaTypeId_response"
                    }
                  },
                  {
                    "name": "v2_update_PlaylistTrack_by_PlaylistId_and_TrackId",
                    "description": "Update any row on the 'PlaylistTrack' collection using the 'PlaylistId' and 'TrackId' keys",
                    "arguments": {
                      "key_PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "key_TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'PlaylistTrack' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "PlaylistTrack"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'PlaylistTrack' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "PlaylistTrack"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_PlaylistTrack_by_PlaylistId_and_TrackId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_PlaylistTrack_by_PlaylistId_and_TrackId_response"
                    }
                  },
                  {
                    "name": "v2_update_Playlist_by_PlaylistId",
                    "description": "Update any row on the 'Playlist' collection using the 'PlaylistId' key",
                    "arguments": {
                      "key_PlaylistId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Playlist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Playlist"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Playlist' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Playlist"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Playlist_by_PlaylistId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Playlist_by_PlaylistId_response"
                    }
                  },
                  {
                    "name": "v2_update_Track_by_TrackId",
                    "description": "Update any row on the 'Track' collection using the 'TrackId' key",
                    "arguments": {
                      "key_TrackId": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'Track' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Track"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'Track' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "Track"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_Track_by_TrackId_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_Track_by_TrackId_response"
                    }
                  },
                  {
                    "name": "v2_update_article_by_id",
                    "description": "Update any row on the 'article' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'article' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "article"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'article' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "article"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_article_by_id_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_article_by_id_response"
                    }
                  },
                  {
                    "name": "v2_update_author_by_id",
                    "description": "Update any row on the 'author' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'author' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "author"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'author' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "author"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_author_by_id_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_author_by_id_response"
                    }
                  },
                  {
                    "name": "v2_update_institution_by_id",
                    "description": "Update any row on the 'institution' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'institution' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "institution"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'institution' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "institution"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_institution_by_id_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_institution_by_id_response"
                    }
                  },
                  {
                    "name": "v2_update_movie_analytics_by_id",
                    "description": "Update any row on the 'movie_analytics' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'movie_analytics' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "movie_analytics"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'movie_analytics' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "movie_analytics"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_movie_analytics_by_id_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_movie_analytics_by_id_response"
                    }
                  },
                  {
                    "name": "v2_update_spatial_ref_sys_by_srid",
                    "description": "Update any row on the 'spatial_ref_sys' collection using the 'srid' key",
                    "arguments": {
                      "key_srid": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'spatial_ref_sys' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "spatial_ref_sys"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'spatial_ref_sys' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "spatial_ref_sys"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_spatial_ref_sys_by_srid_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_spatial_ref_sys_by_srid_response"
                    }
                  },
                  {
                    "name": "v2_update_topology_layer_by_feature_column_and_schema_name_and_table_name",
                    "description": "Update any row on the 'topology_layer' collection using the 'feature_column', 'schema_name' and 'table_name' keys",
                    "arguments": {
                      "key_feature_column": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "key_schema_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "key_table_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'topology_layer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_layer"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'topology_layer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_layer"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_topology_layer_by_feature_column_and_schema_name_and_table_name_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_topology_layer_by_feature_column_and_schema_name_and_table_name_response"
                    }
                  },
                  {
                    "name": "v2_update_topology_layer_by_layer_id_and_topology_id",
                    "description": "Update any row on the 'topology_layer' collection using the 'layer_id' and 'topology_id' keys",
                    "arguments": {
                      "key_layer_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "key_topology_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'topology_layer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_layer"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'topology_layer' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_layer"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_topology_layer_by_layer_id_and_topology_id_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_topology_layer_by_layer_id_and_topology_id_response"
                    }
                  },
                  {
                    "name": "v2_update_topology_topology_by_id",
                    "description": "Update any row on the 'topology_topology' collection using the 'id' key",
                    "arguments": {
                      "key_id": {
                        "type": {
                          "type": "named",
                          "name": "int4"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'topology_topology' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_topology"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'topology_topology' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_topology"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_topology_topology_by_id_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_topology_topology_by_id_response"
                    }
                  },
                  {
                    "name": "v2_update_topology_topology_by_name",
                    "description": "Update any row on the 'topology_topology' collection using the 'name' key",
                    "arguments": {
                      "key_name": {
                        "type": {
                          "type": "named",
                          "name": "varchar"
                        }
                      },
                      "post_check": {
                        "description": "Update permission post-condition predicate over the 'topology_topology' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_topology"
                        }
                      },
                      "pre_check": {
                        "description": "Update permission pre-condition predicate over the 'topology_topology' collection",
                        "type": {
                          "type": "predicate",
                          "object_type_name": "topology_topology"
                        }
                      },
                      "update_columns": {
                        "type": {
                          "type": "named",
                          "name": "v2_update_topology_topology_by_name_update_columns"
                        }
                      }
                    },
                    "result_type": {
                      "type": "named",
                      "name": "v2_update_topology_topology_by_name_response"
                    }
                  }
                ]
              },
              "capabilities": {
                "version": "0.1.6",
                "capabilities": {
                  "query": {
                    "aggregates": {},
                    "variables": {},
                    "explain": {},
                    "nested_fields": {
                      "filter_by": {},
                      "order_by": {}
                    },
                    "exists": {
                      "nested_collections": {}
                    }
                  },
                  "mutation": {
                    "transactional": {},
                    "explain": {}
                  },
                  "relationships": {
                    "relation_comparisons": {},
                    "order_by_aggregate": {}
                  }
                }
              }
            }
          },
          "version": "v1",
          "kind": "DataConnectorLink"
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "int4",
            "graphql": {
              "typeName": "int4"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "varchar",
            "graphql": {
              "typeName": "varchar"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "text",
            "representation": "String",
            "graphql": {
              "comparisonExpressionTypeName": "textComparisonExp"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "int4",
            "representation": "int4",
            "graphql": {
              "comparisonExpressionTypeName": "int4ComparisonExp"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "varchar",
            "representation": "varchar",
            "graphql": {
              "comparisonExpressionTypeName": "varcharComparisonExp"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Album",
            "graphql": {
              "typeName": "album",
              "inputTypeName": "albumInput"
            },
            "fields": [
              {
                "name": "AlbumId",
                "type": "int4!"
              },
              {
                "name": "ArtistId",
                "type": "int4!"
              },
              {
                "name": "Title",
                "type": "varchar!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Album",
                "fieldMapping": {
                  "AlbumId": {
                    "column": {
                      "name": "AlbumId"
                    }
                  },
                  "ArtistId": {
                    "column": {
                      "name": "ArtistId"
                    }
                  },
                  "Title": {
                    "column": {
                      "name": "Title"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "artist_bool_exp",
            "operand": {
              "object": {
                "type": "Artist",
                "comparableFields": [
                  {
                    "fieldName": "ArtistId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "Name",
                    "booleanExpressionType": "varchar_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": false
            },
            "graphql": {
              "typeName": "ArtistBoolExp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "varchar_bool_exp",
            "operand": {
              "scalar": {
                "type": "varchar",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_ilike",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[varchar!]!"
                  },
                  {
                    "name": "_iregex",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_like",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_nilike",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_niregex",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_nlike",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_nregex",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "_regex",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "st_coveredby",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "st_covers",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "st_intersects",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "st_relatematch",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "starts_with",
                    "argumentType": "varchar!"
                  },
                  {
                    "name": "ts_match_tt",
                    "argumentType": "varchar!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "db",
                    "dataConnectorScalarType": "varchar",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "varchar_bool_exp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "String_bool_exp",
            "operand": {
              "scalar": {
                "type": "String",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_ilike",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[String!]!"
                  },
                  {
                    "name": "_iregex",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_like",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_nilike",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_niregex",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_nlike",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_nregex",
                    "argumentType": "String!"
                  },
                  {
                    "name": "_regex",
                    "argumentType": "String!"
                  },
                  {
                    "name": "st_coveredby",
                    "argumentType": "String!"
                  },
                  {
                    "name": "st_covers",
                    "argumentType": "String!"
                  },
                  {
                    "name": "st_intersects",
                    "argumentType": "String!"
                  },
                  {
                    "name": "st_relatematch",
                    "argumentType": "String!"
                  },
                  {
                    "name": "starts_with",
                    "argumentType": "String!"
                  },
                  {
                    "name": "ts_match_tt",
                    "argumentType": "String!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "db",
                    "dataConnectorScalarType": "text",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "String_bool_exp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "int4_bool_exp",
            "operand": {
              "scalar": {
                "type": "int4",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "int4!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "int4!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "int4!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[int4!]!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "int4!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "int4!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "int4!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "db",
                    "dataConnectorScalarType": "int4",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "int4_bool_exp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Int_bool_exp",
            "operand": {
              "scalar": {
                "type": "Int",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "Int!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "Int!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "Int!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[Int!]!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "Int!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "Int!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "Int!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "db",
                    "dataConnectorScalarType": "int4",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "Int_bool_exp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "numeric_bool_exp",
            "operand": {
              "scalar": {
                "type": "numeric",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "numeric!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "numeric!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "numeric!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[numeric!]!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "numeric!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "numeric!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "numeric!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "db",
                    "dataConnectorScalarType": "numeric",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "numeric_bool_exp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "CustomInt_bool_exp",
            "operand": {
              "scalar": {
                "type": "CustomInt",
                "comparisonOperators": [
                  {
                    "name": "_eq",
                    "argumentType": "CustomInt!"
                  },
                  {
                    "name": "_gt",
                    "argumentType": "CustomInt!"
                  },
                  {
                    "name": "_gte",
                    "argumentType": "CustomInt!"
                  },
                  {
                    "name": "_in",
                    "argumentType": "[CustomInt!]!"
                  },
                  {
                    "name": "_lt",
                    "argumentType": "CustomInt!"
                  },
                  {
                    "name": "_lte",
                    "argumentType": "CustomInt!"
                  },
                  {
                    "name": "_neq",
                    "argumentType": "CustomInt!"
                  }
                ],
                "dataConnectorOperatorMapping": [
                  {
                    "dataConnectorName": "db",
                    "dataConnectorScalarType": "int8",
                    "operatorMapping": {}
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "CustomInt_bool_exp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "album_bool_exp",
            "operand": {
              "object": {
                "type": "Album",
                "comparableFields": [
                  {
                    "fieldName": "AlbumId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "ArtistId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "Title",
                    "booleanExpressionType": "varchar_bool_exp"
                  }
                ],
                "comparableRelationships": [
                  {
                    "relationshipName": "Artist",
                    "booleanExpressionType": "artist_bool_exp"
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": false
            },
            "graphql": {
              "typeName": "AlbumBoolExp"
            }
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "int4_order_by",
            "operand": {
              "scalar": {
                "orderedType": "int4",
                "enableOrderByDirections": {
                  "enableAll": true
                }
              }
            },
            "graphql": {
              "expressionTypeName": "int4_order_by"
            }
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "String_order_by",
            "operand": {
              "scalar": {
                "orderedType": "String",
                "enableOrderByDirections": {
                  "enableAll": true
                }
              }
            },
            "graphql": {
              "expressionTypeName": "String_order_by"
            }
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "varchar_order_by",
            "operand": {
              "scalar": {
                "orderedType": "varchar",
                "enableOrderByDirections": {
                  "enableAll": true
                }
              }
            },
            "graphql": {
              "expressionTypeName": "varchar_order_by"
            }
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "numeric_order_by",
            "operand": {
              "scalar": {
                "orderedType": "numeric",
                "enableOrderByDirections": {
                  "enableAll": true
                }
              }
            },
            "graphql": {
              "expressionTypeName": "numeric_order_by"
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Album",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["AlbumId", "ArtistId", "Title"]
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "article",
            "fields": [
              {
                "name": "article_id",
                "type": "Int!"
              },
              {
                "name": "title",
                "type": "String!"
              },
              {
                "name": "author_id",
                "type": "CustomInt!"
              }
            ],
            "globalIdFields": ["article_id"],
            "graphql": {
              "typeName": "Article"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "article",
                "fieldMapping": {
                  "article_id": {
                    "column": {
                      "name": "id"
                    }
                  },
                  "title": {
                    "column": {
                      "name": "title"
                    }
                  },
                  "author_id": {
                    "column": {
                      "name": "author_id"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "article_bool_exp",
            "operand": {
              "object": {
                "type": "article",
                "comparableFields": [
                  {
                    "fieldName": "author_id",
                    "booleanExpressionType": "CustomInt_bool_exp"
                  },
                  {
                    "fieldName": "article_id",
                    "booleanExpressionType": "Int_bool_exp"
                  },
                  {
                    "fieldName": "title",
                    "booleanExpressionType": "String_bool_exp"
                  }
                ],
                "comparableRelationships": [
                  {
                    "relationshipName": "Author",
                    "booleanExpressionType": "author_bool_exp"
                  }
                ]
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": false
            },
            "graphql": {
              "typeName": "Article_Where_Exp"
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "article",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["article_id", "title", "author_id"]
                }
              },
              {
                "role": "user_1",
                "output": {
                  "allowedFields": ["article_id", "author_id"]
                }
              },
              {
                "role": "user_2",
                "output": {
                  "allowedFields": ["article_id", "title"]
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "author",
            "description": "author description",
            "fields": [
              {
                "name": "author_id",
                "type": "CustomInt!",
                "description": "author_id description"
              },
              {
                "name": "first_name",
                "type": "String!"
              },
              {
                "name": "last_name",
                "type": "String!"
              }
            ],
            "globalIdFields": ["author_id"],
            "graphql": {
              "typeName": "Author"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "author",
                "fieldMapping": {
                  "author_id": {
                    "column": {
                      "name": "id"
                    }
                  },
                  "first_name": {
                    "column": {
                      "name": "first_name"
                    }
                  },
                  "last_name": {
                    "column": {
                      "name": "last_name"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "author_bool_exp",
            "operand": {
              "object": {
                "type": "author",
                "comparableFields": [
                  {
                    "fieldName": "author_id",
                    "booleanExpressionType": "CustomInt_bool_exp"
                  },
                  {
                    "fieldName": "first_name",
                    "booleanExpressionType": "String_bool_exp"
                  },
                  {
                    "fieldName": "last_name",
                    "booleanExpressionType": "String_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": false
            },
            "graphql": {
              "typeName": "Author_Where_Exp"
            }
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "author",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["author_id", "first_name"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Articles",
            "objectType": "article",
            "globalIdSource": true,
            "source": {
              "dataConnectorName": "db",
              "collection": "article"
            },
            "filterExpressionType": "article_bool_exp",
            "orderableFields": [
              {
                "fieldName": "article_id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "title",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "author_id",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "ArticleByID",
                  "uniqueIdentifier": ["article_id"]
                }
              ],
              "selectMany": {
                "queryRootField": "ArticleMany"
              },
              "orderByExpressionType": "Article_Order_By"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Articles",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              },
              {
                "role": "user_1",
                "select": {
                  "filter": {
                    "fieldComparison": {
                      "field": "author_id",
                      "operator": "_eq",
                      "value": {
                        "sessionVariable": "x-hasura-user-id"
                      }
                    }
                  }
                }
              },
              {
                "role": "user_2",
                "select": {
                  "filter": {
                    "and": [
                      {
                        "fieldComparison": {
                          "field": "title",
                          "operator": "_like",
                          "value": {
                            "literal": "%Functional%"
                          }
                        }
                      },
                      {
                        "not": {
                          "fieldIsNull": {
                            "field": "author_id"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Authors",
            "objectType": "author",
            "description": "top level Authors model description",
            "globalIdSource": true,
            "source": {
              "dataConnectorName": "db",
              "collection": "author"
            },
            "filterExpressionType": "author_bool_exp",
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "AuthorByID",
                  "description": "AuthorByID description",
                  "uniqueIdentifier": ["author_id"]
                }
              ],
              "selectMany": {
                "queryRootField": "AuthorMany"
              },
              "orderByExpressionType": "Author_Order_By"
            },
            "orderableFields": [
              {
                "fieldName": "author_id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "first_name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "last_name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ]
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Authors",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Album",
            "objectType": "Album",
            "orderableFields": [
              {
                "fieldName": "AlbumId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "ArtistId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Title",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "filterExpressionType": "album_bool_exp",
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "AlbumByID",
                  "uniqueIdentifier": ["AlbumId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Album"
              },
              "orderByExpressionType": "AlbumOrderBy"
            },
            "source": {
              "collection": "Album",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Album",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Artist",
            "graphql": {
              "typeName": "artist",
              "inputTypeName": "artistInput",
              "apolloFederation": {
                "keys": [
                  {
                    "fields": ["ArtistId"]
                  }
                ]
              }
            },
            "fields": [
              {
                "name": "ArtistId",
                "type": "int4!"
              },
              {
                "name": "Name",
                "type": "varchar"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Artist",
                "fieldMapping": {
                  "ArtistId": {
                    "column": {
                      "name": "ArtistId"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Artist",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["ArtistId", "Name"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Artist",
            "objectType": "Artist",
            "orderableFields": [
              {
                "fieldName": "ArtistId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "filterExpressionType": "artist_bool_exp",
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "ArtistByID",
                  "uniqueIdentifier": ["ArtistId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Artist"
              },
              "orderByExpressionType": "ArtistOrderBy",
              "apolloFederation": {
                "entitySource": true
              }
            },
            "source": {
              "collection": "Artist",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Artist",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Customer",
            "graphql": {
              "typeName": "customer",
              "inputTypeName": "customerInput"
            },
            "fields": [
              {
                "name": "Address",
                "type": "varchar"
              },
              {
                "name": "City",
                "type": "varchar"
              },
              {
                "name": "Company",
                "type": "varchar"
              },
              {
                "name": "Country",
                "type": "varchar"
              },
              {
                "name": "CustomerId",
                "type": "int4!"
              },
              {
                "name": "Email",
                "type": "varchar!"
              },
              {
                "name": "Fax",
                "type": "varchar"
              },
              {
                "name": "FirstName",
                "type": "varchar!"
              },
              {
                "name": "LastName",
                "type": "varchar!"
              },
              {
                "name": "Phone",
                "type": "varchar"
              },
              {
                "name": "PostalCode",
                "type": "varchar"
              },
              {
                "name": "State",
                "type": "varchar"
              },
              {
                "name": "SupportRepId",
                "type": "int4"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Customer",
                "fieldMapping": {
                  "Address": {
                    "column": {
                      "name": "Address"
                    }
                  },
                  "City": {
                    "column": {
                      "name": "City"
                    }
                  },
                  "Company": {
                    "column": {
                      "name": "Company"
                    }
                  },
                  "Country": {
                    "column": {
                      "name": "Country"
                    }
                  },
                  "CustomerId": {
                    "column": {
                      "name": "CustomerId"
                    }
                  },
                  "Email": {
                    "column": {
                      "name": "Email"
                    }
                  },
                  "Fax": {
                    "column": {
                      "name": "Fax"
                    }
                  },
                  "FirstName": {
                    "column": {
                      "name": "FirstName"
                    }
                  },
                  "LastName": {
                    "column": {
                      "name": "LastName"
                    }
                  },
                  "Phone": {
                    "column": {
                      "name": "Phone"
                    }
                  },
                  "PostalCode": {
                    "column": {
                      "name": "PostalCode"
                    }
                  },
                  "State": {
                    "column": {
                      "name": "State"
                    }
                  },
                  "SupportRepId": {
                    "column": {
                      "name": "SupportRepId"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Customer",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "Address",
                    "City",
                    "Company",
                    "Country",
                    "CustomerId",
                    "Email",
                    "Fax",
                    "FirstName",
                    "LastName",
                    "Phone",
                    "PostalCode",
                    "State",
                    "SupportRepId"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Customer",
            "objectType": "Customer",
            "orderableFields": [
              {
                "fieldName": "Address",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "City",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Company",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Country",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "CustomerId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Email",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Fax",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "FirstName",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "LastName",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Phone",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "PostalCode",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "State",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "SupportRepId",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "CustomerByID",
                  "uniqueIdentifier": ["CustomerId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Customer"
              },
              "orderByExpressionType": "CustomerOrderBy"
            },
            "source": {
              "collection": "Customer",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Customer",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "timestamp",
            "graphql": {
              "typeName": "timestamp"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "timestamp",
            "representation": "timestamp",
            "graphql": {
              "comparisonExpressionTypeName": "timestampComparisonExp"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "CustomInt",
            "description": "customInt description",
            "graphql": {
              "typeName": "CustomInt"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "int8",
            "representation": "CustomInt"
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Employee",
            "graphql": {
              "typeName": "employee",
              "inputTypeName": "employeeInput"
            },
            "fields": [
              {
                "name": "Address",
                "type": "varchar"
              },
              {
                "name": "BirthDate",
                "type": "timestamp"
              },
              {
                "name": "City",
                "type": "varchar"
              },
              {
                "name": "Country",
                "type": "varchar"
              },
              {
                "name": "Email",
                "type": "varchar"
              },
              {
                "name": "EmployeeId",
                "type": "int4!"
              },
              {
                "name": "Fax",
                "type": "varchar"
              },
              {
                "name": "FirstName",
                "type": "varchar!"
              },
              {
                "name": "HireDate",
                "type": "timestamp"
              },
              {
                "name": "LastName",
                "type": "varchar!"
              },
              {
                "name": "Phone",
                "type": "varchar"
              },
              {
                "name": "PostalCode",
                "type": "varchar"
              },
              {
                "name": "ReportsTo",
                "type": "int4"
              },
              {
                "name": "State",
                "type": "varchar"
              },
              {
                "name": "Title",
                "type": "varchar"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Employee",
                "fieldMapping": {
                  "Address": {
                    "column": {
                      "name": "Address"
                    }
                  },
                  "BirthDate": {
                    "column": {
                      "name": "BirthDate"
                    }
                  },
                  "City": {
                    "column": {
                      "name": "City"
                    }
                  },
                  "Country": {
                    "column": {
                      "name": "Country"
                    }
                  },
                  "Email": {
                    "column": {
                      "name": "Email"
                    }
                  },
                  "EmployeeId": {
                    "column": {
                      "name": "EmployeeId"
                    }
                  },
                  "Fax": {
                    "column": {
                      "name": "Fax"
                    }
                  },
                  "FirstName": {
                    "column": {
                      "name": "FirstName"
                    }
                  },
                  "HireDate": {
                    "column": {
                      "name": "HireDate"
                    }
                  },
                  "LastName": {
                    "column": {
                      "name": "LastName"
                    }
                  },
                  "Phone": {
                    "column": {
                      "name": "Phone"
                    }
                  },
                  "PostalCode": {
                    "column": {
                      "name": "PostalCode"
                    }
                  },
                  "ReportsTo": {
                    "column": {
                      "name": "ReportsTo"
                    }
                  },
                  "State": {
                    "column": {
                      "name": "State"
                    }
                  },
                  "Title": {
                    "column": {
                      "name": "Title"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Employee",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "Address",
                    "BirthDate",
                    "City",
                    "Country",
                    "Email",
                    "EmployeeId",
                    "Fax",
                    "FirstName",
                    "HireDate",
                    "LastName",
                    "Phone",
                    "PostalCode",
                    "ReportsTo",
                    "State",
                    "Title"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Employee",
            "objectType": "Employee",
            "orderableFields": [
              {
                "fieldName": "Address",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "BirthDate",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "City",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Country",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Email",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "EmployeeId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Fax",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "FirstName",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "HireDate",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "LastName",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Phone",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "PostalCode",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "ReportsTo",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "State",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Title",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "EmployeeByID",
                  "uniqueIdentifier": ["EmployeeId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Employee"
              },
              "orderByExpressionType": "EmployeeOrderBy"
            },
            "source": {
              "collection": "Employee",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Employee",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Genre",
            "graphql": {
              "typeName": "genre",
              "inputTypeName": "genreInput"
            },
            "fields": [
              {
                "name": "GenreId",
                "type": "int4!"
              },
              {
                "name": "Name",
                "type": "varchar"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Genre",
                "fieldMapping": {
                  "GenreId": {
                    "column": {
                      "name": "GenreId"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Genre",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["GenreId", "Name"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Genre",
            "objectType": "Genre",
            "orderableFields": [
              {
                "fieldName": "GenreId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "GenreByID",
                  "uniqueIdentifier": ["GenreId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Genre"
              },
              "orderByExpressionType": "GenreOrderBy"
            },
            "source": {
              "collection": "Genre",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Genre",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "numeric",
            "graphql": {
              "typeName": "numeric"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "numeric",
            "representation": "numeric",
            "graphql": {
              "comparisonExpressionTypeName": "numericComparisonExp"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Invoice",
            "graphql": {
              "typeName": "invoice",
              "inputTypeName": "invoiceInput"
            },
            "fields": [
              {
                "name": "BillingAddress",
                "type": "varchar"
              },
              {
                "name": "BillingCity",
                "type": "varchar"
              },
              {
                "name": "BillingCountry",
                "type": "varchar"
              },
              {
                "name": "BillingPostalCode",
                "type": "varchar"
              },
              {
                "name": "BillingState",
                "type": "varchar"
              },
              {
                "name": "CustomerId",
                "type": "int4!"
              },
              {
                "name": "InvoiceDate",
                "type": "timestamp!"
              },
              {
                "name": "InvoiceId",
                "type": "int4!"
              },
              {
                "name": "Total",
                "type": "numeric!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Invoice",
                "fieldMapping": {
                  "BillingAddress": {
                    "column": {
                      "name": "BillingAddress"
                    }
                  },
                  "BillingCity": {
                    "column": {
                      "name": "BillingCity"
                    }
                  },
                  "BillingCountry": {
                    "column": {
                      "name": "BillingCountry"
                    }
                  },
                  "BillingPostalCode": {
                    "column": {
                      "name": "BillingPostalCode"
                    }
                  },
                  "BillingState": {
                    "column": {
                      "name": "BillingState"
                    }
                  },
                  "CustomerId": {
                    "column": {
                      "name": "CustomerId"
                    }
                  },
                  "InvoiceDate": {
                    "column": {
                      "name": "InvoiceDate"
                    }
                  },
                  "InvoiceId": {
                    "column": {
                      "name": "InvoiceId"
                    }
                  },
                  "Total": {
                    "column": {
                      "name": "Total"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Invoice",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "BillingAddress",
                    "BillingCity",
                    "BillingCountry",
                    "BillingPostalCode",
                    "BillingState",
                    "CustomerId",
                    "InvoiceDate",
                    "InvoiceId",
                    "Total"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Invoice",
            "objectType": "Invoice",
            "orderableFields": [
              {
                "fieldName": "BillingAddress",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "BillingCity",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "BillingCountry",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "BillingPostalCode",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "BillingState",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "CustomerId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "InvoiceDate",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "InvoiceId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Total",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "InvoiceByID",
                  "uniqueIdentifier": ["InvoiceId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Invoice"
              },
              "orderByExpressionType": "InvoiceOrderBy"
            },
            "source": {
              "collection": "Invoice",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Invoice",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "InvoiceLine",
            "graphql": {
              "typeName": "invoiceLine",
              "inputTypeName": "invoiceLineInput"
            },
            "fields": [
              {
                "name": "InvoiceId",
                "type": "int4!"
              },
              {
                "name": "InvoiceLineId",
                "type": "int4!"
              },
              {
                "name": "Quantity",
                "type": "int4!"
              },
              {
                "name": "TrackId",
                "type": "int4!"
              },
              {
                "name": "UnitPrice",
                "type": "numeric!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "InvoiceLine",
                "fieldMapping": {
                  "InvoiceId": {
                    "column": {
                      "name": "InvoiceId"
                    }
                  },
                  "InvoiceLineId": {
                    "column": {
                      "name": "InvoiceLineId"
                    }
                  },
                  "Quantity": {
                    "column": {
                      "name": "Quantity"
                    }
                  },
                  "TrackId": {
                    "column": {
                      "name": "TrackId"
                    }
                  },
                  "UnitPrice": {
                    "column": {
                      "name": "UnitPrice"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "InvoiceLine",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "InvoiceId",
                    "InvoiceLineId",
                    "Quantity",
                    "TrackId",
                    "UnitPrice"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "InvoiceLine",
            "objectType": "InvoiceLine",
            "orderableFields": [
              {
                "fieldName": "InvoiceId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "InvoiceLineId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Quantity",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "TrackId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "UnitPrice",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "InvoiceLineByID",
                  "uniqueIdentifier": ["InvoiceLineId"]
                }
              ],
              "selectMany": {
                "queryRootField": "InvoiceLine"
              },
              "orderByExpressionType": "InvoiceLineOrderBy"
            },
            "source": {
              "collection": "InvoiceLine",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "InvoiceLine",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "MediaType",
            "graphql": {
              "typeName": "mediaType",
              "inputTypeName": "mediaTypeInput"
            },
            "fields": [
              {
                "name": "MediaTypeId",
                "type": "int4!"
              },
              {
                "name": "Name",
                "type": "varchar"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "MediaType",
                "fieldMapping": {
                  "MediaTypeId": {
                    "column": {
                      "name": "MediaTypeId"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "MediaType",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["MediaTypeId", "Name"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "MediaType",
            "objectType": "MediaType",
            "orderableFields": [
              {
                "fieldName": "MediaTypeId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "MediaTypeByID",
                  "uniqueIdentifier": ["MediaTypeId"]
                }
              ],
              "selectMany": {
                "queryRootField": "MediaType"
              },
              "orderByExpressionType": "MediaTypeOrderBy"
            },
            "source": {
              "collection": "MediaType",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "MediaType",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Playlist",
            "graphql": {
              "typeName": "playlist",
              "inputTypeName": "playlistInput"
            },
            "fields": [
              {
                "name": "Name",
                "type": "varchar"
              },
              {
                "name": "PlaylistId",
                "type": "int4!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Playlist",
                "fieldMapping": {
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  },
                  "PlaylistId": {
                    "column": {
                      "name": "PlaylistId"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Playlist",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["Name", "PlaylistId"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Playlist",
            "objectType": "Playlist",
            "orderableFields": [
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "PlaylistId",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "PlaylistByID",
                  "uniqueIdentifier": ["PlaylistId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Playlist"
              },
              "orderByExpressionType": "PlaylistOrderBy"
            },
            "source": {
              "collection": "Playlist",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Playlist",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "PlaylistTrack",
            "graphql": {
              "typeName": "playlistTrack",
              "inputTypeName": "playlistTrackInput"
            },
            "fields": [
              {
                "name": "PlaylistId",
                "type": "int4!"
              },
              {
                "name": "TrackId",
                "type": "int4!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "PlaylistTrack",
                "fieldMapping": {
                  "PlaylistId": {
                    "column": {
                      "name": "PlaylistId"
                    }
                  },
                  "TrackId": {
                    "column": {
                      "name": "TrackId"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "PlaylistTrack",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["PlaylistId", "TrackId"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "PlaylistTrack",
            "objectType": "PlaylistTrack",
            "orderableFields": [
              {
                "fieldName": "PlaylistId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "TrackId",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "PlaylistTrackByPK",
                  "uniqueIdentifier": ["PlaylistId", "TrackId"]
                }
              ],
              "selectMany": {
                "queryRootField": "PlaylistTrack"
              },
              "orderByExpressionType": "PlaylistTrackOrderBy"
            },
            "source": {
              "collection": "PlaylistTrack",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "PlaylistTrack",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Track",
            "graphql": {
              "typeName": "track",
              "inputTypeName": "trackInput"
            },
            "fields": [
              {
                "name": "AlbumId",
                "type": "int4"
              },
              {
                "name": "Bytes",
                "type": "int4"
              },
              {
                "name": "Composer",
                "type": "varchar"
              },
              {
                "name": "GenreId",
                "type": "int4"
              },
              {
                "name": "MediaTypeId",
                "type": "int4!"
              },
              {
                "name": "Milliseconds",
                "type": "int4!"
              },
              {
                "name": "Name",
                "type": "varchar!"
              },
              {
                "name": "TrackId",
                "type": "int4!"
              },
              {
                "name": "UnitPrice",
                "type": "numeric!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "Track",
                "fieldMapping": {
                  "AlbumId": {
                    "column": {
                      "name": "AlbumId"
                    }
                  },
                  "Bytes": {
                    "column": {
                      "name": "Bytes"
                    }
                  },
                  "Composer": {
                    "column": {
                      "name": "Composer"
                    }
                  },
                  "GenreId": {
                    "column": {
                      "name": "GenreId"
                    }
                  },
                  "MediaTypeId": {
                    "column": {
                      "name": "MediaTypeId"
                    }
                  },
                  "Milliseconds": {
                    "column": {
                      "name": "Milliseconds"
                    }
                  },
                  "Name": {
                    "column": {
                      "name": "Name"
                    }
                  },
                  "TrackId": {
                    "column": {
                      "name": "TrackId"
                    }
                  },
                  "UnitPrice": {
                    "column": {
                      "name": "UnitPrice"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Track",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "AlbumId",
                    "Bytes",
                    "Composer",
                    "GenreId",
                    "MediaTypeId",
                    "Milliseconds",
                    "Name",
                    "TrackId",
                    "UnitPrice"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Track_bool_exp",
            "operand": {
              "object": {
                "type": "Track",
                "comparableFields": [
                  {
                    "fieldName": "AlbumId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "Bytes",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "Composer",
                    "booleanExpressionType": "varchar_bool_exp"
                  },
                  {
                    "fieldName": "GenreId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "MediaTypeId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "Milliseconds",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "Name",
                    "booleanExpressionType": "varchar_bool_exp"
                  },
                  {
                    "fieldName": "TrackId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "UnitPrice",
                    "booleanExpressionType": "numeric_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": false
            },
            "graphql": {
              "typeName": "Track_bool_exp"
            }
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "Track_order_by",
            "operand": {
              "object": {
                "orderedType": "Track",
                "orderableFields": [
                  {
                    "fieldName": "AlbumId",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "Bytes",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "Composer",
                    "orderByExpression": "varchar_order_by"
                  },
                  {
                    "fieldName": "GenreId",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "MediaTypeId",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "Milliseconds",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "Name",
                    "orderByExpression": "varchar_order_by"
                  },
                  {
                    "fieldName": "TrackId",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "UnitPrice",
                    "orderByExpression": "numeric_order_by"
                  }
                ],
                "orderableRelationships": []
              }
            },
            "graphql": {
              "expressionTypeName": "Track_order_by"
            }
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "Track",
            "objectType": "Track",
            "filterExpressionType": "Track_bool_exp",
            "orderableFields": [
              {
                "fieldName": "AlbumId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Bytes",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Composer",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "GenreId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "MediaTypeId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Milliseconds",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "Name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "TrackId",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "UnitPrice",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "TrackByID",
                  "uniqueIdentifier": ["TrackId"]
                }
              ],
              "selectMany": {
                "queryRootField": "Track"
              },
              "orderByExpressionType": "TrackOrderBy"
            },
            "source": {
              "collection": "Track",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Track",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "spatial_ref_sys",
            "graphql": {
              "typeName": "spatialRefSys",
              "inputTypeName": "spatialRefSysInput"
            },
            "fields": [
              {
                "name": "auth_name",
                "type": "varchar"
              },
              {
                "name": "auth_srid",
                "type": "int4"
              },
              {
                "name": "proj4text",
                "type": "varchar"
              },
              {
                "name": "srid",
                "type": "int4!"
              },
              {
                "name": "srtext",
                "type": "varchar"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "spatial_ref_sys",
                "fieldMapping": {
                  "auth_name": {
                    "column": {
                      "name": "auth_name"
                    }
                  },
                  "auth_srid": {
                    "column": {
                      "name": "auth_srid"
                    }
                  },
                  "proj4text": {
                    "column": {
                      "name": "proj4text"
                    }
                  },
                  "srid": {
                    "column": {
                      "name": "srid"
                    }
                  },
                  "srtext": {
                    "column": {
                      "name": "srtext"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "spatial_ref_sys",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "auth_name",
                    "auth_srid",
                    "proj4text",
                    "srid",
                    "srtext"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "spatial_ref_sys",
            "objectType": "spatial_ref_sys",
            "orderableFields": [
              {
                "fieldName": "auth_name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "auth_srid",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "proj4text",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "srid",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "srtext",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "SpatialRefSysSrID",
                  "uniqueIdentifier": ["srid"]
                }
              ],
              "selectMany": {
                "queryRootField": "SpatialRefSys"
              },
              "orderByExpressionType": "SpatialRefSysOrderBy"
            },
            "source": {
              "collection": "spatial_ref_sys",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "spatial_ref_sys",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "topology_layer",
            "graphql": {
              "typeName": "topologyLayer",
              "inputTypeName": "topologyLayerInput"
            },
            "fields": [
              {
                "name": "child_id",
                "type": "int4"
              },
              {
                "name": "feature_column",
                "type": "varchar!"
              },
              {
                "name": "feature_type",
                "type": "int4!"
              },
              {
                "name": "layer_id",
                "type": "int4!"
              },
              {
                "name": "level",
                "type": "int4!"
              },
              {
                "name": "schema_name",
                "type": "varchar!"
              },
              {
                "name": "table_name",
                "type": "varchar!"
              },
              {
                "name": "topology_id",
                "type": "int4!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "topology_layer",
                "fieldMapping": {
                  "child_id": {
                    "column": {
                      "name": "child_id"
                    }
                  },
                  "feature_column": {
                    "column": {
                      "name": "feature_column"
                    }
                  },
                  "feature_type": {
                    "column": {
                      "name": "feature_type"
                    }
                  },
                  "layer_id": {
                    "column": {
                      "name": "layer_id"
                    }
                  },
                  "level": {
                    "column": {
                      "name": "level"
                    }
                  },
                  "schema_name": {
                    "column": {
                      "name": "schema_name"
                    }
                  },
                  "table_name": {
                    "column": {
                      "name": "table_name"
                    }
                  },
                  "topology_id": {
                    "column": {
                      "name": "topology_id"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "topology_layer",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "child_id",
                    "feature_column",
                    "feature_type",
                    "layer_id",
                    "level",
                    "schema_name",
                    "table_name",
                    "topology_id"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "topology_layer",
            "objectType": "topology_layer",
            "orderableFields": [
              {
                "fieldName": "child_id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "feature_column",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "feature_type",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "layer_id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "level",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "schema_name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "table_name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "topology_id",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "LayerPkey",
                  "uniqueIdentifier": ["layer_id", "topology_id"]
                },
                {
                  "queryRootField": "LayerSchemaNameTableNameFeatureColumnKey",
                  "uniqueIdentifier": [
                    "feature_column",
                    "schema_name",
                    "table_name"
                  ]
                }
              ],
              "selectMany": {
                "queryRootField": "TopologyLayer"
              },
              "orderByExpressionType": "TopologyLayerOrderBy"
            },
            "source": {
              "collection": "topology_layer",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "topology_layer",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "bool",
            "graphql": {
              "typeName": "bool"
            }
          }
        },
        {
          "kind": "ScalarType",
          "version": "v1",
          "definition": {
            "name": "float8",
            "graphql": {
              "typeName": "float8"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "bool",
            "representation": "bool",
            "graphql": {
              "comparisonExpressionTypeName": "boolComparisonExp"
            }
          }
        },
        {
          "kind": "DataConnectorScalarRepresentation",
          "version": "v1",
          "definition": {
            "dataConnectorName": "db",
            "dataConnectorScalarType": "float8",
            "representation": "float8",
            "graphql": {
              "comparisonExpressionTypeName": "float8ComparisonExp"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "topology_topology",
            "graphql": {
              "typeName": "topologyTopology",
              "inputTypeName": "topologyTopologyInput"
            },
            "fields": [
              {
                "name": "hasz",
                "type": "bool!"
              },
              {
                "name": "id",
                "type": "int4!"
              },
              {
                "name": "name",
                "type": "varchar!"
              },
              {
                "name": "precision",
                "type": "float8!"
              },
              {
                "name": "srid",
                "type": "int4!"
              }
            ],
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "topology_topology",
                "fieldMapping": {
                  "hasz": {
                    "column": {
                      "name": "hasz"
                    }
                  },
                  "id": {
                    "column": {
                      "name": "id"
                    }
                  },
                  "name": {
                    "column": {
                      "name": "name"
                    }
                  },
                  "precision": {
                    "column": {
                      "name": "precision"
                    }
                  },
                  "srid": {
                    "column": {
                      "name": "srid"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "topology_topology",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["hasz", "id", "name", "precision", "srid"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v1",
          "definition": {
            "name": "topology_topology",
            "objectType": "topology_topology",
            "orderableFields": [
              {
                "fieldName": "hasz",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "id",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "name",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "precision",
                "orderByDirections": {
                  "enableAll": true
                }
              },
              {
                "fieldName": "srid",
                "orderByDirections": {
                  "enableAll": true
                }
              }
            ],
            "arguments": [],
            "graphql": {
              "selectUniques": [
                {
                  "queryRootField": "TopologyTopologyByName",
                  "uniqueIdentifier": ["name"]
                },
                {
                  "queryRootField": "TopologyTopologyById",
                  "uniqueIdentifier": ["id"]
                }
              ],
              "selectMany": {
                "queryRootField": "TopologyTopology"
              },
              "orderByExpressionType": "TopologyTopologyOrderBy"
            },
            "source": {
              "collection": "topology_topology",
              "dataConnectorName": "db"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "topology_topology",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "commandAuthor",
            "fields": [
              {
                "name": "id",
                "type": "Int!"
              },
              {
                "name": "first_name",
                "type": "String!"
              },
              {
                "name": "last_name",
                "type": "String!"
              }
            ],
            "graphql": {
              "typeName": "CommandAuthor"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "author",
                "fieldMapping": {
                  "id": {
                    "column": {
                      "name": "id"
                    }
                  },
                  "first_name": {
                    "column": {
                      "name": "first_name"
                    }
                  },
                  "last_name": {
                    "column": {
                      "name": "last_name"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "commandAuthor",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["id", "first_name", "last_name"]
                }
              },
              {
                "role": "user",
                "output": {
                  "allowedFields": ["id", "first_name", "last_name"]
                }
              }
            ]
          }
        },
        {
          "kind": "Model",
          "version": "v2",
          "definition": {
            "name": "Institution",
            "objectType": "Institution",
            "source": {
              "dataConnectorName": "db",
              "collection": "institution"
            },
            "filterExpressionType": "Institution_bool_exp",
            "orderByExpression": "Institution_order_by",
            "graphql": {
              "selectMany": {
                "queryRootField": "Institution"
              },
              "selectUniques": [
                {
                  "queryRootField": "InstitutionById",
                  "uniqueIdentifier": ["id"]
                }
              ],
              "aggregate": {
                "queryRootField": "InstitutionAggregate"
              }
            }
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "Institution_order_by",
            "operand": {
              "object": {
                "orderedType": "Institution",
                "orderableFields": [
                  {
                    "fieldName": "id",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "name",
                    "orderByExpression": "String_order_by"
                  },
                  {
                    "fieldName": "location",
                    "orderByExpression": "Location_order_by"
                  },
                  {
                    "fieldName": "songs",
                    "orderByExpression": "InstitutionSongs_order_by"
                  }
                ],
                "orderableRelationships": []
              }
            },
            "graphql": {
              "expressionTypeName": "Institution_order_by"
            }
          }
        },
        {
          "kind": "ModelPermissions",
          "version": "v1",
          "definition": {
            "modelName": "Institution",
            "permissions": [
              {
                "role": "admin",
                "select": {
                  "filter": null
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Institution",
            "fields": [
              {
                "name": "departments",
                "type": "[String]"
              },
              {
                "name": "id",
                "type": "int4!"
              },
              {
                "name": "location",
                "type": "Location"
              },
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "songs",
                "type": "InstitutionSongs"
              },
              {
                "name": "staff",
                "type": "[Staff]"
              }
            ],
            "graphql": {
              "typeName": "Institution",
              "inputTypeName": "InstitutionInput"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "institution"
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Institution",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "departments",
                    "id",
                    "location",
                    "name",
                    "songs",
                    "staff"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Location",
            "fields": [
              {
                "name": "campuses",
                "type": "[String]"
              },
              {
                "name": "city",
                "type": "String"
              },
              {
                "name": "country",
                "type": "Country"
              }
            ],
            "graphql": {
              "typeName": "Location",
              "inputTypeName": "LocationInput"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "location"
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Location",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["campuses", "city", "country"]
                }
              }
            ]
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "Location_order_by",
            "operand": {
              "object": {
                "orderedType": "Location",
                "orderableFields": [
                  {
                    "fieldName": "city",
                    "orderByExpression": "String_order_by"
                  },
                  {
                    "fieldName": "country",
                    "orderByExpression": "Country_order_by"
                  }
                ],
                "orderableRelationships": []
              }
            },
            "graphql": {
              "expressionTypeName": "Location_order_by"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Country",
            "fields": [
              {
                "name": "continent",
                "type": "String"
              },
              {
                "name": "name",
                "type": "String"
              }
            ],
            "graphql": {
              "typeName": "Country",
              "inputTypeName": "CountryInput"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "country"
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Country",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["continent", "name"]
                }
              }
            ]
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "Country_order_by",
            "operand": {
              "object": {
                "orderedType": "Country",
                "orderableFields": [
                  {
                    "fieldName": "continent",
                    "orderByExpression": "String_order_by"
                  },
                  {
                    "fieldName": "name",
                    "orderByExpression": "String_order_by"
                  }
                ],
                "orderableRelationships": []
              }
            },
            "graphql": {
              "expressionTypeName": "Country_order_by"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "InstitutionSongs",
            "fields": [
              {
                "name": "primaryAnthemTrackId",
                "type": "int4"
              },
              {
                "name": "secondaryAnthemTrackId",
                "type": "int4"
              }
            ],
            "graphql": {
              "typeName": "InstitutionSongs",
              "inputTypeName": "InstitutionSongsInput"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "institution_songs",
                "fieldMapping": {
                  "primaryAnthemTrackId": {
                    "column": {
                      "name": "primary_anthem_track_id"
                    }
                  },
                  "secondaryAnthemTrackId": {
                    "column": {
                      "name": "secondary_anthem_track_id"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "InstitutionSongs",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "primaryAnthemTrackId",
                    "secondaryAnthemTrackId"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "OrderByExpression",
          "version": "v1",
          "definition": {
            "name": "InstitutionSongs_order_by",
            "operand": {
              "object": {
                "orderedType": "InstitutionSongs",
                "orderableFields": [
                  {
                    "fieldName": "primaryAnthemTrackId",
                    "orderByExpression": "int4_order_by"
                  },
                  {
                    "fieldName": "secondaryAnthemTrackId",
                    "orderByExpression": "int4_order_by"
                  }
                ],
                "orderableRelationships": [
                  {
                    "relationshipName": "primaryAnthemTrack",
                    "orderByExpression": "Track_order_by"
                  },
                  {
                    "relationshipName": "secondaryAnthemTrack",
                    "orderByExpression": "Track_order_by"
                  }
                ]
              }
            },
            "graphql": {
              "expressionTypeName": "InstitutionSongs_order_by"
            }
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Staff",
            "fields": [
              {
                "name": "favouriteArtistId",
                "type": "int4"
              },
              {
                "name": "firstName",
                "type": "String"
              },
              {
                "name": "lastName",
                "type": "String"
              },
              {
                "name": "pets",
                "type": "[Pet]"
              },
              {
                "name": "specialities",
                "type": "[String]"
              }
            ],
            "graphql": {
              "typeName": "Staff",
              "inputTypeName": "StaffInput"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "staff",
                "fieldMapping": {
                  "favouriteArtistId": {
                    "column": {
                      "name": "favourite_artist_id"
                    }
                  },
                  "firstName": {
                    "column": {
                      "name": "first_name"
                    }
                  },
                  "lastName": {
                    "column": {
                      "name": "last_name"
                    }
                  },
                  "pets": {
                    "column": {
                      "name": "pets"
                    }
                  },
                  "specialities": {
                    "column": {
                      "name": "specialities"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Staff",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": [
                    "favouriteArtistId",
                    "firstName",
                    "lastName",
                    "pets",
                    "specialities"
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "ObjectType",
          "version": "v1",
          "definition": {
            "name": "Pet",
            "fields": [
              {
                "name": "age",
                "type": "int4"
              },
              {
                "name": "name",
                "type": "String"
              }
            ],
            "graphql": {
              "typeName": "Pet",
              "inputTypeName": "PetInput"
            },
            "dataConnectorTypeMapping": [
              {
                "dataConnectorName": "db",
                "dataConnectorObjectType": "pet"
              }
            ]
          }
        },
        {
          "kind": "TypePermissions",
          "version": "v1",
          "definition": {
            "typeName": "Pet",
            "permissions": [
              {
                "role": "admin",
                "output": {
                  "allowedFields": ["age", "name"]
                }
              }
            ]
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Institution_bool_exp",
            "operand": {
              "object": {
                "type": "Institution",
                "comparableFields": [
                  {
                    "fieldName": "id",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "location",
                    "booleanExpressionType": "Location_bool_exp"
                  },
                  {
                    "fieldName": "name",
                    "booleanExpressionType": "String_bool_exp"
                  },
                  {
                    "fieldName": "songs",
                    "booleanExpressionType": "InstitutionSongs_bool_exp"
                  },
                  {
                    "fieldName": "staff",
                    "booleanExpressionType": "Staff_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "InstitutionBoolExp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Location_bool_exp",
            "operand": {
              "object": {
                "type": "Location",
                "comparableFields": [
                  {
                    "fieldName": "city",
                    "booleanExpressionType": "String_bool_exp"
                  },
                  {
                    "fieldName": "country",
                    "booleanExpressionType": "Country_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "LocationBoolExp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Country_bool_exp",
            "operand": {
              "object": {
                "type": "Country",
                "comparableFields": [
                  {
                    "fieldName": "continent",
                    "booleanExpressionType": "String_bool_exp"
                  },
                  {
                    "fieldName": "name",
                    "booleanExpressionType": "String_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "CountryBoolExp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "InstitutionSongs_bool_exp",
            "operand": {
              "object": {
                "type": "InstitutionSongs",
                "comparableFields": [
                  {
                    "fieldName": "primaryAnthemTrackId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "secondaryAnthemTrackId",
                    "booleanExpressionType": "int4_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "InstitutionSongsBoolExp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Staff_bool_exp",
            "operand": {
              "object": {
                "type": "Staff",
                "comparableFields": [
                  {
                    "fieldName": "favouriteArtistId",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "firstName",
                    "booleanExpressionType": "String_bool_exp"
                  },
                  {
                    "fieldName": "lastName",
                    "booleanExpressionType": "String_bool_exp"
                  },
                  {
                    "fieldName": "pets",
                    "booleanExpressionType": "Pet_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "StaffBoolExp"
            }
          }
        },
        {
          "kind": "BooleanExpressionType",
          "version": "v1",
          "definition": {
            "name": "Pet_bool_exp",
            "operand": {
              "object": {
                "type": "Pet",
                "comparableFields": [
                  {
                    "fieldName": "age",
                    "booleanExpressionType": "int4_bool_exp"
                  },
                  {
                    "fieldName": "name",
                    "booleanExpressionType": "String_bool_exp"
                  }
                ],
                "comparableRelationships": []
              }
            },
            "logicalOperators": {
              "enable": true
            },
            "isNull": {
              "enable": true
            },
            "graphql": {
              "typeName": "PetBoolExp"
            }
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "sourceType": "InstitutionSongs",
            "name": "primaryAnthemTrack",
            "target": {
              "model": {
                "name": "Track",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "primaryAnthemTrackId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "sourceType": "InstitutionSongs",
            "name": "secondaryAnthemTrack",
            "target": {
              "model": {
                "name": "Track",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "secondaryAnthemTrackId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "sourceType": "Staff",
            "name": "favouriteArtist",
            "target": {
              "model": {
                "name": "Artist",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "favouriteArtistId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "sourceType": "author",
            "name": "Articles",
            "deprecated": {
              "reason": "No more articles anymore"
            },
            "target": {
              "model": {
                "name": "Articles",
                "relationshipType": "Array"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "author_id"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "author_id"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "sourceType": "article",
            "name": "Author",
            "target": {
              "model": {
                "name": "Authors",
                "relationshipType": "Object"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "author_id"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "author_id"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Artist",
            "sourceType": "Album",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Artist"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Albums",
            "sourceType": "Artist",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "Album"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "ArtistId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Employee",
            "sourceType": "Customer",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Employee"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "SupportRepId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "EmployeeId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Customers",
            "sourceType": "Employee",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "Customer"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "EmployeeId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "SupportRepId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Employee",
            "sourceType": "Employee",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Employee"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "ReportsTo"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "EmployeeId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Employees",
            "sourceType": "Employee",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "Employee"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "EmployeeId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "ReportsTo"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Customer",
            "sourceType": "Invoice",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Customer"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "CustomerId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "CustomerId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Invoices",
            "sourceType": "Customer",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "Invoice"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "CustomerId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "CustomerId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Invoice",
            "sourceType": "InvoiceLine",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Invoice"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "InvoiceId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "InvoiceId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "InvoiceLines",
            "sourceType": "Invoice",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "InvoiceLine"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "InvoiceId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "InvoiceId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Track",
            "sourceType": "InvoiceLine",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Track"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "InvoiceLines",
            "sourceType": "Track",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "InvoiceLine"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Playlist",
            "sourceType": "PlaylistTrack",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Playlist"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "PlaylistId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "PlaylistId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "PlaylistTracks",
            "sourceType": "Playlist",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "PlaylistTrack"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "PlaylistId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "PlaylistId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Track",
            "sourceType": "PlaylistTrack",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Track"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "PlaylistTracks",
            "sourceType": "Track",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "PlaylistTrack"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "TrackId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Album",
            "sourceType": "Track",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Album"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Tracks",
            "sourceType": "Album",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "Track"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "AlbumId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Genre",
            "sourceType": "Track",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "Genre"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "GenreId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "GenreId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Tracks",
            "sourceType": "Genre",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "Track"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "GenreId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "GenreId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "MediaType",
            "sourceType": "Track",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "MediaType"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "MediaTypeId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "MediaTypeId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "Tracks",
            "sourceType": "MediaType",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "Track"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "MediaTypeId"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "MediaTypeId"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "topology_topology",
            "sourceType": "topology_layer",
            "target": {
              "model": {
                "relationshipType": "Object",
                "name": "topology_topology"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "topology_id"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "id"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "Relationship",
          "version": "v1",
          "definition": {
            "name": "topology_layers",
            "sourceType": "topology_topology",
            "target": {
              "model": {
                "relationshipType": "Array",
                "name": "topology_layer"
              }
            },
            "mapping": [
              {
                "source": {
                  "fieldPath": [
                    {
                      "fieldName": "id"
                    }
                  ]
                },
                "target": {
                  "modelField": [
                    {
                      "fieldName": "topology_id"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "kind": "GraphqlConfig",
          "version": "v1",
          "definition": {
            "query": {
              "rootOperationTypeName": "Query",
              "argumentsInput": {
                "fieldName": "args"
              },
              "limitInput": {
                "fieldName": "limit"
              },
              "offsetInput": {
                "fieldName": "offset"
              },
              "filterInput": {
                "fieldName": "where",
                "operatorNames": {
                  "and": "_and",
                  "or": "_or",
                  "not": "_not",
                  "isNull": "_is_null"
                }
              },
              "orderByInput": {
                "fieldName": "order_by",
                "enumDirectionValues": {
                  "asc": "Asc",
                  "desc": "Desc"
                },
                "enumTypeNames": [
                  {
                    "directions": ["Asc", "Desc"],
                    "typeName": "OrderByAscDesc"
                  }
                ]
              }
            },
            "mutation": {
              "rootOperationTypeName": "Mutation"
            },
            "apolloFederation": {
              "enableRootFields": true
            }
          }
        }
      ]
    }
  ],
  "flags": {
    "require_graphql_config": true,
    "require_valid_ndc_v01_version": true,
    "bypass_relation_comparisons_ndc_capability": true,
    "require_nested_array_filtering_capability": true,
    "disallow_scalar_type_names_conflicting_with_inbuilt_types": true,
    "propagate_boolean_expression_deprecation_status": true,
    "require_unique_command_graphql_names": true,
    "allow_partial_supergraph": false,
    "json_session_variables": true,
    "disallow_array_field_compared_with_scalar_boolean_type": true,
    "allow_boolean_expression_fields_without_graphql": true,
    "require_unique_model_graphql_names": true,
    "logical_operators_in_scalar_boolean_expressions": true,
    "disallow_duplicate_names_in_boolean_expressions": true,
    "disallow_multiple_input_object_fields_in_graphql_order_by": true
  }
}
